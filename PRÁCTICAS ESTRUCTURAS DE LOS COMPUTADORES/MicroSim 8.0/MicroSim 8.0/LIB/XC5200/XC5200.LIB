* XC5200.LIB

.MODEL D0_TGATE UTGATE ()

.MODEL D0_GATE UGATE ()

.MODEL D0_EFF UEFF ()

.MODEL D0_GFF UGFF ()

* Xilinx X5200 I/O models

.param X5200_VDD 5.0V
.param X5200_VSS 0.0V

.subckt X5200_PWR  AGND
+	optional: VDD=$G_X5200_VDD VSS=$G_X5200_VSS
+	params:   VOLTAGE={X5200_VDD} REFERENCE={X5200_VSS}
*
VVDD  VDD VSS   {VOLTAGE}
R1    VDD AGND  1MEG
VVSS  VSS AGND  {REFERENCE}
R2    VSS AGND  1MEG
.ends
*$

.model IO_X5200 uio (
+	drvh=1649	drvl=1649
+	AtoD1="AtoD_X5200"	AtoD2="AtoD_X5200"
+	AtoD3="AtoD_X5200"	AtoD4="AtoD_X5200"
+	DtoA1="DtoA_X5200"	DtoA2="DtoA_X5200"
+	DtoA3="DtoA_X5200"	DtoA4="DtoA_X5200"
+       tswhl1=7.07ns		tswlh1=8.58ns
+       tswhl2=6.94ns		tswlh2=8.37ns
+       tswhl3=9.33ns		tswlh3=10.73ns
+       tswhl4=9.18ns		tswlh4=10.59ns
+	DIGPOWER="X5200_PWR"
+	)
*$

.model IO_X5200_OC uio (
+	drvh=20K	drvl=1649
+	AtoD1="AtoD_X5200"	AtoD2="AtoD_X5200"
+	AtoD3="AtoD_X5200"	AtoD4="AtoD_X5200"
+	DtoA1="DtoA_X5200"	DtoA2="DtoA_X5200"
+	DtoA3="DtoA_X5200"	DtoA4="DtoA_X5200"
+       tswhl1=7.07ns		tswlh1=8.58ns
+       tswhl2=6.94ns		tswlh2=8.37ns
+       tswhl3=9.33ns		tswlh3=10.73ns
+       tswhl4=9.18ns		tswlh4=10.59ns
+	DIGPOWER="X5200_PWR"
+	)
*$

.model IO_X5200_PULLUP uio (
+	drvh=5K	drvl=1649
+	AtoD1="AtoD_X5200"	AtoD2="AtoD_X5200"
+	AtoD3="AtoD_X5200"	AtoD4="AtoD_X5200"
+	DtoA1="DtoA_X5200"	DtoA2="DtoA_X5200"
+	DtoA3="DtoA_X5200"	DtoA4="DtoA_X5200"
+       tswhl1=7.07ns		tswlh1=8.58ns
+       tswhl2=6.94ns		tswlh2=8.37ns
+       tswhl3=9.33ns		tswlh3=10.73ns
+       tswhl4=9.18ns		tswlh4=10.59ns
+	DIGPOWER="X5200_PWR"
+	)
*$

.subckt AtoD_X5200  A D  DPWR DGND
+	params: CAPACITANCE=0
*
XNORM A NORM DPWR DGND AtoD_NORM_X5200
O0  NORM DGND DOX5200 DGTLNET=D IO_X5200
C1  A DGND {CAPACITANCE+0.1pF}
D1  DGND A    D74CLMP
D2  A    DPWR D74CLMP
.ends
*$
.subckt DtoA_X5200  D A  DPWR DGND
+	params: DRVL=0 DRVH=0 CAPACITANCE=0
*
X1  DPWR DGND DRVPWR DRVGND DtoA_DRIVE_X5200 
N1  A DRVGND DRVPWR DINX5200 DGTLNET=D IO_X5200
C1  A DGND {CAPACITANCE+0.1pF}
.ends
*$
*-------------------------------------------------
* X5200 Input Voltage Normilization Subcircuit
*
* This circuit normalizes the input voltage, so that
* voltages below -0.5 are '0', and above +0.5 are '1'.
* The EVt device "looks up" the threshold voltage for the 
* current power supply voltage in the table.  The data for the
* table comes from the minimum and maximum voltage transfer
* characteristics graph for the X5200.

.subckt AtoD_NORM_X5200 A ANORM DPWR DGND
*
EVt THRESHOLD 0 TABLE {V(DPWR,DGND)} = 1.5,0 3.5,0.6 5,1.5 10,3 15,4
RVt THRESHOLD 0 100k
EN  ANORM DGND VALUE = {(V(A,DGND)-V(DPWR,DGND)/2)/((V(DPWR,DGND)-2*V(THRESHOLD))+1u)}
RN  ANORM DGND 100k
Rld1 A DPWR 100MEG
Rld2 A DGND 100MEG
.ends
*$
*-------------------------------------------------
* X5200 Output Drive Subcircuit
*
* This circuit constructs the correct output drive
* resistance for the power supply voltage.  This resistance is inserted
* in series with the digital input device, and the digital input device 
* resistance is set to a low value when it is on.  The tables provide the 
* output current at 1v VDS for various values of VDD (3V is an estimate)
* from the X5200

.subckt DtoA_DRIVE_X5200 DPWR DGND DRVPWR DRVGND
*
EDRVP DRVP 0 TABLE {V(DPWR,DGND)} = 1.5,0mA 3,0.5mA 5,1.2mA 10,2.0mA 15,3.0mA
EDRVN DRVN 0 TABLE {V(DPWR,DGND)} = 1.5,0mA 3,0.5mA 5,1.5mA 10,4.0mA 15,7.0mA
RDRVP DRVP 0 1K
RDRVN DRVN 0 1K
GPWR DPWR DRVPWR VALUE = {V(DPWR,DRVPWR)*V(DRVP)}
GGND DRVGND DGND VALUE = {V(DRVGND,DGND)*V(DRVN)}
RDUM1 DPWR DRVPWR 100MEG
RDUM2 DGND DRVGND 100MEG
.ends
*$
*-------------------------------------------------
* X5200 Digital Input/Output Models

.model DINX5200 dinput (
+	s0name="0"	s0tsw=15ns	s0rlo=1 	s0rhi=80K
+	s1name="1"	s1tsw=15ns	s1rlo=40K	s1rhi=1
+	s2name="X"	s2tsw=15ns	s2rlo=800	s2rhi=800
+	s3name="R"	s3tsw=15ns	s3rlo=800	s3rhi=800
+	s4name="F"	s4tsw=15ns	s4rlo=800	s4rhi=800
+	s5name="Z"	s5tsw=15ns	s5rlo=1MEG	s5rhi=1MEG
+	)
*$
.model DOX5200 doutput (
+	s0name="X"	s0vlo=-0.5	s0vhi=0.5
+	s1name="0"	s1vlo=-3.0	s1vhi=-0.5
+	s2name="R"	s2vlo=-0.5	s2vhi=0.05
+	s3name="R"	s3vlo=-0.05	s3vhi=0.5
+	s4name="X"	s4vlo=-0.5	s4vhi=0.5
+	s5name="1"	s5vlo= 0.5	s5vhi=3.0
+	s6name="F"	s6vlo=-0.05	s6vhi=0.5
+	s7name="F"	s7vlo=-0.5	s7vhi=0.05
+	)
*$

.SUBCKT X5_BUF IN PI OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: IN_D=0 OUT_D=0

U1 LOGICEXP(3,1) DPWR DGND 
+ IN PI PO OUT
+ X5_BUF
+ IO_X5200
+ LOGIC:
+   OUT = {PO ^ (IN^PI) }

.MODEL X5_BUF UGATE (
+  TPLHMN={IN_D+OUT_D} TPHLMN={IN_D+OUT_D}
+  TPLHMX={IN_D+OUT_D} TPHLMX={IN_D+OUT_D}
+  )

.ENDS X5_BUF


.SUBCKT X5_BUFG IN PI OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: IN_D=0 OUT_D=0

U1 LOGICEXP(3,1) DPWR DGND 
+ IN PI PO OUT
+ X5_BUF
+ IO_X5200
+ LOGIC:
+   OUT = {PO ^ (IN^PI) }

.MODEL X5_BUF UGATE (
+  TPLHMN={IN_D+OUT_D} TPHLMN={IN_D+OUT_D}
+  TPLHMX={IN_D+OUT_D} TPHLMX={IN_D+OUT_D}
+  )

.ENDS X5_BUFG

*$

.SUBCKT X5_IBUF IN PI OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: IN_D=0 OUT_D=0
*
* PI and PO are not used
*
U1 BUF DPWR DGND 
+ IN OUT
+ X5_IBUF
+ IO_X5200

.MODEL X5_IBUF UGATE (
+  TPLHMN={IN_D+OUT_D} TPHLMN={IN_D+OUT_D}
+  TPLHMX={IN_D+OUT_D} TPHLMX={IN_D+OUT_D}
+  )

.ENDS X5_IBUF


.SUBCKT X5_INV IN PI OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: IN_D=0 OUT_D=0

U1 LOGICEXP(3,1) DPWR DGND 
+ IN PI PO OUT
+ X5_INV
+ IO_X5200
+ LOGIC:
+   OUT = {PO ^ ~(IN^PI) }

.MODEL X5_INV UGATE (
+  TPLHMN={IN_D+OUT_D} TPHLMN={IN_D+OUT_D}
+  TPLHMX={IN_D+OUT_D} TPHLMX={IN_D+OUT_D}
+  )

.ENDS X5_INV


*$

.SUBCKT X5_AND2  I0 P0 I1 P1 OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: I0_D=0 I1_D=0 OUT_D=0

U1 LOGICEXP(5,1) DPWR DGND 
+ I0 P0 I1 P1 PO OUT_INT
+ D0_GATE
+ IO_X5200
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) & (I1^P1) ) }

U2 PINDLY(1,0,2) DPWR DGND
+ OUT_INT
+ I0 I1
+ OUT
+ IO_X5200
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X5_AND2


.SUBCKT X5_AND3  I0 P0 I1 P1 I2 P2 OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 OUT_D=0

U1 LOGICEXP(7,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 PO OUT_INT
+ D0_GATE
+ IO_X5200
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) & (I1^P1) & (I2^P2) ) }

U2 PINDLY(1,0,3) DPWR DGND
+ OUT_INT
+ I0 I1 I2
+ OUT
+ IO_X5200
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X5_AND3


.SUBCKT X5_AND4  I0 P0 I1 P1 I2 P2 I3 P3 OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 OUT_D=0

U1 LOGICEXP(9,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 PO OUT_INT
+ D0_GATE
+ IO_X5200
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) & (I1^P1) & (I2^P2) & (I3^P3) ) }

U2 PINDLY(1,0,4) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3
+ OUT
+ IO_X5200
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X5_AND4


.SUBCKT X5_AND5  I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 I4_D=0 OUT_D=0

U1 LOGICEXP(11,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 PO OUT_INT
+ D0_GATE
+ IO_X5200
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) & (I1^P1) & (I2^P2) & (I3^P3) & (I4^P4) ) }

U2 PINDLY(1,0,5) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3 I4
+ OUT
+ IO_X5200
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 CHANGED(I4,0), DELAY(I4_D+OUT_D,-1,I4_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X5_AND5

*$

.SUBCKT X5_CY4 C7 C6 C5 C4 C3 C2 C1 C0 B1 A1 B0 A0 ADD CIN COUT COUT0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS:  A1_D=0 A0_D=0 B1_D=0 B0_D=0 ADD_D=0 CIN_D=0 COUT_D=0


UA1DLY BUF DPWR DGND A1 A1_DLY D_A1 IO_X5200
.MODEL D_A1 UGATE (TPLHMN={A1_D} TPLHMX={A1_D} TPHLMN={A1_D} TPHLMX={A1_D}

UA0DLY BUF DPWR DGND A0 A0_DLY D_A0 IO_X5200
.MODEL D_A0 UGATE (TPLHMN={A0_D} TPLHMX={A0_D} TPHLMN={A0_D} TPHLMX={A0_D}

UB1DLY BUF DPWR DGND B1 B1_DLY D_B1 IO_X5200
.MODEL D_B1 UGATE (TPLHMN={B1_D} TPLHMX={B1_D} TPHLMN={B1_D} TPHLMX={B1_D}

UB0DLY BUF DPWR DGND B0 B0_DLY D_B0 IO_X5200
.MODEL D_B0 UGATE (TPLHMN={B0_D} TPLHMX={B0_D} TPHLMN={B0_D} TPHLMX={B0_D}

UADDDLY BUF DPWR DGND ADD ADD_DLY D_ADD IO_X5200
.MODEL D_ADD UGATE (TPLHMN={ADD_D} TPLHMX={ADD_D} TPHLMN={ADD_D} TPHLMX={ADD_D}

UCINDLY BUF DPWR DGND CIN CIN_DLY D_CIN IO_X5200
.MODEL D_CIN UGATE (TPLHMN={CIN_D} TPLHMX={CIN_D} TPHLMN={CIN_D} TPHLMX={CIN_D}

U1 LOGICEXP(14,5) DPWR DGND
+ B1_DLY A1_DLY B0_DLY A0_DLY ADD_DLY CIN_DLY C7 C6 C5 C4 C3 C2 C1 C0 
+ E0 E1 E2 E3 CONEW
+ D0_GATE
+ IO_X5200
+ LOGIC:
+   N0 = {(C1 & ~C0)|(C0 & ADD_DLY)}
+   E0 = {~(~C6 | (C6 &  (A1_DLY ^ (N0 ^ (~B1_DLY | ~C7)))))}
+   E1 = {~E0}
+   E2 = {~((C2 & ~C3)| (C3 & (A0_DLY ^ (N0 ^ (~B0_DLY | ~C7)))))}
+   E3 = {~E2}
+   CONEW = {(A0_DLY & C4 & C5) | (~ADD_DLY & ~C4 & C5) | (C7 & ~C4 & ~C5)}

U2 BUF3 DPWR DGND A1_DLY E0 COUT_I 
+ D0_TGATE
+ IO_X5200

U3 BUF3 DPWR DGND COUT0_I E1 COUT_I 
+ D0_TGATE
+ IO_X5200

U4 BUF3 DPWR DGND CONEW E2 COUT0_I
+ D0_TGATE
+ IO_X5200

U5 BUF3 DPWR DGND CIN_DLY E3 COUT0_I
+ D0_TGATE
+ IO_X5200

UCOUTDLY BUF DPWR DGND COUT_I COUT
+ D_COUT IO_X5200
.MODEL D_COUT UGATE (TPLHMN={COUT_D} TPLHMX={COUT_D} TPHLMN={COUT_D} TPHLMX={COUT_D}

UCOUT0 BUF DPWR DGND COUT0_I COUT0
+ D0_GATE IO_X5200

.ENDS X5_CY4

*$

.SUBCKT X5_F5_MUX IN1 PI1 IN2 PI2 DIN PDI O PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: I1_D=0 I2_D=0 DI_D=0 O_D=0

U0A BUF DPWR DGND
+ IN1 I1
+ X5_F5_MUX_IN1
+ IO_X5200
U0B BUF DPWR DGND
+ IN2 I2
+ X5_F5_MUX_IN2
+ IO_X5200
U0C BUF DPWR DGND
+ DIN DI
+ X5_F5_MUX_DIN
+ IO_X5200

.MODEL X5_F5_MUX_IN1 UGATE (
+  TPLHMN={I1_D} TPHLMN={I1_D}
+  TPLHMX={I1_D} TPHLMX={I1_D}
+  )
.MODEL X5_F5_MUX_IN2 UGATE (
+  TPLHMN={I2_D} TPHLMN={I2_D}
+  TPLHMX={I2_D} TPHLMX={I2_D}
+  )
.MODEL X5_F5_MUX_DIN UGATE (
+  TPLHMN={DI_D} TPHLMN={DI_D}
+  TPLHMX={DI_D} TPHLMX={DI_D}
+  )

.MODEL X5_MUX UGATE (
+  TPLHMN={O_D} TPHLMN={O_D}
+  TPLHMX={O_D} TPHLMX={O_D}
+  )

U1 LOGICEXP(7,1) DPWR DGND 
+ I1 PI1 I2 PI2 DI PDI PO
+ O
+ X5_MUX
+ IO_X5200
+ LOGIC:
+   O = {PO ^ ( ((I1^PI1) & ~(DI^PDI)) | ((I2^PI2) & (DI^PDI)) ) }

.ENDS X5_F5_MUX

*$


.SUBCKT X5_CY_MUX DIN PDI CIN PCI SN PS CO PCO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: DI_D=0 CI_D=0 S_D=0 CO_D=0

U0A BUF DPWR DGND
+ DIN DI
+ X5_CY_MUX_DIN
+ IO_X5200
U0B BUF DPWR DGND
+ CIN CI
+ X5_CY_MUX_CIN
+ IO_X5200
U0C BUF DPWR DGND
+ SN S
+ X5_CY_MUX_SN
+ IO_X5200

.MODEL X5_CY_MUX_DIN UGATE (
+  TPLHMN={DI_D} TPHLMN={DI_D}
+  TPLHMX={DI_D} TPHLMX={DI_D}
+  )
.MODEL X5_CY_MUX_CIN UGATE (
+  TPLHMN={CI_D} TPHLMN={CI_D}
+  TPLHMX={CI_D} TPHLMX={CI_D}
+  )
.MODEL X5_CY_MUX_SN UGATE (
+  TPLHMN={S_D} TPHLMN={S_D}
+  TPLHMX={S_D} TPHLMX={S_D}
+  )

.MODEL X5_CY_MUX UGATE (
+  TPLHMN={CO_D} TPHLMN={CO_D}
+  TPLHMX={CO_D} TPHLMX={CO_D}
+  )

U1 LOGICEXP(7,1) DPWR DGND 
+ DI PDI CI PCI S PS PCO
+ CO
+ X5_CY_MUX
+ IO_X5200
+ LOGIC:
+   CO = {PCO ^ ( ((DI^PDI) & ~(S^PS)) | ((CI^PCI) & (S^PS)) ) }

.ENDS X5_CY_MUX

*$

.SUBCKT X5_CY4_01 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_LO $D_HI $D_HI $D_HI $D_LO $D_HI $D_LO ; 10111010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_01

*$

.SUBCKT X5_CY4_02 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_HI $D_HI $D_LO $D_HI $D_LO ; 11111010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_02

*$

.SUBCKT X5_CY4_03 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_HI $D_LO $D_LO $D_HI $D_LO ; 11110010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_03

*$

.SUBCKT X5_CY4_04 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI $D_HI $D_LO ; 11000110
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_04

*$

.SUBCKT X5_CY4_05 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI $D_LO ; 11100010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_05

*$

.SUBCKT X5_CY4_06 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO ; 10111000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_06

*$

.SUBCKT X5_CY4_07 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO ; 11111000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_07

*$

.SUBCKT X5_CY4_08 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_LO $D_LO $D_LO $D_LO $D_LO $D_LO ; 11000000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_08

*$

.SUBCKT X5_CY4_09 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI $D_LO $D_LO ; 11000100
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_09

*$

.SUBCKT X5_CY4_10 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_LO ; 11110000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_10

*$

.SUBCKT X5_CY4_11 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_LO $D_LO ; 11100000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_11

*$

.SUBCKT X5_CY4_12 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_HI ; 10111001
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_12

*$

.SUBCKT X5_CY4_13 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_HI $D_HI $D_LO $D_LO $D_HI ; 11111001
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_13

*$

.SUBCKT X5_CY4_14 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI ; 11110001
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_14

*$

.SUBCKT X5_CY4_15 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI $D_LO $D_HI ; 11000101
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_15

*$

.SUBCKT X5_CY4_16 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_LO $D_HI ; 11100001
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_16

*$

.SUBCKT X5_CY4_17 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_LO $D_HI $D_HI $D_HI $D_LO $D_HI $D_LO ; 00111010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_17

*$

.SUBCKT X5_CY4_18 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS

U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_HI $D_LO $D_HI $D_LO ; 01111010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_18

.SUBCKT X5_CY4_19 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS

U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_HI $D_LO ; 01110010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_19

*$

.SUBCKT X5_CY4_20 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_LO $D_LO $D_LO $D_LO $D_LO $D_LO ; 01000000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_20

*$

.SUBCKT X5_CY4_21 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_HI $D_LO ; 01110010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_21

*$

.SUBCKT X5_CY4_22 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_LO $D_LO $D_LO $D_HI $D_HI $D_LO ; 01000110
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_22

*$

.SUBCKT X5_CY4_23 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI $D_LO ; 01100010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_23

*$

.SUBCKT X5_CY4_24 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO ; 00111000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_24

*$

.SUBCKT X5_CY4_25 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO ; 01111000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_25

*$

.SUBCKT X5_CY4_26 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_LO ; 01110000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_26

*$

.SUBCKT X5_CY4_27 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_LO $D_LO $D_LO $D_LO $D_LO $D_LO ; 01000000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_27

*$

.SUBCKT X5_CY4_28 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_LO ; 01110000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_28

*$

.SUBCKT X5_CY4_29 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_LO $D_LO $D_LO $D_HI $D_LO $D_LO ; 01000100
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_29

*$

.SUBCKT X5_CY4_30 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_LO $D_LO $D_LO $D_LO $D_LO ; 01100000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_30

*$

.SUBCKT X5_CY4_31 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_HI ; 00111001
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_31

*$

.SUBCKT X5_CY4_32 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_HI $D_LO $D_LO $D_HI ; 01111001
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_32

*$

.SUBCKT X5_CY4_33 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI ; 01110001
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_33

*$

.SUBCKT X5_CY4_34 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_LO $D_LO $D_LO $D_LO $D_LO $D_LO ; 01000000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_34

*$

.SUBCKT X5_CY4_35 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI ; 01110001
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_35

*$

.SUBCKT X5_CY4_36 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_LO $D_LO $D_LO $D_HI $D_LO $D_HI ; 01000101
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_36

*$

.SUBCKT X5_CY4_37 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
;+$D_LO $D_LO $D_LO $D_LO $D_LO $D_LO $D_LO $D_LO G; 00000000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_37

*$

.SUBCKT X5_CY4_38 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_LO $D_LO $D_LO $D_LO $D_LO $D_LO $D_LO ; 10000000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_38

*$

.SUBCKT X5_CY4_39 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_LO $D_HI $D_HI $D_LO $D_LO $D_LO $D_LO ; 00110000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_39

*$

.SUBCKT X5_CY4_40 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_LO $D_LO $D_LO $D_LO $D_HI $D_LO $D_LO ; 00000100
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_40

*$

.SUBCKT X5_CY4_41 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_LO $D_HI $D_LO $D_LO $D_LO $D_LO $D_LO ; 00100000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_41

*$

.SUBCKT X5_CY4_42 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_LO $D_LO $D_LO $D_LO $D_HI $D_LO $D_LO ; 00000100
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X5200
.ENDS X5_CY4_42

*$

.SUBCKT X5_DFF CLR CLK PCLK CLKENA D Q GR
+ OPTIONAL:  DPWR=$G_X5200_VDD DGND=$G_X5200_VSS 
+ PARAMS: CLR_D=0 GR_D=0 CLK_D=0 CLKENA_D=0 D_D=0 Q_D=0
+   D_CLK_SETUP=0       D_CLK_HOLD=0
+   CLR_CLK_SETUP=0     CLR_CLK_HOLD=0
+   CLKENA_CLK_SETUP=0  CLKENA_CLK_HOLD=0
+   CLK_WIDTH=0 CLR_WIDTH=0 GR_WIDTH=0

UD BUF DPWR DGND
+ D D_BUF
+ X5_DFF_D 
+ IO_X5200
.MODEL X5_DFF_D UGATE (
+   TPLHMN={D_D} TPLHMX={D_D}
+   TPHLMN={D_D} TPHLMX={D_D}
+   )

UCLK XOR DPWR DGND
+ CLK PCLK CLK_BUF
+ X5_DFF_CLK 
+ IO_X5200
.MODEL X5_DFF_CLK UGATE (
+   TPLHMN={CLK_D} TPLHMX={CLK_D}
+   TPHLMN={CLK_D} TPHLMX={CLK_D}
+   )

UCLKENA BUF DPWR DGND
+ CLKENA CLKENA_BUF
+ X5_DFF_CLKENA 
+ IO_X5200
.MODEL X5_DFF_CLKENA UGATE (
+   TPLHMN={CLKENA_D} TPLHMX={CLKENA_D}
+   TPHLMN={CLKENA_D} TPHLMX={CLKENA_D}
+   )

UCLR BUF DPWR DGND
+ CLR CLR_BUF
+ X5_DFF_CLR 
+ IO_X5200
.MODEL X5_DFF_CLR UGATE (
+   TPLHMN={CLR_D} TPLHMX={CLR_D}
+   TPHLMN={CLR_D} TPHLMX={CLR_D}
+   )

UGR BUF DPWR DGND
+ GR GR_BUF
+ X5_DFF_GR 
+ IO_X5200

.MODEL X5_DFF_GR UGATE (
+   TPLHMN={GR_D} TPLHMX={GR_D}
+   TPHLMN={GR_D} TPHLMX={GR_D}
+   )

UCLRIN NOR(2) DPWR DGND ; INVERT BECAUSE DFF IS LOW TRUE
+ CLR_BUF GR_BUF CLR_IN
+ D0_GATE
+ IO_X5200

UDFF DFFDE(1) DPWR DGND
+ $D_HI CLR_IN CLK_BUF CLKENA_BUF $D_LO D_BUF Q_INT $D_NC
+ D0_EFF
+ IO_X5200

UDELAY PINDLY(1,0,7) DPWR DGND
+ Q_INT
+ CLK CLK_BUF D_BUF CLKENA_BUF CLR GR GR_BUF
+ Q
+ IO_X5200
+ PINDLY:
+   Q = {DELAY(Q_D,-1,Q_D)}
+ SETUP_HOLD:
+   CLOCK LH = CLK_BUF
+   DATA(1) = D_BUF
+   SETUPTIME = {D_CLK_SETUP}
+   HOLDTIME =  {D_CLK_HOLD}
+   WHEN = {GR_BUF == '0 & CLR == '0 & CLKENA_BUF == '1}
+ SETUP_HOLD:
+   CLOCK LH = CLK_BUF
+   DATA(1) = CLKENA_BUF
+   SETUPTIME = {CLKENA_CLK_SETUP}
+   HOLDTIME = {CLKENA_CLK_HOLD}
+   WHEN = {GR_BUF == '0 & CLR == '0 & D_BUF == Q_INT}
+ SETUP_HOLD:
+   CLOCK LH = CLK_BUF
+   DATA(1) = CLR
+   SETUPTIME = {CLR_CLK_SETUP}
+   HOLDTIME = {CLR_CLK_HOLD}
+   WHEN = {CLR != '1 & GR_BUF == '0 & CLKENA_BUF == '1}
+ WIDTH:
+   NODE = CLK
+   MIN_HI = {CLK_WIDTH}
+   MIN_LO = {CLK_WIDTH}
+ WIDTH:
+   NODE = CLR
+   MIN_HI = {CLR_WIDTH}
+ WIDTH:
+   NODE = GR
+   MIN_LO = {GR_WIDTH}

.MODEL X5_DFF_Q UEFF (
+  TPCLKQLHMN={Q_D} TPCLKQLHMX={Q_D}
+  TPCLKQHLMN={Q_D} TPCLKQHLMX={Q_D}
+  )

.ENDS X5_DFF

*$

.SUBCKT X5_DLAT CLR G PG GE D Q GR PGR
+ OPTIONAL:  DPWR=$G_X5000_VDD DGND=$G_X5000_VSS 
+ PARAMS: CLR_D=0 G_D=0 GE_D=0 GR_D=0 D_D=0 Q_D=0
+   D_G_SETUP=0       D_G_HOLD=0
+   CLR_G_SETUP=0     CLR_G_HOLD=0
+   GE_G_SETUP=0      GE_G_HOLD=0
+   GR_G_SETUP=0      GR_G_HOLD=0
+   G_WIDTH=0 CLR_WIDTH=0 GR_WIDTH=0

UD BUF DPWR DGND
+ D D_BUF
+ X5_DLAT_D 
+ IO_X5200
.MODEL X5_DLAT_D UGATE (
+   TPLHMN={D_D} TPLHMX={D_D}
+   TPHLMN={D_D} TPHLMX={D_D}
+   )

UGE BUF DPWR DGND
+ GE GE_BUF
+ X5_DLAT_GE
+ IO_X5200
.MODEL X5_DLAT_GE UGATE (
+   TPLHMN={GE_D} TPLHMX={GE_D}
+   TPHLMN={GE_D} TPHLMX={GE_D}
+   )

UGATEBUF AND(2) DPWR DGND
+ GE_BUF G_BUF GATE_BUF
+ D0_GATE
+ IO_X5200

UG XOR DPWR DGND
+ G PG G_BUF
+ X5_DLAT_G 
+ IO_X5200
.MODEL X5_DLAT_G UGATE (
+   TPLHMN={G_D} TPLHMX={G_D}
+   TPHLMN={G_D} TPHLMX={G_D}
+   )

UGR XOR DPWR DGND
+ GR PGR  GR_BUF
+ X5_DLAT_GR 
+ IO_X5200
.MODEL X5_DLAT_GR UGATE (
+   TPLHMN={GR_D} TPLHMX={GR_D}
+   TPHLMN={GR_D} TPHLMX={GR_D}
+   )

UCLR INV DPWR DGND
+ CLR CLR_BUF
+ X5_DLAT_CLR 
+ IO_X5200
.MODEL X5_DLAT_CLR UGATE (
+   TPLHMN={CLR_D} TPLHMX={CLR_D}
+   TPHLMN={CLR_D} TPHLMX={CLR_D}
+   )

UCLRIN AND(2) DPWR DGND ; EITHER INPUT GENERATES LO CLR_IN
+ CLR_BUF GR_BUF CLR_IN
+ D0_GATE
+ IO_X5200

UDFF DLTCH(1) DPWR DGND
+ $D_HI CLR_IN GATE_BUF D_BUF Q_INT $D_NC
+ D0_GFF
+ IO_X5200

UDELAY PINDLY(1,0,6) DPWR DGND
+ Q_INT
+ G G_BUF D_BUF CLR GR GR_BUF
+ Q
+ IO_X5200
+ PINDLY:
+   Q = {DELAY(Q_D,-1,Q_D)}
+ SETUP_HOLD:
+   CLOCK LH = G_BUF
+   DATA(1) = D_BUF
+   SETUPTIME = {D_G_SETUP}
+   HOLDTIME =  {D_G_HOLD}
+   WHEN = {GR_BUF == '0 & CLR == '0 & GE == '1}
+ SETUP_HOLD:
+   CLOCK LH = G_BUF
+   DATA(1) = GR_BUF
+   SETUPTIME = {GR_G_SETUP}
+   HOLDTIME = {GR_G_HOLD}
+   WHEN = {GR_BUF == '0 & CLR == '0 & GE == '1 & D_BUF == Q_INT}
+ SETUP_HOLD:
+   CLOCK LH = G_BUF
+   DATA(1) = CLR
+   SETUPTIME = {CLR_G_SETUP}
+   HOLDTIME = {CLR_G_HOLD}
+   WHEN = {GR_BUF == '0 & GE == '1}
+ SETUP_HOLD:
+   CLOCK LH = G_BUF
+   DATA(1) = GE
+   SETUPTIME = {GE_G_SETUP}
+   HOLDTIME = {GE_G_HOLD}
+   WHEN = {GR_BUF == '0 & CLR == '0}
+ WIDTH:
+   NODE = G
+   MIN_HI = {G_WIDTH}
+   MIN_LO = {G_WIDTH}
+ WIDTH:
+   NODE = CLR
+   MIN_HI = {CLR_WIDTH}
+ WIDTH:
+   NODE = GR
+   MIN_LO = {GR_WIDTH}

.ENDS X5_DLAT

*$

.SUBCKT X5_NAND2  I0 P0 I1 P1 OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: I0_D=0 I1_D=0 OUT_D=0

U1 LOGICEXP(5,1) DPWR DGND 
+ I0 P0 I1 P1 PO OUT_INT
+ D0_GATE
+ IO_X5200
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) & (I1^P1) ) }

U2 PINDLY(1,0,2) DPWR DGND
+ OUT_INT
+ I0 I1
+ OUT
+ IO_X5200
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X5_NAND2


.SUBCKT X5_NAND3  I0 P0 I1 P1 I2 P2 OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 OUT_D=0

U1 LOGICEXP(7,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 PO OUT_INT
+ D0_GATE
+ IO_X5200
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) & (I1^P1) & (I2^P2) ) }

U2 PINDLY(1,0,3) DPWR DGND
+ OUT_INT
+ I0 I1 I2
+ OUT
+ IO_X5200
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X5_NAND3


.SUBCKT X5_NAND4  I0 P0 I1 P1 I2 P2 I3 P3 OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 OUT_D=0

U1 LOGICEXP(9,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 PO OUT_INT
+ D0_GATE
+ IO_X5200
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) & (I1^P1) & (I2^P2) & (I3^P3) ) }

U2 PINDLY(1,0,4) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3
+ OUT
+ IO_X5200
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X5_NAND4


.SUBCKT X5_NAND5  I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 I4_D=0 OUT_D=0

U1 LOGICEXP(11,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 PO OUT_INT
+ D0_GATE
+ IO_X5200
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) & (I1^P1) & (I2^P2) & (I3^P3) & (I4^P4) ) }

U2 PINDLY(1,0,5) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3 I4
+ OUT
+ IO_X5200
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 CHANGED(I4,0), DELAY(I4_D+OUT_D,-1,I4_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X5_NAND5

*$


.SUBCKT X5_NOR2  I0 P0 I1 P1 OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: I0_D=0 I1_D=0 OUT_D=0

U1 LOGICEXP(5,1) DPWR DGND 
+ I0 P0 I1 P1 PO OUT_INT
+ D0_GATE
+ IO_X5200
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) | (I1^P1) ) }

U2 PINDLY(1,0,2) DPWR DGND
+ OUT_INT
+ I0 I1
+ OUT
+ IO_X5200
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X5_NOR2


.SUBCKT X5_NOR3  I0 P0 I1 P1 I2 P2 OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 OUT_D=0

U1 LOGICEXP(7,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 PO OUT_INT
+ D0_GATE
+ IO_X5200
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) | (I1^P1) | (I2^P2) ) }

U2 PINDLY(1,0,3) DPWR DGND
+ OUT_INT
+ I0 I1 I2
+ OUT
+ IO_X5200
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X5_NOR3


.SUBCKT X5_NOR4  I0 P0 I1 P1 I2 P2 I3 P3 OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 OUT_D=0

U1 LOGICEXP(9,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 PO OUT_INT
+ D0_GATE
+ IO_X5200
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) | (I1^P1) | (I2^P2) | (I3^P3) ) }

U2 PINDLY(1,0,4) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3
+ OUT
+ IO_X5200
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X5_NOR4


.SUBCKT X5_NOR5  I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 I4_D=0 OUT_D=0

U1 LOGICEXP(11,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 PO OUT_INT
+ D0_GATE
+ IO_X5200
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) | (I1^P1) | (I2^P2) | (I3^P3) | (I4^P4) ) }

U2 PINDLY(1,0,5) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3 I4
+ OUT
+ IO_X5200
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 CHANGED(I4,0), DELAY(I4_D+OUT_D,-1,I4_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X5_NOR5

*$

.SUBCKT X5_OBUF IN PIN GTS PGTS OUT
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: IN_D=0 OUT_D=0 GTS_D=0
+ GTS_LH_D=0 GTS_HL_D=0		; GTS delay from STARTUP
*
*
UIN XOR DPWR DGND 
+ IN PIN  IN_BUF
+ X5_IN
+ IO_X5200

UGTS NXOR DPWR DGND
+ GTS PGTS GTS_BUF
+ X5_OBUF_GTS
+ IO_X5200

.MODEL X5_OBUF_GTS UGATE (
+   TPLHMN={GTS_LH_D + GTS_D} TPLHMX={GTS_LH_D + GTS_D}
+   TPHLMN={GTS_HL_D + GTS_D} TPHLMX={GTS_HL_D + GTS_D}
+   )

UOUT BUF3 DPWR DGND
+ IN_BUF GTS_BUF  OUT
+ D0_TGATE
+ IO_X5200

.MODEL X5_IN UGATE (
+  TPLHMN={IN_D+OUT_D} TPHLMN={IN_D+OUT_D}
+  TPLHMX={IN_D+OUT_D} TPHLMX={IN_D+OUT_D}
+  )

.ENDS X5_OBUF

*$

.SUBCKT X5_OBUFT IN PI T PT GTS PGTS OUT
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: IN_D=0 TLH_D=0 THL_D=0 OUT_D=0 PULLUP_D=0 GTS_D=0
+ GTS_LH_D=0 GTS_HL_D=0		; GTS delay from STARTUP
*
UTDLY BUF DPWR DGND
+ T TDLY 
+ X5_OBUFT_T
+ IO_X5200

UGTS XOR DPWR DGND
+ GTS PGTS GTS_BUF
+ X5_OBUFT_GTS
+ IO_X5200

.MODEL X5_OBUFT_T UGATE(
+  TPLHMN={TLH_D} TPHLMN={THL_D}
+  TPLHMX={TLH_D} TPHLMX={THL_D}
+  )

.MODEL X5_OBUFT_GTS UGATE (
+   TPLHMN={GTS_LH_D + GTS_D} TPLHMX={GTS_LH_D + GTS_D}
+   TPHLMN={GTS_HL_D + GTS_D} TPHLMX={GTS_HL_D + GTS_D}
+   )

UENA LOGICEXP(3,1) DPWR DGND 
+ TDLY PT GTS_BUF  ENA
+ D0_GATE IO_X5200
+ LOGIC:
+   ENA = { ~((TDLY ^ PT) | GTS_BUF) }  ; XILINX 3-states are active-low enable

UIDLY BUF DPWR DGND IN INBUF X5_OBUFT_IN IO_X5200
.MODEL X5_OBUFT_IN UGATE(
+  TPLHMN={IN_D+OUT_D} TPHLMN={IN_D+OUT_D} 
+  TPLHMX={IN_D+OUT_D} TPHLMX={IN_D+OUT_D} 
+  )

UIN XOR DPWR DGND INBUF PI INNEW D0_GATE IO_X5200

UOUT BUF3 DPWR DGND 
+ INNEW ENA OUT
+ D0_TGATE
+ IO_X5200

.ENDS X5_OBUFT


.SUBCKT X5_OR2  I0 P0 I1 P1 OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: I0_D=0 I1_D=0 OUT_D=0

U1 LOGICEXP(5,1) DPWR DGND 
+ I0 P0 I1 P1 PO OUT_INT
+ D0_GATE
+ IO_X5200
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) | (I1^P1) ) }

U2 PINDLY(1,0,2) DPWR DGND
+ OUT_INT
+ I0 I1
+ OUT
+ IO_X5200
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X5_OR2


.SUBCKT X5_OR3  I0 P0 I1 P1 I2 P2 OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 OUT_D=0

U1 LOGICEXP(7,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 PO OUT_INT
+ D0_GATE
+ IO_X5200
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) | (I1^P1) | (I2^P2) ) }

U2 PINDLY(1,0,3) DPWR DGND
+ OUT_INT
+ I0 I1 I2
+ OUT
+ IO_X5200
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X5_OR3


.SUBCKT X5_OR4  I0 P0 I1 P1 I2 P2 I3 P3 OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 OUT_D=0

U1 LOGICEXP(9,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 PO OUT_INT
+ D0_GATE
+ IO_X5200
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) | (I1^P1) | (I2^P2) | (I3^P3) ) }

U2 PINDLY(1,0,4) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3
+ OUT
+ IO_X5200
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X5_OR4


.SUBCKT X5_OR5  I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 I4_D=0 OUT_D=0

U1 LOGICEXP(11,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 PO OUT_INT
+ D0_GATE
+ IO_X5200
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) | (I1^P1) | (I2^P2) | (I3^P3) | (I4^P4) ) }

U2 PINDLY(1,0,5) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3 I4
+ OUT
+ IO_X5200
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 CHANGED(I4,0), DELAY(I4_D+OUT_D,-1,I4_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X5_OR5

*$

.SUBCKT X5_TBUF  IN T OUT TDLY
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: IN_D=0 TLH_D=0 THL_D=0 OUT_D=0
*
* XILINX 3-states enables are active low
* The TDLY signal is available as an output to allow for
* proper timing of externally-connected PULLUP devices.

UTDLY BUF DPWR DGND T TDLY X5_TBUF_TDLY IO_X5200
UTDLYBAR INV DPWR DGND T TDLYBAR X5_TBUF_T IO_X5200

.MODEL X5_TBUF_TDLY UGATE(
+  TPLHMN={TLH_D} TPHLMN={THL_D}
+  TPLHMX={TLH_D} TPHLMX={THL_D}
+  )

.MODEL X5_TBUF_T UGATE(
+  TPLHMN={THL_D} TPHLMN={TLH_D}	; lh/hl swapped intentionally
+  TPLHMX={THL_D} TPHLMX={TLH_D}
+  )

UIDLY BUF DPWR DGND IN INDLY X5_TBUF_IN IO_X5200
.MODEL X5_TBUF_IN UGATE(
+  TPLHMN={IN_D+OUT_D} TPHLMN={IN_D+OUT_D} 
+  TPLHMX={IN_D+OUT_D} TPHLMX={IN_D+OUT_D} 
+  )

UOUT BUF3 DPWR DGND 
+ INDLY TDLYBAR OUT
+ D0_TGATE
+ IO_X5200

.ENDS X5_TBUF

*$

.SUBCKT X5_XNOR2  I0 P0 I1 P1 OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: I0_D=0 I1_D=0 OUT_D=0

U1 LOGICEXP(5,1) DPWR DGND 
+ I0 P0 I1 P1 PO OUT_INT
+ D0_GATE
+ IO_X5200
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) ^ (I1^P1) ) }

U2 PINDLY(1,0,2) DPWR DGND
+ OUT_INT
+ I0 I1
+ OUT
+ IO_X5200
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X5_XNOR2

*$

.SUBCKT X5_XNOR3  I0 P0 I1 P1 I2 P2  OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 OUT_D=0

U1 LOGICEXP(7,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 PO OUT_INT
+ D0_GATE
+ IO_X5200
+ LOGIC:
+   OUT_INT = {PO ^ ~ ( (I0^P0) ^ (I1^P1) ^ (I2^P2)) }

U2 PINDLY(1,0,3) DPWR DGND
+ OUT_INT
+ I0 I1 I2
+ OUT
+ IO_X5200
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+                CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X5_XNOR3

*$

.SUBCKT X5_XNOR4  I0 P0 I1 P1 I2 P2 I3 P3 OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 OUT_D=0

U1 LOGICEXP(9,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 PO OUT_INT
+ D0_GATE
+ IO_X5200
+ LOGIC:
+   OUT_INT = {PO ^ ~ ( (I0^P0) ^ (I1^P1) ^ (I2^P2) ^ (I3^P3) ) }

U2 PINDLY(1,0,4) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3
+ OUT
+ IO_X5200
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X5_XNOR4

*$

.SUBCKT X5_XNOR5  I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 I4_D=0 OUT_D=0

U1 LOGICEXP(11,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 PO OUT_INT
+ D0_GATE
+ IO_X5200
+ LOGIC:
+   OUT_INT = {PO ^ ~ ( (I0^P0) ^ (I1^P1) ^ (I2^P2) ^ (I3^P3) ^ (I4^P4) ) }

U2 PINDLY(1,0,5) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3 I4
+ OUT
+ IO_X5200
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 CHANGED(I4,0), DELAY(I4_D+OUT_D,-1,I4_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X5_XNOR5

*$

.SUBCKT X5_XOR2  I0 P0 I1 P1 OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: I0_D=0 I1_D=0 OUT_D=0

U1 LOGICEXP(5,1) DPWR DGND 
+ I0 P0 I1 P1 PO OUT_INT
+ D0_GATE
+ IO_X5200
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) ^ (I1^P1) ) }

U2 PINDLY(1,0,2) DPWR DGND
+ OUT_INT
+ I0 I1
+ OUT
+ IO_X5200
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X5_XOR2

*$

.SUBCKT X5_XOR3  I0 P0 I1 P1 I2 P2  OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 OUT_D=0

U1 LOGICEXP(7,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 PO OUT_INT
+ D0_GATE
+ IO_X5200
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) ^ (I1^P1) ^ (I2^P2)) }

U2 PINDLY(1,0,3) DPWR DGND
+ OUT_INT
+ I0 I1 I2
+ OUT
+ IO_X5200
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+                CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X5_XOR3

*$

.SUBCKT X5_XOR4  I0 P0 I1 P1 I2 P2 I3 P3 OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 OUT_D=0

U1 LOGICEXP(9,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 PO OUT_INT
+ D0_GATE
+ IO_X5200
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) ^ (I1^P1) ^ (I2^P2) ^ (I3^P3) ) }

U2 PINDLY(1,0,4) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3
+ OUT
+ IO_X5200
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X5_XOR4

*$

.SUBCKT X5_XOR5  I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 OUT PO
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 I4_D=0 OUT_D=0

U1 LOGICEXP(11,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 PO OUT_INT
+ D0_GATE
+ IO_X5200
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) ^ (I1^P1) ^ (I2^P2) ^ (I3^P3) ^ (I4^P4) ) }

U2 PINDLY(1,0,5) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3 I4
+ OUT
+ IO_X5200
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 CHANGED(I4,0), DELAY(I4_D+OUT_D,-1,I4_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X5_XOR5

*$

.SUBCKT X5_OFD GTS GSR CLK PCLK D PD Q PQ
+ OPTIONAL:  DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: GR_D=0 CLK_D=0 GTS_D=0 D_D=0 Q_D=0
+   GTS_LH_D=0 GTS_HL_D=0		; GTS delay from STARTUP
+   D_CLK_SETUP=0       D_CLK_HOLD=0
+   GR_CLK_SETUP=0     GR_CLK_HOLD=0
+   CLK_WIDTH=0 GR_WIDTH=0

UD XOR DPWR DGND
+ D PD   D_BUF
+ X5_OFD_D 
+ IO_X5200

.MODEL X5_OFD_D UGATE (
+   TPLHMN={D_D} TPLHMX={D_D}
+   TPHLMN={D_D} TPHLMX={D_D}
+   )

UCLK XOR DPWR DGND
+ CLK PCLK CLK_BUF
+ X5_OFD_CLK 
+ IO_X5200

.MODEL X5_OFD_CLK UGATE (
+   TPLHMN={CLK_D} TPLHMX={CLK_D}
+   TPHLMN={CLK_D} TPHLMX={CLK_D}
+   )

UGTS INV DPWR DGND
+ GTS GTS_BUF
+ X5_OFD_GTS 
+ IO_X5200

.MODEL X5_OFD_GTS UGATE (
+   TPLHMN={GTS_LH_D + GTS_D} TPLHMX={GTS_LH_D + GTS_D}
+   TPHLMN={GTS_HL_D + GTS_D} TPHLMX={GTS_HL_D + GTS_D}
+   )

UGSR INV DPWR DGND
+ GSR GR_BUF
+ X5_OFD_GSR 
+ IO_X5200

.MODEL X5_OFD_GSR UGATE (
+   TPLHMN={GR_D} TPLHMX={GR_D}
+   TPHLMN={GR_D} TPHLMX={GR_D}
+   )

UDFF DFF(1) DPWR DGND
+ $D_HI GR_BUF CLK_BUF D_BUF Q_INT1 $D_NC
+ D0_EFF
+ IO_X5200

UQPOL XOR() DPWR DGND
+ Q_INT2 PQ   QINT
+ D0_GATE
+ IO_X5200

UQTS BUF3() DPWR DGND
+ QINT GTS_BUF  Q
+ D0_TGATE
+ IO_X5200

UDELAY PINDLY(1,0,5) DPWR DGND
+ Q_INT1
+ CLK CLK_BUF D_BUF GSR GR_BUF
+ Q_INT2
+ IO_X5200
+ PINDLY:
+   Q_INT2 = {DELAY(Q_D,-1,Q_D)}
+ SETUP_HOLD:
+   CLOCK LH = CLK_BUF
+   DATA(1) = D_BUF
+   SETUPTIME = {D_CLK_SETUP}
+   HOLDTIME =  {D_CLK_HOLD}
+   WHEN = {GR_BUF == '0 }
+ WIDTH:
+   NODE = CLK
+   MIN_HI = {CLK_WIDTH}
+   MIN_LO = {CLK_WIDTH}
+ WIDTH:
+   NODE = GSR
+   MIN_HI = {GR_WIDTH}

.ENDS X5_OFD

*$

.SUBCKT X5_OFDI GTS GSR CLK PCLK D PD Q PQ
+ OPTIONAL:  DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: GR_D=0 CLK_D=0 GTS_D=0 D_D=0 Q_D=0
+   GTS_LH_D=0 GTS_HL_D=0		; GTS delay from STARTUP
+   D_CLK_SETUP=0       D_CLK_HOLD=0
+   GR_CLK_SETUP=0     GR_CLK_HOLD=0
+   CLK_WIDTH=0 GR_WIDTH=0

UD NXOR DPWR DGND
+ D PD   D_BUF
+ X5_OFDI_D 
+ IO_X5200

.MODEL X5_OFDI_D UGATE (
+   TPLHMN={D_D} TPLHMX={D_D}
+   TPHLMN={D_D} TPHLMX={D_D}
+   )

UCLK XOR DPWR DGND
+ CLK PCLK CLK_BUF
+ X5_OFDI_CLK 
+ IO_X5200

.MODEL X5_OFDI_CLK UGATE (
+   TPLHMN={CLK_D} TPLHMX={CLK_D}
+   TPHLMN={CLK_D} TPHLMX={CLK_D}
+   )

UGTS INV DPWR DGND
+ GTS GTS_BUF
+ X5_OFDI_GTS 
+ IO_X5200

.MODEL X5_OFDI_GTS UGATE (
+   TPLHMN={GTS_LH_D + GTS_D} TPLHMX={GTS_LH_D + GTS_D}
+   TPHLMN={GTS_HL_D + GTS_D} TPHLMX={GTS_HL_D + GTS_D}
+   )

UGSR INV DPWR DGND
+ GSR GR_BUF
+ X5_OFDI_GSR 
+ IO_X5200

.MODEL X5_OFDI_GSR UGATE (
+   TPLHMN={GR_D} TPLHMX={GR_D}
+   TPHLMN={GR_D} TPHLMX={GR_D}
+   )

UDFF DFF(1) DPWR DGND
+ $D_HI GR_BUF CLK_BUF D_BUF $D_NC Q_INT1
+ D0_EFF
+ IO_X5200

UQPOL XOR() DPWR DGND
+ Q_INT2 PQ   QINT
+ D0_GATE
+ IO_X5200

UQTS BUF3() DPWR DGND
+ QINT GTS_BUF  Q
+ D0_TGATE
+ IO_X5200

UDELAY PINDLY(1,0,5) DPWR DGND
+ Q_INT1
+ CLK CLK_BUF D_BUF GSR GR_BUF
+ Q_INT2
+ IO_X5200
+ PINDLY:
+   Q_INT2 = {DELAY(Q_D,-1,Q_D)}
+ SETUP_HOLD:
+   CLOCK LH = CLK_BUF
+   DATA(1) = D_BUF
+   SETUPTIME = {D_CLK_SETUP}
+   HOLDTIME =  {D_CLK_HOLD}
+   WHEN = {GR_BUF == '0 }
+ WIDTH:
+   NODE = CLK
+   MIN_HI = {CLK_WIDTH}
+   MIN_LO = {CLK_WIDTH}
+ WIDTH:
+   NODE = GSR
+   MIN_HI = {GR_WIDTH}

.ENDS X5_OFDI

*$

.SUBCKT X5_OFDT GTS GSR CLK PCLK T PT D PD O PO
+ OPTIONAL:  DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: GR_D=0 CLK_D=0 GTS_D=0 T_ENBD=0 T_DISD=0 D_D=0 O_D=0
+   GTS_LH_D=0 GTS_HL_D=0		; GTS delay from STARTUP
+   D_CLK_SETUP=0       D_CLK_HOLD=0
+   GR_CLK_SETUP=0     GR_CLK_HOLD=0
+   CLK_WIDTH=0 GR_WIDTH=0

UD XOR DPWR DGND
+ D PD   D_BUF
+ X5_OFDT_D 
+ IO_X5200

UT XOR DPWR DGND
+ T PT   T_BUF
+ X5_OFDT_T 
+ IO_X5200


.MODEL X5_OFDT_D UGATE (
+   TPLHMN={D_D} TPLHMX={D_D}
+   TPHLMN={D_D} TPHLMX={D_D}
+   )

.MODEL X5_OFDT_T UGATE (
+   TPHLMN={T_ENBD} TPHLMX={T_ENBD}
+   TPLHMN={T_DISD} TPLHMX={T_DISD}
+   )

UCLK XOR DPWR DGND
+ CLK PCLK CLK_BUF
+ X5_OFDT_CLK 
+ IO_X5200

.MODEL X5_OFDT_CLK UGATE (
+   TPLHMN={CLK_D} TPLHMX={CLK_D}
+   TPHLMN={CLK_D} TPHLMX={CLK_D}
+   )

UGTSORT NOR(2) DPWR DGND
+ T_BUF GTS_BUF GTS_SIG
+ D0_GATE 
+ IO_X5200

UGTS BUF DPWR DGND
+ GTS GTS_BUF
+ X5_OFDT_GTS 
+ IO_X5200

.MODEL X5_OFDT_GTS UGATE (
+   TPLHMN={GTS_LH_D + GTS_D} TPLHMX={GTS_LH_D + GTS_D}
+   TPHLMN={GTS_HL_D + GTS_D} TPHLMX={GTS_HL_D + GTS_D}
+   )

UGSR INV DPWR DGND
+ GSR GR_BUF
+ X5_OFDT_GSR 
+ IO_X5200

.MODEL X5_OFDT_GSR UGATE (
+   TPLHMN={GR_D} TPLHMX={GR_D}
+   TPHLMN={GR_D} TPHLMX={GR_D}
+   )

UDFF DFF(1) DPWR DGND
+ $D_HI GR_BUF CLK_BUF D_BUF O_INT1 $D_NC
+ D0_EFF
+ IO_X5200

UOPOL XOR() DPWR DGND
+ O_INT2 PO   OINT
+ D0_GATE
+ IO_X5200

UOTS BUF3() DPWR DGND
+ OINT GTS_SIG  O
+ D0_TGATE
+ IO_X5200

UDELAY PINDLY(1,0,5) DPWR DGND
+ O_INT1
+ CLK CLK_BUF D_BUF GSR GR_BUF
+ O_INT2
+ IO_X5200
+ PINDLY:
+   O_INT2 = {DELAY(O_D,-1,O_D)}
+ SETUP_HOLD:
+   CLOCK LH = CLK_BUF
+   DATA(1) = D_BUF
+   SETUPTIME = {D_CLK_SETUP}
+   HOLDTIME =  {D_CLK_HOLD}
+   WHEN = {GR_BUF == '0 }
+ WIDTH:
+   NODE = CLK
+   MIN_HI = {CLK_WIDTH}
+   MIN_LO = {CLK_WIDTH}
+ WIDTH:
+   NODE = GSR
+   MIN_HI = {GR_WIDTH}

.ENDS X5_OFDT

*$

.SUBCKT X5_OFDTI GTS GSR CLK PCLK T PT D PD O PO
+ OPTIONAL:  DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: GR_D=0 CLK_D=0 GTS_D=0 T_ENBD=0 T_DISD=0 D_D=0 O_D=0
+   GTS_LH_D=0 GTS_HL_D=0		; GTS delay from STARTUP
+   D_CLK_SETUP=0       D_CLK_HOLD=0
+   GR_CLK_SETUP=0     GR_CLK_HOLD=0
+   CLK_WIDTH=0 GR_WIDTH=0

UD NXOR DPWR DGND
+ D PD   D_BUF
+ X5_OFDTI_D 
+ IO_X5200

.MODEL X5_OFDTI_D UGATE (
+   TPLHMN={D_D} TPLHMX={D_D}
+   TPHLMN={D_D} TPHLMX={D_D}
+   )

.MODEL X5_OFDTI_T UGATE (
+   TPHLMN={T_ENBD} TPHLMX={T_ENBD}
+   TPLHMN={T_DISD} TPLHMX={T_DISD}
+   )

UCLK XOR DPWR DGND
+ CLK PCLK CLK_BUF
+ X5_OFDTI_CLK 
+ IO_X5200

.MODEL X5_OFDTI_CLK UGATE (
+   TPLHMN={CLK_D} TPLHMX={CLK_D}
+   TPHLMN={CLK_D} TPHLMX={CLK_D}
+   )

UGTSORT NOR(2) DPWR DGND
+ T_BUF GTS_BUF GTS_SIG
+ D0_GATE 
+ IO_X5200

UT BUF DPWR DGND
+ T T_BUF
+ X5_OFDTI_T
+ IO_X5200

UGTS BUF DPWR DGND
+ GTS GTS_BUF
+ X5_OFDTI_GTS 
+ IO_X5200

.MODEL X5_OFDTI_GTS UGATE (
+   TPLHMN={GTS_LH_D + GTS_D} TPLHMX={GTS_LH_D + GTS_D}
+   TPHLMN={GTS_HL_D + GTS_D} TPHLMX={GTS_HL_D + GTS_D}
+   )

UGSR INV DPWR DGND
+ GSR GR_BUF
+ X5_OFDTI_GSR 
+ IO_X5200

.MODEL X5_OFDTI_GSR UGATE (
+   TPLHMN={GR_D} TPLHMX={GR_D}
+   TPHLMN={GR_D} TPHLMX={GR_D}
+   )

UDFF DFF(1) DPWR DGND
+ $D_HI GR_BUF CLK_BUF D_BUF $D_NC O_INT1
+ D0_EFF
+ IO_X5200

UOPOL XOR() DPWR DGND
+ O_INT2 PO   OINT
+ D0_GATE
+ IO_X5200

UOTS BUF3() DPWR DGND
+ OINT GTS_SIG  O
+ D0_TGATE
+ IO_X5200

UDELAY PINDLY(1,0,5) DPWR DGND
+ O_INT1
+ CLK CLK_BUF D_BUF GSR GR_BUF
+ O_INT2
+ IO_X5200
+ PINDLY:
+   O_INT2 = {DELAY(O_D,-1,O_D)}
+ SETUP_HOLD:
+   CLOCK LH = CLK_BUF
+   DATA(1) = D_BUF
+   SETUPTIME = {D_CLK_SETUP}
+   HOLDTIME =  {D_CLK_HOLD}
+   WHEN = {GR_BUF == '0 }
+ WIDTH:
+   NODE = CLK
+   MIN_HI = {CLK_WIDTH}
+   MIN_LO = {CLK_WIDTH}
+ WIDTH:
+   NODE = GSR
+   MIN_HI = {GR_WIDTH}

.ENDS X5_OFDTI

*$

*$

.SUBCKT X5_BSCAN TDI TMS TCK TDO1 TDO2 TDO DRCK IDLE SEL1 SEL2
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS

UTDI BUF DPWR DGND
+ TDI $D_NC
+ D0_GATE
+ IO_X5200
UTMS BUF DPWR DGND
+ TMS $D_NC
+ D0_GATE
+ IO_X5200
UTCK BUF DPWR DGND
+ TDI $D_NC
+ D0_GATE
+ IO_X5200
UTDO1 BUF DPWR DGND
+ TDO1 $D_NC
+ D0_GATE
+ IO_X5200
UTDO2 BUF DPWR DGND
+ TDO2 $D_NC
+ D0_GATE
+ IO_X5200

UTDO PULLUP(1) DPWR DGND
+ TDO
+ IO_X5200

UPULDN PULLDN(4) DPWR DGND
+ DRCK IDLE SEL1 SEL2
+ IO_X5200

.ENDS X5_BSCAN

*$

.SUBCKT X5_PULLUP SIG ENB PENB
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS
+ PARAMS: PULLUP_D=0

.MODEL BTG1 UBTG

.MODEL ENB_GATE UGATE
+  TPLHMN={PULLUP_D} TPHLMN={PULLUP_D} 
+  TPLHMX={PULLUP_D} TPHLMX={PULLUP_D} 
+  )

UEDLY XOR DPWR DGND
+ ENB PENB  ENBDLY
+ ENB_GATE
+ IO_X5200

UBTG NBTG DPWR DGND
+ ENBDLY PULLUPNODE SIG
+ BTG1 IO_X5200

U1 PULLUP(1) DPWR DGND
+ PULLUPNODE
+ IO_X5200_PULLUP

.ENDS X5_PULLUP

*$

.SUBCKT X5_PULLDOWN SIG
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS

U1 PULLDN(1) DPWR DGND
+ SIG
+ IO_X5200

.ENDS X5_PULLDOWN

*$

.SUBCKT X5_RDBK TRIG DATA RIP
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS

UTRIG BUF DPWR DGND
+ TRIG $D_NC
+ D0_GATE
+ IO_X5200

UPULDN PULLDN(2) DPWR DGND
+ DATA RIP
+ IO_X5200

.ENDS X5_RDBK

*$

.SUBCKT X5_STARTUP
+ GR PGR GTS PGTS CLK PCLK Q2 Q2P Q3 Q3P Q1Q4 PQ1Q4 DONEIN PDONEIN
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS

UPULUP PULLUP(4) DPWR DGND
+ Q2 Q3 Q1Q4 DONEIN
+ IO_X5200

.ENDS X5_STARTUP

*$

.SUBCKT X5_OSC
+ EXTCLK CLKSELECT GR
+ DIV_2 DIV_4 DIV_8 DIV_16 DIV_32 DIV_64 DIV_128 DIV_256 DIV_512
+ DIV_1024 DIV_2048 DIV_4096 DIV_8192 DIV_16384 DIV_32768 DIV_65536
+ OPTIONAL: DPWR=$G_X5200_VDD DGND=$G_X5200_VSS

UGRBAR INV DPWR DGND
+ GR GR_BAR
+ D0_GATE
+ IO_X5200
USELBAR INV DPWR DGND
+ CLKSELECT CLKSELECT_BAR
+ D0_GATE
+ IO_X5200
UX1 OR(2) DPWR DGND
+ CKA CKB  CKX_BUF
+ D0_GATE
+ IO_X5200
UAB0 AND(2) DPWR DGND
+ CLKSELECT EXTCLK  CKA
+ D0_GATE
+ IO_X5200
UAB1 AND(2) DPWR DGND
+ CLKSELECT_BAR INTCLK CKB
+ D0_GATE
+ IO_X5200

.MODEL D0_EFF UEFF()
U16MHZ STIM(1,1) DPWR DGND
+ INTCLK
+ IO_X5200
+   0S       0
+   +31.25ns 1
+   Repeat Forever
+      +31.25ns 0
+      +31.25ns 1
+   EndRepeat

UBUFOUT BUFA(16) DPWR DGND
+ JA JB JC JD JE JF JG JH JK JL JM JN JO JP JQ JR
+ DIV_2 DIV_4 DIV_8 DIV_16 DIV_32 DIV_64 DIV_128 DIV_256 DIV_512
+ DIV_1024 DIV_2048 DIV_4096 DIV_8192 DIV_16384 DIV_32768 DIV_65536
+ D0_GATE
+ IO_X5200

U1 JKFF(1) DPWR DGND $D_HI GR_BAR CKX_BUF $D_HI $D_HI JA KA
+ D0_EFF IO_X5200
U2 JKFF(1) DPWR DGND $D_HI GR_BAR JA $D_HI $D_HI JB KB
+ D0_EFF IO_X5200
U3 JKFF(1) DPWR DGND $D_HI GR_BAR JB $D_HI $D_HI JC KC
+ D0_EFF IO_X5200
U4 JKFF(1) DPWR DGND $D_HI GR_BAR JC $D_HI $D_HI JD KD
+ D0_EFF IO_X5200
U5 JKFF(1) DPWR DGND $D_HI GR_BAR JD $D_HI $D_HI JE KE
+ D0_EFF IO_X5200
U6 JKFF(1) DPWR DGND $D_HI GR_BAR JE $D_HI $D_HI JF KF
+ D0_EFF IO_X5200
U7 JKFF(1) DPWR DGND $D_HI GR_BAR JF $D_HI $D_HI JG KG
+ D0_EFF IO_X5200
U8 JKFF(1) DPWR DGND $D_HI GR_BAR JG $D_HI $D_HI JH KH
+ D0_EFF IO_X5200
U9 JKFF(1) DPWR DGND $D_HI GR_BAR JH $D_HI $D_HI JK KK
+ D0_EFF IO_X5200
U10 JKFF(1) DPWR DGND $D_HI GR_BAR JK $D_HI $D_HI JL KL
+ D0_EFF IO_X5200
U11 JKFF(1) DPWR DGND $D_HI GR_BAR JL $D_HI $D_HI JM KM
+ D0_EFF IO_X5200
U12 JKFF(1) DPWR DGND $D_HI GR_BAR JM $D_HI $D_HI JN KN
+ D0_EFF IO_X5200
U13 JKFF(1) DPWR DGND $D_HI GR_BAR JN $D_HI $D_HI JO KO
+ D0_EFF IO_X5200
U14 JKFF(1) DPWR DGND $D_HI GR_BAR JO $D_HI $D_HI JP KP
+ D0_EFF IO_X5200
U15 JKFF(1) DPWR DGND $D_HI GR_BAR JP $D_HI $D_HI JQ KQ
+ D0_EFF IO_X5200
U16 JKFF(1) DPWR DGND $D_HI GR_BAR JQ $D_HI $D_HI JR KR
+ D0_EFF IO_X5200

.ENDS X5_OSC
