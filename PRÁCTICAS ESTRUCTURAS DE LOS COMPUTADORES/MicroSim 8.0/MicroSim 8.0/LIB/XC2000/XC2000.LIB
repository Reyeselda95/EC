* XC2000.LIB

.MODEL D0_TGATE UTGATE ()

.MODEL D0_GATE UGATE ()

.MODEL D0_EFF UEFF ()

.MODEL D0_GFF UGFF ()

* Xilinx X2000 I/O models

.param X2000_VDD 5.0V
.param X2000_VSS 0.0V

.subckt X2000_PWR  AGND
+	optional: VDD=$G_X2000_VDD VSS=$G_X2000_VSS
+	params:   VOLTAGE={X2000_VDD} REFERENCE={X2000_VSS}
*
VVDD  VDD VSS   {VOLTAGE}
R1    VDD AGND  1MEG
VVSS  VSS AGND  {REFERENCE}
R2    VSS AGND  1MEG
.ends
*$

.model IO_X2000 uio (
+	drvh=1649	drvl=1649
+	AtoD1="AtoD_X2000"	AtoD2="AtoD_X2000"
+	AtoD3="AtoD_X2000"	AtoD4="AtoD_X2000"
+	DtoA1="DtoA_X2000"	DtoA2="DtoA_X2000"
+	DtoA3="DtoA_X2000"	DtoA4="DtoA_X2000"
+       tswhl1=7.07ns		tswlh1=8.58ns
+       tswhl2=6.94ns		tswlh2=8.37ns
+       tswhl3=9.33ns		tswlh3=10.73ns
+       tswhl4=9.18ns		tswlh4=10.59ns
+	DIGPOWER="X2000_PWR"
+	)
*$

.model IO_X2000_OC uio (
+	drvh=20K	drvl=1649
+	AtoD1="AtoD_X2000"	AtoD2="AtoD_X2000"
+	AtoD3="AtoD_X2000"	AtoD4="AtoD_X2000"
+	DtoA1="DtoA_X2000"	DtoA2="DtoA_X2000"
+	DtoA3="DtoA_X2000"	DtoA4="DtoA_X2000"
+       tswhl1=7.07ns		tswlh1=8.58ns
+       tswhl2=6.94ns		tswlh2=8.37ns
+       tswhl3=9.33ns		tswlh3=10.73ns
+       tswhl4=9.18ns		tswlh4=10.59ns
+	DIGPOWER="X2000_PWR"
+	)

*$

.subckt AtoD_X2000  A D  DPWR DGND
+	params: CAPACITANCE=0
*
XNORM A NORM DPWR DGND AtoD_NORM_X2000
O0  NORM DGND DOX2000 DGTLNET=D IO_X2000
C1  A DGND {CAPACITANCE+0.1pF}
D1  DGND A    D74CLMP
D2  A    DPWR D74CLMP
.ends
*$
.subckt DtoA_X2000  D A  DPWR DGND
+	params: DRVL=0 DRVH=0 CAPACITANCE=0
*
X1  DPWR DGND DRVPWR DRVGND DtoA_DRIVE_X2000 
N1  A DRVGND DRVPWR DINX2000 DGTLNET=D IO_X2000
C1  A DGND {CAPACITANCE+0.1pF}
.ends
*$
*-------------------------------------------------
* X2000 Input Voltage Normilization Subcircuit
*
* This circuit normalizes the input voltage, so that
* voltages below -0.5 are '0', and above +0.5 are '1'.
* The EVt device "looks up" the threshold voltage for the 
* current power supply voltage in the table.  The data for the
* table comes from the minimum and maximum voltage transfer
* characteristics graph for the X2000.

.subckt AtoD_NORM_X2000 A ANORM DPWR DGND
*
EVt THRESHOLD 0 TABLE {V(DPWR,DGND)} = 1.5,0 3.5,0.6 5,1.5 10,3 15,4
RVt THRESHOLD 0 100k
EN  ANORM DGND VALUE = {(V(A,DGND)-V(DPWR,DGND)/2)/((V(DPWR,DGND)-2*V(THRESHOLD))+1u)}
RN  ANORM DGND 100k
Rld1 A DPWR 100MEG
Rld2 A DGND 100MEG
.ends
*$
*-------------------------------------------------
* X2000 Output Drive Subcircuit
*
* This circuit constructs the correct output drive
* resistance for the power supply voltage.  This resistance is inserted
* in series with the digital input device, and the digital input device 
* resistance is set to a low value when it is on.  The tables provide the 
* output current at 1v VDS for various values of VDD (3V is an estimate)
* from the X2000

.subckt DtoA_DRIVE_X2000 DPWR DGND DRVPWR DRVGND
*
EDRVP DRVP 0 TABLE {V(DPWR,DGND)} = 1.5,0mA 3,0.5mA 5,1.2mA 10,2.0mA 15,3.0mA
EDRVN DRVN 0 TABLE {V(DPWR,DGND)} = 1.5,0mA 3,0.5mA 5,1.5mA 10,4.0mA 15,7.0mA
RDRVP DRVP 0 1K
RDRVN DRVN 0 1K
GPWR DPWR DRVPWR VALUE = {V(DPWR,DRVPWR)*V(DRVP)}
GGND DRVGND DGND VALUE = {V(DRVGND,DGND)*V(DRVN)}
RDUM1 DPWR DRVPWR 100MEG
RDUM2 DGND DRVGND 100MEG
.ends
*$
*-------------------------------------------------
* X2000 Digital Input/Output Models

.model DINX2000 dinput (
+	s0name="0"	s0tsw=15ns	s0rlo=1 	s0rhi=80K
+	s1name="1"	s1tsw=15ns	s1rlo=40K	s1rhi=1
+	s2name="X"	s2tsw=15ns	s2rlo=800	s2rhi=800
+	s3name="R"	s3tsw=15ns	s3rlo=800	s3rhi=800
+	s4name="F"	s4tsw=15ns	s4rlo=800	s4rhi=800
+	s5name="Z"	s5tsw=15ns	s5rlo=1MEG	s5rhi=1MEG
+	)
*$
.model DOX2000 doutput (
+	s0name="X"	s0vlo=-0.5	s0vhi=0.5
+	s1name="0"	s1vlo=-3.0	s1vhi=-0.5
+	s2name="R"	s2vlo=-0.5	s2vhi=0.05
+	s3name="R"	s3vlo=-0.05	s3vhi=0.5
+	s4name="X"	s4vlo=-0.5	s4vhi=0.5
+	s5name="1"	s5vlo= 0.5	s5vhi=3.0
+	s6name="F"	s6vlo=-0.05	s6vhi=0.5
+	s7name="F"	s7vlo=-0.5	s7vhi=0.05
+	)
*$

.SUBCKT X2_BUF IN PI OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: IN_D=0 OUT_D=0

U1 LOGICEXP(3,1) DPWR DGND 
+ IN PI PO OUT
+ X2_BUF
+ IO_X2000
+ LOGIC:
+   OUT = {PO ^ (IN^PI) }

.MODEL X2_BUF UGATE (
+  TPLHMN={IN_D+OUT_D} TPHLMN={IN_D+OUT_D}
+  TPLHMX={IN_D+OUT_D} TPHLMX={IN_D+OUT_D}
+  )

.ENDS X2_BUF


.SUBCKT X2_ACLK IN PI OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: IN_D=0 OUT_D=0

U1 LOGICEXP(3,1) DPWR DGND 
+ IN PI PO OUT
+ X2_ACLK
+ IO_X2000
+ LOGIC:
+   OUT = {PO ^ (IN^PI) }

.MODEL X2_ACLK UGATE (
+  TPLHMN={IN_D+OUT_D} TPHLMN={IN_D+OUT_D}
+  TPLHMX={IN_D+OUT_D} TPHLMX={IN_D+OUT_D}
+  )

.ENDS X2_ACLK

*$

.SUBCKT X2_GCLK IN PI OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: IN_D=0 OUT_D=0

U1 LOGICEXP(3,1) DPWR DGND 
+ IN PI PO OUT
+ X2_GCLK
+ IO_X2000
+ LOGIC:
+   OUT = {PO ^ (IN^PI) }

.MODEL X2_GCLK UGATE (
+  TPLHMN={IN_D+OUT_D} TPHLMN={IN_D+OUT_D}
+  TPLHMX={IN_D+OUT_D} TPHLMX={IN_D+OUT_D}
+  )

.ENDS X2_GCLK

*$

.SUBCKT X2_BUFG IN PI OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: IN_D=0 OUT_D=0

U1 LOGICEXP(3,1) DPWR DGND 
+ IN PI PO OUT
+ X2_BUF
+ IO_X2000
+ LOGIC:
+   OUT = {PO ^ (IN^PI) }

.MODEL X2_BUF UGATE (
+  TPLHMN={IN_D+OUT_D} TPHLMN={IN_D+OUT_D}
+  TPLHMX={IN_D+OUT_D} TPHLMX={IN_D+OUT_D}
+  )

.ENDS X2_BUFG

*$

.SUBCKT X2_IBUF IN PI OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: IN_D=0 OUT_D=0
*
* PI and PO are not used
*
U1 BUF DPWR DGND 
+ IN OUT
+ X2_IBUF
+ IO_X2000

.MODEL X2_IBUF UGATE (
+  TPLHMN={IN_D+OUT_D} TPHLMN={IN_D+OUT_D}
+  TPLHMX={IN_D+OUT_D} TPHLMX={IN_D+OUT_D}
+  )

.ENDS X2_IBUF


.SUBCKT X2_INV IN PI OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: IN_D=0 OUT_D=0

U1 LOGICEXP(3,1) DPWR DGND 
+ IN PI PO OUT
+ X2_INV
+ IO_X2000
+ LOGIC:
+   OUT = {PO ^ ~(IN^PI) }

.MODEL X2_INV UGATE (
+  TPLHMN={IN_D+OUT_D} TPHLMN={IN_D+OUT_D}
+  TPLHMX={IN_D+OUT_D} TPHLMX={IN_D+OUT_D}
+  )

.ENDS X2_INV


*$

.SUBCKT X2_AND2  I0 P0 I1 P1 OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: I0_D=0 I1_D=0 OUT_D=0

U1 LOGICEXP(5,1) DPWR DGND 
+ I0 P0 I1 P1 PO OUT_INT
+ D0_GATE
+ IO_X2000
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) & (I1^P1) ) }

U2 PINDLY(1,0,2) DPWR DGND
+ OUT_INT
+ I0 I1
+ OUT
+ IO_X2000
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X2_AND2


.SUBCKT X2_AND3  I0 P0 I1 P1 I2 P2 OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 OUT_D=0

U1 LOGICEXP(7,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 PO OUT_INT
+ D0_GATE
+ IO_X2000
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) & (I1^P1) & (I2^P2) ) }

U2 PINDLY(1,0,3) DPWR DGND
+ OUT_INT
+ I0 I1 I2
+ OUT
+ IO_X2000
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X2_AND3


.SUBCKT X2_AND4  I0 P0 I1 P1 I2 P2 I3 P3 OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 OUT_D=0

U1 LOGICEXP(9,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 PO OUT_INT
+ D0_GATE
+ IO_X2000
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) & (I1^P1) & (I2^P2) & (I3^P3) ) }

U2 PINDLY(1,0,4) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3
+ OUT
+ IO_X2000
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X2_AND4


.SUBCKT X2_AND5  I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 I4_D=0 OUT_D=0

U1 LOGICEXP(11,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 PO OUT_INT
+ D0_GATE
+ IO_X2000
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) & (I1^P1) & (I2^P2) & (I3^P3) & (I4^P4) ) }

U2 PINDLY(1,0,5) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3 I4
+ OUT
+ IO_X2000
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 CHANGED(I4,0), DELAY(I4_D+OUT_D,-1,I4_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X2_AND5

*$

.SUBCKT X2_CY4 C7 C6 C5 C4 C3 C2 C1 C0 B1 A1 B0 A0 ADD CIN COUT COUT0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS:  A1_D=0 A0_D=0 B1_D=0 B0_D=0 ADD_D=0 CIN_D=0 COUT_D=0


UA1DLY BUF DPWR DGND A1 A1_DLY D_A1 IO_X2000
.MODEL D_A1 UGATE (TPLHMN={A1_D} TPLHMX={A1_D} TPHLMN={A1_D} TPHLMX={A1_D}

UA0DLY BUF DPWR DGND A0 A0_DLY D_A0 IO_X2000
.MODEL D_A0 UGATE (TPLHMN={A0_D} TPLHMX={A0_D} TPHLMN={A0_D} TPHLMX={A0_D}

UB1DLY BUF DPWR DGND B1 B1_DLY D_B1 IO_X2000
.MODEL D_B1 UGATE (TPLHMN={B1_D} TPLHMX={B1_D} TPHLMN={B1_D} TPHLMX={B1_D}

UB0DLY BUF DPWR DGND B0 B0_DLY D_B0 IO_X2000
.MODEL D_B0 UGATE (TPLHMN={B0_D} TPLHMX={B0_D} TPHLMN={B0_D} TPHLMX={B0_D}

UADDDLY BUF DPWR DGND ADD ADD_DLY D_ADD IO_X2000
.MODEL D_ADD UGATE (TPLHMN={ADD_D} TPLHMX={ADD_D} TPHLMN={ADD_D} TPHLMX={ADD_D}

UCINDLY BUF DPWR DGND CIN CIN_DLY D_CIN IO_X2000
.MODEL D_CIN UGATE (TPLHMN={CIN_D} TPLHMX={CIN_D} TPHLMN={CIN_D} TPHLMX={CIN_D}

U1 LOGICEXP(14,5) DPWR DGND
+ B1_DLY A1_DLY B0_DLY A0_DLY ADD_DLY CIN_DLY C7 C6 C5 C4 C3 C2 C1 C0 
+ E0 E1 E2 E3 CONEW
+ D0_GATE
+ IO_X2000
+ LOGIC:
+   N0 = {(C1 & ~C0)|(C0 & ADD_DLY)}
+   E0 = {~(~C6 | (C6 &  (A1_DLY ^ (N0 ^ (~B1_DLY | ~C7)))))}
+   E1 = {~E0}
+   E2 = {~((C2 & ~C3)| (C3 & (A0_DLY ^ (N0 ^ (~B0_DLY | ~C7)))))}
+   E3 = {~E2}
+   CONEW = {(A0_DLY & C4 & C5) | (~ADD_DLY & ~C4 & C5) | (C7 & ~C4 & ~C5)}

U2 BUF3 DPWR DGND A1_DLY E0 CO_I 
+ D0_TGATE
+ IO_X2000

U3 BUF3 DPWR DGND COUT0 E1 CO_I 
+ D0_TGATE
+ IO_X2000

U4 BUF3 DPWR DGND CONEW E2 COUT0
+ D0_TGATE
+ IO_X2000

U5 BUF3 DPWR DGND CIN_DLY E3 COUT0
+ D0_TGATE
+ IO_X2000

UCOUTDLY BUF DPWR DGND CO_I COUT
+ D_COUT IO_X2000
.MODEL D_COUT UGATE (TPLHMN={COUT_D} TPLHMX={COUT_D} TPHLMN={COUT_D} TPHLMX={COUT_D}

.ENDS X2_CY4

*$

.SUBCKT X2_CY4_01 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_LO $D_HI $D_HI $D_HI $D_LO $D_HI $D_LO ; 10111010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_01

*$

.SUBCKT X2_CY4_02 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_HI $D_HI $D_LO $D_HI $D_LO ; 11111010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_02

*$

.SUBCKT X2_CY4_03 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_HI $D_LO $D_LO $D_HI $D_LO ; 11110010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_03

*$

.SUBCKT X2_CY4_04 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI $D_HI $D_LO ; 11000110
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_04

*$

.SUBCKT X2_CY4_05 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI $D_LO ; 11100010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_05

*$

.SUBCKT X2_CY4_06 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO ; 10111000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_06

*$

.SUBCKT X2_CY4_07 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO ; 11111000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_07

*$

.SUBCKT X2_CY4_08 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_LO $D_LO $D_LO $D_LO $D_LO $D_LO ; 11000000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_08

*$

.SUBCKT X2_CY4_09 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI $D_LO $D_LO ; 11000100
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_09

*$
.SUBCKT X2_CY4_1 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_LO $D_HI $D_HI $D_HI $D_LO $D_HI $D_LO ; 10111010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_1

*$

.SUBCKT X2_CY4_2 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_HI $D_HI $D_LO $D_HI $D_LO ; 11111010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_2

*$

.SUBCKT X2_CY4_3 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_HI $D_LO $D_LO $D_HI $D_LO ; 11110010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_3

*$

.SUBCKT X2_CY4_4 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI $D_HI $D_LO ; 11000110
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_4

*$

.SUBCKT X2_CY4_5 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI $D_LO ; 11100010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_5

*$

.SUBCKT X2_CY4_6 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO ; 10111000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_6

*$

.SUBCKT X2_CY4_7 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO ; 11111000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_7

*$

.SUBCKT X2_CY4_8 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_LO $D_LO $D_LO $D_LO $D_LO $D_LO ; 11000000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_8

*$

.SUBCKT X2_CY4_9 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI $D_LO $D_LO ; 11000100
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_9

*$

.SUBCKT X2_CY4_10 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_LO ; 11110000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_10

*$

.SUBCKT X2_CY4_11 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_LO $D_LO ; 11100000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_11

*$

.SUBCKT X2_CY4_12 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_HI ; 10111001
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_12

*$

.SUBCKT X2_CY4_13 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_HI $D_HI $D_LO $D_LO $D_HI ; 11111001
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_13

*$

.SUBCKT X2_CY4_14 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI ; 11110001
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_14

*$

.SUBCKT X2_CY4_15 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI $D_LO $D_HI ; 11000101
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_15

*$

.SUBCKT X2_CY4_16 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_LO $D_HI ; 11100001
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_16

*$

.SUBCKT X2_CY4_17 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_LO $D_HI $D_HI $D_HI $D_LO $D_HI $D_LO ; 00111010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_17

*$

.SUBCKT X2_CY4_18 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS

U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_HI $D_LO $D_HI $D_LO ; 01111010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_18

.SUBCKT X2_CY4_19 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS

U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_HI $D_LO ; 01110010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_19

*$

.SUBCKT X2_CY4_20 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_LO $D_LO $D_LO $D_LO $D_LO $D_LO ; 01000000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_20

*$

.SUBCKT X2_CY4_21 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_HI $D_LO ; 01110010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_21

*$

.SUBCKT X2_CY4_22 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_LO $D_LO $D_LO $D_HI $D_HI $D_LO ; 01000110
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_22

*$

.SUBCKT X2_CY4_23 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI $D_LO ; 01100010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_23

*$

.SUBCKT X2_CY4_24 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO ; 00111000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_24

*$

.SUBCKT X2_CY4_25 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO ; 01111000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_25

*$

.SUBCKT X2_CY4_26 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_LO ; 01110000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_26

*$

.SUBCKT X2_CY4_27 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_LO $D_LO $D_LO $D_LO $D_LO $D_LO ; 01000000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_27

*$

.SUBCKT X2_CY4_28 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_LO ; 01110000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_28

*$

.SUBCKT X2_CY4_29 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_LO $D_LO $D_LO $D_HI $D_LO $D_LO ; 01000100
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_29

*$

.SUBCKT X2_CY4_30 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_LO $D_LO $D_LO $D_LO $D_LO ; 01100000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_30

*$

.SUBCKT X2_CY4_31 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_HI ; 00111001
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_31

*$

.SUBCKT X2_CY4_32 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_HI $D_LO $D_LO $D_HI ; 01111001
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_32

*$

.SUBCKT X2_CY4_33 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI ; 01110001
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_33

*$

.SUBCKT X2_CY4_34 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_LO $D_LO $D_LO $D_LO $D_LO $D_LO ; 01000000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_34

*$

.SUBCKT X2_CY4_35 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI ; 01110001
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_35

*$

.SUBCKT X2_CY4_36 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_LO $D_LO $D_LO $D_HI $D_LO $D_HI ; 01000101
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_36

*$

.SUBCKT X2_CY4_37 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
;+$D_LO $D_LO $D_LO $D_LO $D_LO $D_LO $D_LO $D_LO G; 00000000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_37

*$

.SUBCKT X2_CY4_38 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_LO $D_LO $D_LO $D_LO $D_LO $D_LO $D_LO ; 10000000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_38

*$

.SUBCKT X2_CY4_39 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_LO $D_HI $D_HI $D_LO $D_LO $D_LO $D_LO ; 00110000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_39

*$

.SUBCKT X2_CY4_40 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_LO $D_LO $D_LO $D_LO $D_HI $D_LO $D_LO ; 00000100
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_40

*$

.SUBCKT X2_CY4_41 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_LO $D_HI $D_LO $D_LO $D_LO $D_LO $D_LO ; 00100000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_41

*$

.SUBCKT X2_CY4_42 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_LO $D_LO $D_LO $D_LO $D_HI $D_LO $D_LO ; 00000100
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X2000
.ENDS X2_CY4_42

*$

.SUBCKT X2_FDCP PRE CLR CLK PCLK GR D Q
+ OPTIONAL:  DPWR=$G_X2000_VDD DGND=$G_X2000_VSS 
+ PARAMS: PRE_D=0 CLR_D=0 CLK_D=0 GR_D=0 D_D=0 Q_D=0
+   D_CLK_SETUP=0       D_CLK_HOLD=0
+   PRE_CLK_SETUP=0     PRE_CLK_HOLD=0
+   CLR_CLK_SETUP=0     CLR_CLK_HOLD=0
+   GR_CLK_SETUP=0      GR_CLK_HOLD=0
+   PRE_WIDTH= 0 CLK_WIDTH=0 CLR_WIDTH=0 GR_WIDTH=0

UD BUF DPWR DGND
+ D D_BUF
+ X2_FDCP_D 
+ IO_X2000
.MODEL X2_FDCP_D UGATE (
+   TPLHMN={D_D} TPLHMX={D_D}
+   TPHLMN={D_D} TPHLMX={D_D}
+   )

UCLK XOR DPWR DGND
+ CLK PCLK CLK_BUF
+ X2_FDCP_CLK 
+ IO_X2000
.MODEL X2_FDCP_CLK UGATE (
+   TPLHMN={CLK_D} TPLHMX={CLK_D}
+   TPHLMN={CLK_D} TPHLMX={CLK_D}
+   )

UGR BUF DPWR DGND
+ GR GR_BUF
+ X2_FDCP_GR 
+ IO_X2000
.MODEL X2_FDCP_GR UGATE (
+   TPLHMN={GR_D} TPLHMX={GR_D}
+   TPHLMN={GR_D} TPHLMX={GR_D}
+   )

UPRE INV DPWR DGND
+ PRE PRE_BUF
+ X2_FDCP_PRE 
+ IO_X2000
.MODEL X2_FDCP_PRE UGATE (
+   TPLHMN={PRE_D} TPLHMX={PRE_D}
+   TPHLMN={PRE_D} TPHLMX={PRE_D}
+   )

UCLR INV DPWR DGND
+ CLR CLR_BUF
+ X2_FDCP_CLR 
+ IO_X2000
.MODEL X2_FDCP_CLR UGATE (
+   TPLHMN={CLR_D} TPLHMX={CLR_D}
+   TPHLMN={CLR_D} TPHLMX={CLR_D}
+   )

UCLRIN AND(2) DPWR DGND ; EITHER INPUT GENERATES LO CLR_IN
+ CLR_BUF GR_BUF CLR_IN
+ D0_GATE
+ IO_X2000

UDFF DFF(1) DPWR DGND
+ PRE_BUF CLR_IN CLK_BUF D_BUF Q_INT $D_NC
+ D0_EFF
+ IO_X2000

UDELAY PINDLY(1,0,7) DPWR DGND
+ Q_INT
+ CLK CLK_BUF D_BUF PRE CLR GR GR_BUF
+ Q
+ IO_X2000
+ PINDLY:
+   Q = {DELAY(Q_D,-1,Q_D)}
+ SETUP_HOLD:
+   CLOCK LH = CLK_BUF
+   DATA(1) = D_BUF
+   SETUPTIME = {D_CLK_SETUP}
+   HOLDTIME =  {D_CLK_HOLD}
+   WHEN = {GR_BUF == '1 & CLR == '0 & PRE == '0}
+ SETUP_HOLD:
+   CLOCK LH = CLK_BUF
+   DATA(1) = GR_BUF
+   SETUPTIME = {GR_CLK_SETUP}
+   HOLDTIME = {GR_CLK_HOLD}
+   WHEN = {GR_BUF == '1 & CLR == '0 & D_BUF == Q_INT}
+ SETUP_HOLD:
+   CLOCK LH = CLK_BUF
+   DATA(1) = CLR
+   SETUPTIME = {CLR_CLK_SETUP}
+   HOLDTIME = {CLR_CLK_HOLD}
+   WHEN = {PRE != '1 & GR_BUF == '1}
+ SETUP_HOLD:
+   CLOCK LH = CLK_BUF
+   DATA(1) = PRE
+   SETUPTIME = {PRE_CLK_SETUP}
+   HOLDTIME = {PRE_CLK_HOLD}
+   WHEN = {CLR != '1 & GR_BUF == '1}
+ WIDTH:
+   NODE = CLK
+   MIN_HI = {CLK_WIDTH}
+   MIN_LO = {CLK_WIDTH}
+ WIDTH:
+   NODE = CLR
+   MIN_HI = {CLR_WIDTH}
+ WIDTH:
+   NODE = PRE
+   MIN_HI = {PRE_WIDTH}
+ WIDTH:
+   NODE = GR
+   MIN_LO = {GR_WIDTH}

.ENDS X2_FDCP

*$

.SUBCKT X2_LDCP PRE CLR G PG GR D Q
+ OPTIONAL:  DPWR=$G_X2000_VDD DGND=$G_X2000_VSS 
+ PARAMS: PRE_D=0 CLR_D=0 G_D=0 GR_D=0 D_D=0 Q_D=0
+   PRE_G_SETUP=0     PRE_G_HOLD=0
+   D_G_SETUP=0       D_G_HOLD=0
+   CLR_G_SETUP=0     CLR_G_HOLD=0
+   GR_G_SETUP=0      GR_G_HOLD=0
+   PRE_WIDTH= 0 G_WIDTH=0 CLR_WIDTH=0 GR_WIDTH=0

UD BUF DPWR DGND
+ D D_BUF
+ X2_LDCP_D 
+ IO_X2000
.MODEL X2_LDCP_D UGATE (
+   TPLHMN={D_D} TPLHMX={D_D}
+   TPHLMN={D_D} TPHLMX={D_D}
+   )

UG XOR DPWR DGND
+ G PG G_BUF
+ X2_LDCP_G 
+ IO_X2000
.MODEL X2_LDCP_G UGATE (
+   TPLHMN={G_D} TPLHMX={G_D}
+   TPHLMN={G_D} TPHLMX={G_D}
+   )

UGR BUF DPWR DGND
+ GR GR_BUF
+ X2_LDCP_GR 
+ IO_X2000
.MODEL X2_LDCP_GR UGATE (
+   TPLHMN={GR_D} TPLHMX={GR_D}
+   TPHLMN={GR_D} TPHLMX={GR_D}
+   )

UPRE INV DPWR DGND
+ PRE PRE_BUF
+ X2_LDCP_PRE 
+ IO_X2000
.MODEL X2_LDCP_PRE UGATE (
+   TPLHMN={PRE_D} TPLHMX={PRE_D}
+   TPHLMN={PRE_D} TPHLMX={PRE_D}
+   )

UCLR INV DPWR DGND
+ CLR CLR_BUF
+ X2_LDCP_CLR 
+ IO_X2000
.MODEL X2_LDCP_CLR UGATE (
+   TPLHMN={CLR_D} TPLHMX={CLR_D}
+   TPHLMN={CLR_D} TPHLMX={CLR_D}
+   )

UCLRIN AND(2) DPWR DGND ; EITHER INPUT GENERATES LO CLR_IN
+ CLR_BUF GR_BUF CLR_IN
+ D0_GATE
+ IO_X2000

UDFF DLTCH(1) DPWR DGND
+ PRE_BUF CLR_IN G_BUF D_BUF Q_INT $D_NC
+ D0_GFF
+ IO_X2000

UDELAY PINDLY(1,0,7) DPWR DGND
+ Q_INT
+ G G_BUF D_BUF PRE CLR GR GR_BUF
+ Q
+ IO_X2000
+ PINDLY:
+   Q = {DELAY(Q_D,-1,Q_D)}
+ SETUP_HOLD:
+   CLOCK LH = G_BUF
+   DATA(1) = D_BUF
+   SETUPTIME = {D_G_SETUP}
+   HOLDTIME =  {D_G_HOLD}
+   WHEN = {GR_BUF == '0 & CLR == '0 & PRE == '0}
+ SETUP_HOLD:
+   CLOCK LH = G_BUF
+   DATA(1) = GR_BUF
+   SETUPTIME = {GR_G_SETUP}
+   HOLDTIME = {GR_G_HOLD}
+   WHEN = {GR_BUF == '0 & CLR == '0 & D_BUF == Q_INT}
+ SETUP_HOLD:
+   CLOCK LH = G_BUF
+   DATA(1) = CLR
+   SETUPTIME = {CLR_G_SETUP}
+   HOLDTIME = {CLR_G_HOLD}
+   WHEN = {PRE != '1 & GR_BUF == '0}
+ SETUP_HOLD:
+   CLOCK LH = G_BUF
+   DATA(1) = PRE
+   SETUPTIME = {PRE_G_SETUP}
+   HOLDTIME = {PRE_G_HOLD}
+   WHEN = {CLR != '1 & GR_BUF == '0}
+ WIDTH:
+   NODE = G
+   MIN_HI = {G_WIDTH}
+   MIN_LO = {G_WIDTH}
+ WIDTH:
+   NODE = CLR
+   MIN_HI = {CLR_WIDTH}
+ WIDTH:
+   NODE = PRE
+   MIN_HI = {PRE_WIDTH}
+ WIDTH:
+   NODE = GR
+   MIN_LO = {GR_WIDTH}

.ENDS X2_LDCP

*$

.SUBCKT X2_NAND2  I0 P0 I1 P1 OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: I0_D=0 I1_D=0 OUT_D=0

U1 LOGICEXP(5,1) DPWR DGND 
+ I0 P0 I1 P1 PO OUT_INT
+ D0_GATE
+ IO_X2000
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) & (I1^P1) ) }

U2 PINDLY(1,0,2) DPWR DGND
+ OUT_INT
+ I0 I1
+ OUT
+ IO_X2000
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X2_NAND2


.SUBCKT X2_NAND3  I0 P0 I1 P1 I2 P2 OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 OUT_D=0

U1 LOGICEXP(7,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 PO OUT_INT
+ D0_GATE
+ IO_X2000
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) & (I1^P1) & (I2^P2) ) }

U2 PINDLY(1,0,3) DPWR DGND
+ OUT_INT
+ I0 I1 I2
+ OUT
+ IO_X2000
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X2_NAND3


.SUBCKT X2_NAND4  I0 P0 I1 P1 I2 P2 I3 P3 OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 OUT_D=0

U1 LOGICEXP(9,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 PO OUT_INT
+ D0_GATE
+ IO_X2000
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) & (I1^P1) & (I2^P2) & (I3^P3) ) }

U2 PINDLY(1,0,4) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3
+ OUT
+ IO_X2000
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X2_NAND4


.SUBCKT X2_NAND5  I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 I4_D=0 OUT_D=0

U1 LOGICEXP(11,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 PO OUT_INT
+ D0_GATE
+ IO_X2000
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) & (I1^P1) & (I2^P2) & (I3^P3) & (I4^P4) ) }

U2 PINDLY(1,0,5) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3 I4
+ OUT
+ IO_X2000
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 CHANGED(I4,0), DELAY(I4_D+OUT_D,-1,I4_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X2_NAND5

*$


.SUBCKT X2_NOR2  I0 P0 I1 P1 OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: I0_D=0 I1_D=0 OUT_D=0

U1 LOGICEXP(5,1) DPWR DGND 
+ I0 P0 I1 P1 PO OUT_INT
+ D0_GATE
+ IO_X2000
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) | (I1^P1) ) }

U2 PINDLY(1,0,2) DPWR DGND
+ OUT_INT
+ I0 I1
+ OUT
+ IO_X2000
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X2_NOR2


.SUBCKT X2_NOR3  I0 P0 I1 P1 I2 P2 OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 OUT_D=0

U1 LOGICEXP(7,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 PO OUT_INT
+ D0_GATE
+ IO_X2000
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) | (I1^P1) | (I2^P2) ) }

U2 PINDLY(1,0,3) DPWR DGND
+ OUT_INT
+ I0 I1 I2
+ OUT
+ IO_X2000
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X2_NOR3


.SUBCKT X2_NOR4  I0 P0 I1 P1 I2 P2 I3 P3 OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 OUT_D=0

U1 LOGICEXP(9,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 PO OUT_INT
+ D0_GATE
+ IO_X2000
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) | (I1^P1) | (I2^P2) | (I3^P3) ) }

U2 PINDLY(1,0,4) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3
+ OUT
+ IO_X2000
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X2_NOR4


.SUBCKT X2_NOR5  I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 I4_D=0 OUT_D=0

U1 LOGICEXP(11,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 PO OUT_INT
+ D0_GATE
+ IO_X2000
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) | (I1^P1) | (I2^P2) | (I3^P3) | (I4^P4) ) }

U2 PINDLY(1,0,5) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3 I4
+ OUT
+ IO_X2000
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 CHANGED(I4,0), DELAY(I4_D+OUT_D,-1,I4_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X2_NOR5

*$

.SUBCKT X2_OBUF IN PI OUT
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: IN_D=0 OUT_D=0
*
* PI is not used
*
U1 BUF DPWR DGND 
+ IN OUT
+ X2_OBUF
+ IO_X2000

.MODEL X2_OBUF UGATE (
+  TPLHMN={IN_D+OUT_D} TPHLMN={IN_D+OUT_D}
+  TPLHMX={IN_D+OUT_D} TPHLMX={IN_D+OUT_D}
+  )

.ENDS X2_OBUF


.SUBCKT X2_OBUFT IN PI T PT OUT
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: IN_D=0 TLH_D=0 THL_D=0 OUT_D=0
*
UTDLY BUF DPWR DGND T TDLY X2_OBUFT_T IO_X2000

.MODEL X2_OBUFT_T UGATE(
+  TPLHMN={TLH_D} TPHLMN={THL_D}
+  TPLHMX={TLH_D} TPHLMX={THL_D}
+  )

UENA LOGICEXP(2,1) DPWR DGND 
+ TDLY PT  ENA
+ D0_GATE IO_X2000
+ LOGIC:
+   ENA = { ~((TDLY ^ PT) ) }  ; XILINX 3-states are active-low enable

UIDLY BUF DPWR DGND IN INBUF X2_OBUFT_IN IO_X2000
.MODEL X2_OBUFT_IN UGATE(
+  TPLHMN={IN_D+OUT_D} TPHLMN={IN_D+OUT_D} 
+  TPLHMX={IN_D+OUT_D} TPHLMX={IN_D+OUT_D} 
+  )

UIN XOR DPWR DGND INBUF PI INNEW D0_GATE IO_X2000

UOUT BUF3 DPWR DGND 
+ INNEW ENA OUT
+ D0_TGATE
+ IO_X2000

.ENDS X2_OBUFT


.SUBCKT X2_OR2  I0 P0 I1 P1 OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: I0_D=0 I1_D=0 OUT_D=0

U1 LOGICEXP(5,1) DPWR DGND 
+ I0 P0 I1 P1 PO OUT_INT
+ D0_GATE
+ IO_X2000
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) | (I1^P1) ) }

U2 PINDLY(1,0,2) DPWR DGND
+ OUT_INT
+ I0 I1
+ OUT
+ IO_X2000
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X2_OR2


.SUBCKT X2_OR3  I0 P0 I1 P1 I2 P2 OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 OUT_D=0

U1 LOGICEXP(7,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 PO OUT_INT
+ D0_GATE
+ IO_X2000
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) | (I1^P1) | (I2^P2) ) }

U2 PINDLY(1,0,3) DPWR DGND
+ OUT_INT
+ I0 I1 I2
+ OUT
+ IO_X2000
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X2_OR3


.SUBCKT X2_OR4  I0 P0 I1 P1 I2 P2 I3 P3 OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 OUT_D=0

U1 LOGICEXP(9,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 PO OUT_INT
+ D0_GATE
+ IO_X2000
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) | (I1^P1) | (I2^P2) | (I3^P3) ) }

U2 PINDLY(1,0,4) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3
+ OUT
+ IO_X2000
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X2_OR4


.SUBCKT X2_OR5  I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 I4_D=0 OUT_D=0

U1 LOGICEXP(11,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 PO OUT_INT
+ D0_GATE
+ IO_X2000
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) | (I1^P1) | (I2^P2) | (I3^P3) | (I4^P4) ) }

U2 PINDLY(1,0,5) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3 I4
+ OUT
+ IO_X2000
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 CHANGED(I4,0), DELAY(I4_D+OUT_D,-1,I4_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X2_OR5

*$

.SUBCKT X2_TBUF  IN T OUT TDLY
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: IN_D=0 TLH_D=0 THL_D=0 OUT_D=0
*
* XILINX 3-states enables are active low
* The TDLY signal is available as an output to allow for
* proper timing of externally-connected PULLUP devices.
* xc2000 devices do not have user-specified internal pullups.

UTDLY BUF DPWR DGND T TDLY X2_TBUF_TDLY IO_X2000
UTDLYBAR INV DPWR DGND T TDLYBAR X2_TBUF_T IO_X2000

.MODEL X2_TBUF_TDLY UGATE(
+  TPLHMN={TLH_D} TPHLMN={THL_D}
+  TPLHMX={TLH_D} TPHLMX={THL_D}
+  )

.MODEL X2_TBUF_T UGATE(
+  TPLHMN={THL_D} TPHLMN={TLH_D}	; lh/hl swapped intentionally
+  TPLHMX={THL_D} TPHLMX={TLH_D}
+  )

UIDLY BUF DPWR DGND IN INDLY X2_TBUF_IN IO_X2000
.MODEL X2_TBUF_IN UGATE(
+  TPLHMN={IN_D+OUT_D} TPHLMN={IN_D+OUT_D} 
+  TPLHMX={IN_D+OUT_D} TPHLMX={IN_D+OUT_D} 
+  )

UOUT BUF3 DPWR DGND 
+ INDLY TDLYBAR OUT
+ D0_TGATE
+ IO_X2000

.ENDS X2_TBUF

*$

.SUBCKT X2_XNOR2  I0 P0 I1 P1 OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: I0_D=0 I1_D=0 OUT_D=0

U1 LOGICEXP(5,1) DPWR DGND 
+ I0 P0 I1 P1 PO OUT_INT
+ D0_GATE
+ IO_X2000
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) ^ (I1^P1) ) }

U2 PINDLY(1,0,2) DPWR DGND
+ OUT_INT
+ I0 I1
+ OUT
+ IO_X2000
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X2_XNOR2

*$

.SUBCKT X2_XNOR3  I0 P0 I1 P1 I2 P2  OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 OUT_D=0

U1 LOGICEXP(7,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 PO OUT_INT
+ D0_GATE
+ IO_X2000
+ LOGIC:
+   OUT_INT = {PO ^ ~ ( (I0^P0) ^ (I1^P1) ^ (I2^P2)) }

U2 PINDLY(1,0,3) DPWR DGND
+ OUT_INT
+ I0 I1 I2
+ OUT
+ IO_X2000
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+                CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X2_XNOR3

*$

.SUBCKT X2_XNOR4  I0 P0 I1 P1 I2 P2 I3 P3 OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 OUT_D=0

U1 LOGICEXP(9,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 PO OUT_INT
+ D0_GATE
+ IO_X2000
+ LOGIC:
+   OUT_INT = {PO ^ ~ ( (I0^P0) ^ (I1^P1) ^ (I2^P2) ^ (I3^P3) ) }

U2 PINDLY(1,0,4) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3
+ OUT
+ IO_X2000
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X2_XNOR4

*$

.SUBCKT X2_XNOR5  I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 I4_D=0 OUT_D=0

U1 LOGICEXP(11,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 PO OUT_INT
+ D0_GATE
+ IO_X2000
+ LOGIC:
+   OUT_INT = {PO ^ ~ ( (I0^P0) ^ (I1^P1) ^ (I2^P2) ^ (I3^P3) ^ (I4^P4) ) }

U2 PINDLY(1,0,5) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3 I4
+ OUT
+ IO_X2000
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 CHANGED(I4,0), DELAY(I4_D+OUT_D,-1,I4_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X2_XNOR5

*$

.SUBCKT X2_XOR2  I0 P0 I1 P1 OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: I0_D=0 I1_D=0 OUT_D=0

U1 LOGICEXP(5,1) DPWR DGND 
+ I0 P0 I1 P1 PO OUT_INT
+ D0_GATE
+ IO_X2000
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) ^ (I1^P1) ) }

U2 PINDLY(1,0,2) DPWR DGND
+ OUT_INT
+ I0 I1
+ OUT
+ IO_X2000
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X2_XOR2

*$

.SUBCKT X2_XOR3  I0 P0 I1 P1 I2 P2  OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 OUT_D=0

U1 LOGICEXP(7,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 PO OUT_INT
+ D0_GATE
+ IO_X2000
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) ^ (I1^P1) ^ (I2^P2)) }

U2 PINDLY(1,0,3) DPWR DGND
+ OUT_INT
+ I0 I1 I2
+ OUT
+ IO_X2000
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+                CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X2_XOR3

*$

.SUBCKT X2_XOR4  I0 P0 I1 P1 I2 P2 I3 P3 OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 OUT_D=0

U1 LOGICEXP(9,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 PO OUT_INT
+ D0_GATE
+ IO_X2000
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) ^ (I1^P1) ^ (I2^P2) ^ (I3^P3) ) }

U2 PINDLY(1,0,4) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3
+ OUT
+ IO_X2000
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X2_XOR4

*$

.SUBCKT X2_XOR5  I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 OUT PO
+ OPTIONAL: DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 I4_D=0 OUT_D=0

U1 LOGICEXP(11,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 PO OUT_INT
+ D0_GATE
+ IO_X2000
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) ^ (I1^P1) ^ (I2^P2) ^ (I3^P3) ^ (I4^P4) ) }

U2 PINDLY(1,0,5) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3 I4
+ OUT
+ IO_X2000
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 CHANGED(I4,0), DELAY(I4_D+OUT_D,-1,I4_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X2_XOR5

*$

.SUBCKT X2_INFF GR CLK D Q
+ OPTIONAL:  DPWR=$G_X2000_VDD DGND=$G_X2000_VSS
+ PARAMS: GR_D=0 CLK_D=0 D_D=0 Q_D=0
+   D_CLK_SETUP=0       D_CLK_HOLD=0
+   GR_CLK_SETUP=0      GR_CLK_HOLD=0
+   CLK_WIDTH=0         GR_WIDTH=0


UD BUF DPWR DGND
+ D  D_BUF
+ X2_INFF_D 
+ IO_X2000

.MODEL X2_INFF_D UGATE (
+   TPLHMN={D_D} TPLHMX={D_D}
+   TPHLMN={D_D} TPHLMX={D_D}
+   )

UCLK BUF DPWR DGND
+ CLK  CLK_BUF
+ X2_INFF_CLK 
+ IO_X2000

.MODEL X2_INFF_CLK UGATE (
+   TPLHMN={CLK_D} TPLHMX={CLK_D}
+   TPHLMN={CLK_D} TPHLMX={CLK_D}
+   )

UGR BUF DPWR DGND
+ GR  GR_BUF
+ X2_INFF_GR 
+ IO_X2000

.MODEL X2_INFF_GR UGATE (
+   TPLHMN={GR_D} TPLHMX={GR_D}
+   TPHLMN={GR_D} TPHLMX={GR_D}
+   )

UDFF DFF(1) DPWR DGND
+ $D_HI GR_BUF CLK_BUF D_BUF Q_INT $D_NC
+ D0_EFF
+ IO_X2000

UDELAY PINDLY(1,0,5) DPWR DGND
+ Q_INT
+ CLK CLK_BUF D_BUF GR GR_BUF
+ Q
+ IO_X2000
+ PINDLY:
+   Q = {DELAY(Q_D,-1,Q_D)}
+ SETUP_HOLD:
+   CLOCK LH = CLK_BUF
+   DATA(1) = D_BUF
+   SETUPTIME = {D_CLK_SETUP}
+   HOLDTIME =  {D_CLK_HOLD}
+   WHEN = {GR_BUF == '1 }
+ SETUP_HOLD:
+   CLOCK LH = CLK_BUF
+   DATA(1) = GR_BUF
+   SETUPTIME = {GR_CLK_SETUP}
+   HOLDTIME =  {GR_CLK_HOLD}
+ WIDTH:
+   NODE = CLK
+   MIN_HI = {CLK_WIDTH}
+   MIN_LO = {CLK_WIDTH}
+ WIDTH:
+   NODE = GR
+   MIN_LO = {GR_WIDTH}

.MODEL X2_INFF_Q UEFF (
+  TPCLKQLHMN={Q_D} TPCLKQLHMX={Q_D}
+  TPCLKQHLMN={Q_D} TPCLKQHLMX={Q_D}
+  )

.ENDS X2_INFF

*$

