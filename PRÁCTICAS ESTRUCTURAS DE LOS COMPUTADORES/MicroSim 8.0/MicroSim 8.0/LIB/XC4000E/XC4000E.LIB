* XC4000E.LIB

.MODEL D0_TGATE UTGATE ()

.MODEL D0_GATE UGATE ()

.MODEL D0_EFF UEFF ()

.MODEL D0_GFF UGFF ()

* Xilinx X4000E I/O models

.param X4000E_VDD 5.0V
.param X4000E_VSS 0.0V

.subckt X4000E_PWR  AGND
+	optional: VDD=$G_X4000E_VDD VSS=$G_X4000E_VSS
+	params:   VOLTAGE={X4000E_VDD} REFERENCE={X4000E_VSS}
*
VVDD  VDD VSS   {VOLTAGE}
R1    VDD AGND  1MEG
VVSS  VSS AGND  {REFERENCE}
R2    VSS AGND  1MEG
.ends
*$

.model IO_X4000E uio (
+	drvh=1649	drvl=1649
+	AtoD1="AtoD_X4000E"	AtoD2="AtoD_X4000E"
+	AtoD3="AtoD_X4000E"	AtoD4="AtoD_X4000E"
+	DtoA1="DtoA_X4000E"	DtoA2="DtoA_X4000E"
+	DtoA3="DtoA_X4000E"	DtoA4="DtoA_X4000E"
+       tswhl1=7.07ns		tswlh1=8.58ns
+       tswhl2=6.94ns		tswlh2=8.37ns
+       tswhl3=9.33ns		tswlh3=10.73ns
+       tswhl4=9.18ns		tswlh4=10.59ns
+	DIGPOWER="X4000E_PWR"
+	)
*$

.model IO_X4000E_OC uio (
+	drvh=20K	drvl=1649
+	AtoD1="AtoD_X4000E"	AtoD2="AtoD_X4000E"
+	AtoD3="AtoD_X4000E"	AtoD4="AtoD_X4000E"
+	DtoA1="DtoA_X4000E"	DtoA2="DtoA_X4000E"
+	DtoA3="DtoA_X4000E"	DtoA4="DtoA_X4000E"
+       tswhl1=7.07ns		tswlh1=8.58ns
+       tswhl2=6.94ns		tswlh2=8.37ns
+       tswhl3=9.33ns		tswlh3=10.73ns
+       tswhl4=9.18ns		tswlh4=10.59ns
+	DIGPOWER="X4000E_PWR"
+	)
*$

.model IO_X4000E_PULLUP uio (
+	drvh=5K	drvl=1649
+	AtoD1="AtoD_X4000E"	AtoD2="AtoD_X4000E"
+	AtoD3="AtoD_X4000E"	AtoD4="AtoD_X4000E"
+	DtoA1="DtoA_X4000E"	DtoA2="DtoA_X4000E"
+	DtoA3="DtoA_X4000E"	DtoA4="DtoA_X4000E"
+       tswhl1=7.07ns		tswlh1=8.58ns
+       tswhl2=6.94ns		tswlh2=8.37ns
+       tswhl3=9.33ns		tswlh3=10.73ns
+       tswhl4=9.18ns		tswlh4=10.59ns
+	DIGPOWER="X4000E_PWR"
+	)
*$

.subckt AtoD_X4000E  A D  DPWR DGND
+	params: CAPACITANCE=0
*
XNORM A NORM DPWR DGND AtoD_NORM_X4000E
O0  NORM DGND DOX4000E DGTLNET=D IO_X4000E
C1  A DGND {CAPACITANCE+0.1pF}
D1  DGND A    D74CLMP
D2  A    DPWR D74CLMP
.ends
*$
.subckt DtoA_X4000E  D A  DPWR DGND
+	params: DRVL=0 DRVH=0 CAPACITANCE=0
*
X1  DPWR DGND DRVPWR DRVGND DtoA_DRIVE_X4000E 
N1  A DRVGND DRVPWR DINX4000E DGTLNET=D IO_X4000E
C1  A DGND {CAPACITANCE+0.1pF}
.ends
*$
*-------------------------------------------------
* X4000E Input Voltage Normilization Subcircuit
*
* This circuit normalizes the input voltage, so that
* voltages below -0.5 are '0', and above +0.5 are '1'.
* The EVt device "looks up" the threshold voltage for the 
* current power supply voltage in the table.  The data for the
* table comes from the minimum and maximum voltage transfer
* characteristics graph for the X4000E.

.subckt AtoD_NORM_X4000E A ANORM DPWR DGND
*
EVt THRESHOLD 0 TABLE {V(DPWR,DGND)} = 1.5,0 3.5,0.6 5,1.5 10,3 15,4
RVt THRESHOLD 0 100k
EN  ANORM DGND VALUE = {(V(A,DGND)-V(DPWR,DGND)/2)/((V(DPWR,DGND)-2*V(THRESHOLD))+1u)}
RN  ANORM DGND 100k
Rld1 A DPWR 100MEG
Rld2 A DGND 100MEG
.ends
*$
*-------------------------------------------------
* X4000E Output Drive Subcircuit
*
* This circuit constructs the correct output drive
* resistance for the power supply voltage.  This resistance is inserted
* in series with the digital input device, and the digital input device 
* resistance is set to a low value when it is on.  The tables provide the 
* output current at 1v VDS for various values of VDD (3V is an estimate)
* from the X4000E

.subckt DtoA_DRIVE_X4000E DPWR DGND DRVPWR DRVGND
*
EDRVP DRVP 0 TABLE {V(DPWR,DGND)} = 1.5,0mA 3,0.5mA 5,1.2mA 10,2.0mA 15,3.0mA
EDRVN DRVN 0 TABLE {V(DPWR,DGND)} = 1.5,0mA 3,0.5mA 5,1.5mA 10,4.0mA 15,7.0mA
RDRVP DRVP 0 1K
RDRVN DRVN 0 1K
GPWR DPWR DRVPWR VALUE = {V(DPWR,DRVPWR)*V(DRVP)}
GGND DRVGND DGND VALUE = {V(DRVGND,DGND)*V(DRVN)}
RDUM1 DPWR DRVPWR 100MEG
RDUM2 DGND DRVGND 100MEG
.ends
*$
*-------------------------------------------------
* X4000E Digital Input/Output Models

.model DINX4000E dinput (
+	s0name="0"	s0tsw=15ns	s0rlo=1 	s0rhi=80K
+	s1name="1"	s1tsw=15ns	s1rlo=40K	s1rhi=1
+	s2name="X"	s2tsw=15ns	s2rlo=800	s2rhi=800
+	s3name="R"	s3tsw=15ns	s3rlo=800	s3rhi=800
+	s4name="F"	s4tsw=15ns	s4rlo=800	s4rhi=800
+	s5name="Z"	s5tsw=15ns	s5rlo=1MEG	s5rhi=1MEG
+	)
*$
.model DOX4000E doutput (
+	s0name="X"	s0vlo=-0.5	s0vhi=0.5
+	s1name="0"	s1vlo=-3.0	s1vhi=-0.5
+	s2name="R"	s2vlo=-0.5	s2vhi=0.05
+	s3name="R"	s3vlo=-0.05	s3vhi=0.5
+	s4name="X"	s4vlo=-0.5	s4vhi=0.5
+	s5name="1"	s5vlo= 0.5	s5vhi=3.0
+	s6name="F"	s6vlo=-0.05	s6vhi=0.5
+	s7name="F"	s7vlo=-0.5	s7vhi=0.05
+	)
*$

.SUBCKT X4E_BUF IN PI OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: IN_D=0 OUT_D=0

U1 LOGICEXP(3,1) DPWR DGND 
+ IN PI PO OUT
+ X4E_BUF
+ IO_X4000E
+ LOGIC:
+   OUT = {PO ^ (IN^PI) }

.MODEL X4E_BUF UGATE (
+  TPLHMN={IN_D+OUT_D} TPHLMN={IN_D+OUT_D}
+  TPLHMX={IN_D+OUT_D} TPHLMX={IN_D+OUT_D}
+  )

.ENDS X4E_BUF


.SUBCKT X4E_BUFG IN PI OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: IN_D=0 OUT_D=0

U1 LOGICEXP(3,1) DPWR DGND 
+ IN PI PO OUT
+ X4E_BUF
+ IO_X4000E
+ LOGIC:
+   OUT = {PO ^ (IN^PI) }

.MODEL X4E_BUF UGATE (
+  TPLHMN={IN_D+OUT_D} TPHLMN={IN_D+OUT_D}
+  TPLHMX={IN_D+OUT_D} TPHLMX={IN_D+OUT_D}
+  )

.ENDS X4E_BUFG

*$

.SUBCKT X4E_BUFGS IN PI OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: IN_D=0 OUT_D=0

U1 LOGICEXP(3,1) DPWR DGND 
+ IN PI PO OUT
+ X4E_BUF
+ IO_X4000E
+ LOGIC:
+   OUT = {PO ^ (IN^PI) }

.MODEL X4E_BUF UGATE (
+  TPLHMN={IN_D+OUT_D} TPHLMN={IN_D+OUT_D}
+  TPLHMX={IN_D+OUT_D} TPHLMX={IN_D+OUT_D}
+  )

.ENDS X4E_BUFGS

*$

.SUBCKT X4E_BUFGP IN PI OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: IN_D=0 OUT_D=0

U1 LOGICEXP(3,1) DPWR DGND 
+ IN PI PO OUT
+ X4E_BUF
+ IO_X4000E
+ LOGIC:
+   OUT = {PO ^ (IN^PI) }

.MODEL X4E_BUF UGATE (
+  TPLHMN={IN_D+OUT_D} TPHLMN={IN_D+OUT_D}
+  TPLHMX={IN_D+OUT_D} TPHLMX={IN_D+OUT_D}
+  )

.ENDS X4E_BUFGP

*$

.SUBCKT X4E_IBUF IN PI OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: IN_D=0 OUT_D=0
*
* PI and PO are not used
*
U1 BUF DPWR DGND 
+ IN OUT
+ X4E_IBUF
+ IO_X4000E

.MODEL X4E_IBUF UGATE (
+  TPLHMN={IN_D+OUT_D} TPHLMN={IN_D+OUT_D}
+  TPLHMX={IN_D+OUT_D} TPHLMX={IN_D+OUT_D}
+  )

.ENDS X4E_IBUF


.SUBCKT X4E_INV IN PI OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: IN_D=0 OUT_D=0

U1 LOGICEXP(3,1) DPWR DGND 
+ IN PI PO OUT
+ X4E_INV
+ IO_X4000E
+ LOGIC:
+   OUT = {PO ^ ~(IN^PI) }

.MODEL X4E_INV UGATE (
+  TPLHMN={IN_D+OUT_D} TPHLMN={IN_D+OUT_D}
+  TPLHMX={IN_D+OUT_D} TPHLMX={IN_D+OUT_D}
+  )

.ENDS X4E_INV


*$

.SUBCKT X4E_AND2  I0 P0 I1 P1 OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: I0_D=0 I1_D=0 OUT_D=0

U1 LOGICEXP(5,1) DPWR DGND 
+ I0 P0 I1 P1 PO OUT_INT
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) & (I1^P1) ) }

U2 PINDLY(1,0,2) DPWR DGND
+ OUT_INT
+ I0 I1
+ OUT
+ IO_X4000E
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X4E_AND2


.SUBCKT X4E_AND3  I0 P0 I1 P1 I2 P2 OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 OUT_D=0

U1 LOGICEXP(7,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 PO OUT_INT
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) & (I1^P1) & (I2^P2) ) }

U2 PINDLY(1,0,3) DPWR DGND
+ OUT_INT
+ I0 I1 I2
+ OUT
+ IO_X4000E
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X4E_AND3


.SUBCKT X4E_AND4  I0 P0 I1 P1 I2 P2 I3 P3 OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 OUT_D=0

U1 LOGICEXP(9,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 PO OUT_INT
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) & (I1^P1) & (I2^P2) & (I3^P3) ) }

U2 PINDLY(1,0,4) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3
+ OUT
+ IO_X4000E
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X4E_AND4


.SUBCKT X4E_AND5  I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 I4_D=0 OUT_D=0

U1 LOGICEXP(11,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 PO OUT_INT
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) & (I1^P1) & (I2^P2) & (I3^P3) & (I4^P4) ) }

U2 PINDLY(1,0,5) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3 I4
+ OUT
+ IO_X4000E
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 CHANGED(I4,0), DELAY(I4_D+OUT_D,-1,I4_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X4E_AND5

*$

.SUBCKT X4E_CY4 C7 C6 C5 C4 C3 C2 C1 C0 B1 A1 B0 A0 ADD CIN COUT COUT0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS:  A1_D=0 A0_D=0 B1_D=0 B0_D=0 ADD_D=0 CIN_D=0 COUT_D=0


UA1DLY BUF DPWR DGND A1 A1_DLY D_A1 IO_X4000E
.MODEL D_A1 UGATE (TPLHMN={A1_D} TPLHMX={A1_D} TPHLMN={A1_D} TPHLMX={A1_D}

UA0DLY BUF DPWR DGND A0 A0_DLY D_A0 IO_X4000E
.MODEL D_A0 UGATE (TPLHMN={A0_D} TPLHMX={A0_D} TPHLMN={A0_D} TPHLMX={A0_D}

UB1DLY BUF DPWR DGND B1 B1_DLY D_B1 IO_X4000E
.MODEL D_B1 UGATE (TPLHMN={B1_D} TPLHMX={B1_D} TPHLMN={B1_D} TPHLMX={B1_D}

UB0DLY BUF DPWR DGND B0 B0_DLY D_B0 IO_X4000E
.MODEL D_B0 UGATE (TPLHMN={B0_D} TPLHMX={B0_D} TPHLMN={B0_D} TPHLMX={B0_D}

UADDDLY BUF DPWR DGND ADD ADD_DLY D_ADD IO_X4000E
.MODEL D_ADD UGATE (TPLHMN={ADD_D} TPLHMX={ADD_D} TPHLMN={ADD_D} TPHLMX={ADD_D}

UCINDLY BUF DPWR DGND CIN CIN_DLY D_CIN IO_X4000E
.MODEL D_CIN UGATE (TPLHMN={CIN_D} TPLHMX={CIN_D} TPHLMN={CIN_D} TPHLMX={CIN_D}

U1 LOGICEXP(14,5) DPWR DGND
+ B1_DLY A1_DLY B0_DLY A0_DLY ADD_DLY CIN_DLY C7 C6 C5 C4 C3 C2 C1 C0 
+ E0 E1 E2 E3 CONEW
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   N0 = {(C1 & ~C0)|(C0 & ADD_DLY)}
+   E0 = {~(~C6 | (C6 &  (A1_DLY ^ (N0 ^ (~B1_DLY | ~C7)))))}
+   E1 = {~E0}
+   E2 = {~((C2 & ~C3)| (C3 & (A0_DLY ^ (N0 ^ (~B0_DLY | ~C7)))))}
+   E3 = {~E2}
+   CONEW = {(A0_DLY & C4 & C5) | (~ADD_DLY & ~C4 & C5) | (C7 & ~C4 & ~C5)}

U2 BUF3 DPWR DGND A1_DLY E0 COUT_I 
+ D0_TGATE
+ IO_X4000E

U3 BUF3 DPWR DGND COUT0_I E1 COUT_I 
+ D0_TGATE
+ IO_X4000E

U4 BUF3 DPWR DGND CONEW E2 COUT0_I
+ D0_TGATE
+ IO_X4000E

U5 BUF3 DPWR DGND CIN_DLY E3 COUT0_I
+ D0_TGATE
+ IO_X4000E

UCOUTDLY BUF DPWR DGND COUT_I COUT
+ D_COUT IO_X4000E
.MODEL D_COUT UGATE (TPLHMN={COUT_D} TPLHMX={COUT_D} TPHLMN={COUT_D} TPHLMX={COUT_D}

UCOUT0 BUF DPWR DGND COUT0_I COUT0
+ D0_GATE IO_X4000E

.ENDS X4E_CY4

*$

.SUBCKT X4E_CY4_01 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_LO $D_HI $D_HI $D_HI $D_LO $D_HI $D_LO ; 10111010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_01

*$

.SUBCKT X4E_CY4_02 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_HI $D_HI $D_LO $D_HI $D_LO ; 11111010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_02

*$

.SUBCKT X4E_CY4_03 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_HI $D_LO $D_LO $D_HI $D_LO ; 11110010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_03

*$

.SUBCKT X4E_CY4_04 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI $D_HI $D_LO ; 11000110
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_04

*$

.SUBCKT X4E_CY4_05 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI $D_LO ; 11100010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_05

*$

.SUBCKT X4E_CY4_06 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO ; 10111000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_06

*$

.SUBCKT X4E_CY4_07 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO ; 11111000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_07

*$

.SUBCKT X4E_CY4_08 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_LO $D_LO $D_LO $D_LO $D_LO $D_LO ; 11000000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_08

*$

.SUBCKT X4E_CY4_09 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI $D_LO $D_LO ; 11000100
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_09

*$

.SUBCKT X4E_CY4_10 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_LO ; 11110000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_10

*$

.SUBCKT X4E_CY4_11 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_LO $D_LO ; 11100000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_11

*$

.SUBCKT X4E_CY4_12 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_HI ; 10111001
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_12

*$

.SUBCKT X4E_CY4_13 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_HI $D_HI $D_LO $D_LO $D_HI ; 11111001
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_13

*$

.SUBCKT X4E_CY4_14 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI ; 11110001
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_14

*$

.SUBCKT X4E_CY4_15 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI $D_LO $D_HI ; 11000101
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_15

*$

.SUBCKT X4E_CY4_16 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_LO $D_HI ; 11100001
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_16

*$

.SUBCKT X4E_CY4_17 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_LO $D_HI $D_HI $D_HI $D_LO $D_HI $D_LO ; 00111010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_17

*$

.SUBCKT X4E_CY4_18 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS

U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_HI $D_LO $D_HI $D_LO ; 01111010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_18

.SUBCKT X4E_CY4_19 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS

U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_HI $D_LO ; 01110010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_19

*$

.SUBCKT X4E_CY4_20 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_LO $D_LO $D_LO $D_LO $D_LO $D_LO ; 01000000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_20

*$

.SUBCKT X4E_CY4_21 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_HI $D_LO ; 01110010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_21

*$

.SUBCKT X4E_CY4_22 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_LO $D_LO $D_LO $D_HI $D_HI $D_LO ; 01000110
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_22

*$

.SUBCKT X4E_CY4_23 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI $D_LO ; 01100010
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_23

*$

.SUBCKT X4E_CY4_24 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO ; 00111000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_24

*$

.SUBCKT X4E_CY4_25 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO ; 01111000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_25

*$

.SUBCKT X4E_CY4_26 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_LO ; 01110000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_26

*$

.SUBCKT X4E_CY4_27 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_LO $D_LO $D_LO $D_LO $D_LO $D_LO ; 01000000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_27

*$

.SUBCKT X4E_CY4_28 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_LO ; 01110000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_28

*$

.SUBCKT X4E_CY4_29 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_LO $D_LO $D_LO $D_HI $D_LO $D_LO ; 01000100
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_29

*$

.SUBCKT X4E_CY4_30 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_LO $D_LO $D_LO $D_LO $D_LO ; 01100000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_30

*$

.SUBCKT X4E_CY4_31 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_HI ; 00111001
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_31

*$

.SUBCKT X4E_CY4_32 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_HI $D_LO $D_LO $D_HI ; 01111001
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_32

*$

.SUBCKT X4E_CY4_33 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI ; 01110001
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_33

*$

.SUBCKT X4E_CY4_34 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_LO $D_LO $D_LO $D_LO $D_LO $D_LO ; 01000000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_34

*$

.SUBCKT X4E_CY4_35 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_HI $D_HI $D_LO $D_LO $D_LO $D_HI ; 01110001
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_35

*$

.SUBCKT X4E_CY4_36 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_HI $D_LO $D_LO $D_LO $D_HI $D_LO $D_HI ; 01000101
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_36

*$

.SUBCKT X4E_CY4_37 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+$D_LO $D_LO $D_LO $D_LO $D_LO $D_LO $D_LO $D_LO ; 00000000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_37

*$

.SUBCKT X4E_CY4_38 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_HI $D_LO $D_LO $D_LO $D_LO $D_LO $D_LO $D_LO ; 10000000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_38

*$

.SUBCKT X4E_CY4_39 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_LO $D_HI $D_HI $D_LO $D_LO $D_LO $D_LO ; 00110000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_39

*$

.SUBCKT X4E_CY4_40 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_LO $D_LO $D_LO $D_LO $D_HI $D_LO $D_LO ; 00000100
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_40

*$

.SUBCKT X4E_CY4_41 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_LO $D_HI $D_LO $D_LO $D_LO $D_LO $D_LO ; 00100000
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_41

*$

.SUBCKT X4E_CY4_42 C7 C6 C5 C4 C3 C2 C1 C0
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
U1 BUFA(8) DPWR DGND 
+ $D_LO $D_LO $D_LO $D_LO $D_LO $D_HI $D_LO $D_LO ; 00000100
+ C7 C6 C5 C4 C3 C2 C1 C0
+ D0_GATE
+ IO_X4000E
.ENDS X4E_CY4_42

*$

.SUBCKT X4E_FDCE CLR CLK PCLK CLKENA D Q GSR
+ OPTIONAL:  DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS 
+ PARAMS: CLR_D=0 GSR_D=0 CLK_D=0 CLKENA_D=0 D_D=0 Q_D=0
+   D_CLK_SETUP=0       D_CLK_HOLD=0
+   CLR_CLK_SETUP=0     CLR_CLK_HOLD=0
+   CLKENA_CLK_SETUP=0  CLKENA_CLK_HOLD=0
+   CLK_WIDTH=0 CLR_WIDTH=0 GSR_WIDTH=0

UD BUF DPWR DGND
+ D D_BUF
+ X4E_FDCE_D 
+ IO_X4000E
.MODEL X4E_FDCE_D UGATE (
+   TPLHMN={D_D} TPLHMX={D_D}
+   TPHLMN={D_D} TPHLMX={D_D}
+   )

UCLK XOR DPWR DGND
+ CLK PCLK CLK_BUF
+ X4E_FDCE_CLK 
+ IO_X4000E
.MODEL X4E_FDCE_CLK UGATE (
+   TPLHMN={CLK_D} TPLHMX={CLK_D}
+   TPHLMN={CLK_D} TPHLMX={CLK_D}
+   )

UCLKENA BUF DPWR DGND
+ CLKENA CLKENA_BUF
+ X4E_FDCE_CLKENA 
+ IO_X4000E
.MODEL X4E_FDCE_CLKENA UGATE (
+   TPLHMN={CLKENA_D} TPLHMX={CLKENA_D}
+   TPHLMN={CLKENA_D} TPHLMX={CLKENA_D}
+   )

UCLR BUF DPWR DGND
+ CLR CLR_BUF
+ X4E_FDCE_CLR 
+ IO_X4000E
.MODEL X4E_FDCE_CLR UGATE (
+   TPLHMN={CLR_D} TPLHMX={CLR_D}
+   TPHLMN={CLR_D} TPHLMX={CLR_D}
+   )

UGSR BUF DPWR DGND
+ GSR GSR_BUF
+ X4E_FDCE_GSR 
+ IO_X4000E

.MODEL X4E_FDCE_GSR UGATE (
+   TPLHMN={GSR_D} TPLHMX={GSR_D}
+   TPHLMN={GSR_D} TPHLMX={GSR_D}
+   )

UCLRIN NOR(2) DPWR DGND ; INVERT BECAUSE DFF IS LOW TRUE
+ CLR_BUF GSR_BUF CLR_IN
+ D0_GATE
+ IO_X4000E

UDFF DFFDE(1) DPWR DGND
+ $D_HI CLR_IN CLK_BUF CLKENA_BUF $D_LO D_BUF Q_INT $D_NC
+ D0_EFF
+ IO_X4000E

UDELAY PINDLY(1,0,7) DPWR DGND
+ Q_INT
+ CLK CLK_BUF D_BUF CLKENA_BUF CLR GSR GSR_BUF
+ Q
+ IO_X4000E
+ PINDLY:
+   Q = {DELAY(Q_D,-1,Q_D)}
+ SETUP_HOLD:
+   CLOCK LH = CLK_BUF
+   DATA(1) = D_BUF
+   SETUPTIME = {D_CLK_SETUP}
+   HOLDTIME =  {D_CLK_HOLD}
+   WHEN = {GSR_BUF == '0 & CLR == '0 & CLKENA_BUF == '1}
+ SETUP_HOLD:
+   CLOCK LH = CLK_BUF
+   DATA(1) = CLKENA_BUF
+   SETUPTIME = {CLKENA_CLK_SETUP}
+   HOLDTIME = {CLKENA_CLK_HOLD}
+   WHEN = {GSR_BUF == '0 & CLR == '0 & D_BUF == Q_INT}
+ SETUP_HOLD:
+   CLOCK LH = CLK_BUF
+   DATA(1) = CLR
+   SETUPTIME = {CLR_CLK_SETUP}
+   HOLDTIME = {CLR_CLK_HOLD}
+   WHEN = {CLR != '1 & GSR_BUF == '0 & CLKENA_BUF == '1}
+ WIDTH:
+   NODE = CLK
+   MIN_HI = {CLK_WIDTH}
+   MIN_LO = {CLK_WIDTH}
+ WIDTH:
+   NODE = CLR
+   MIN_HI = {CLR_WIDTH}
+ WIDTH:
+   NODE = GSR
+   MIN_HI = {GSR_WIDTH}

.MODEL X4E_FDCE_Q UEFF (
+  TPCLKQLHMN={Q_D} TPCLKQLHMX={Q_D}
+  TPCLKQHLMN={Q_D} TPCLKQHLMX={Q_D}
+  )

.ENDS X4E_FDCE

*$

.SUBCKT X4E_FDPE PRE CLK PCLK CLKENA D Q GSR
+ OPTIONAL:  DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: PRE_D=0 GSR_D=0 CLK_D=0 CLKENA_D=0 D_D=0 Q_D=0
+   D_CLK_SETUP=0       D_CLK_HOLD=0
+   PRE_CLK_SETUP=0     PRE_CLK_HOLD=0
+   CLKENA_CLK_SETUP=0  CLKENA_CLK_HOLD=0
+   CLK_WIDTH=0 PRE_WIDTH=0 GSR_WIDTH=0

UD BUF DPWR DGND
+ D D_BUF
+ X4E_FDPE_D 
+ IO_X4000E
.MODEL X4E_FDPE_D UGATE (
+   TPLHMN={D_D} TPLHMX={D_D}
+   TPHLMN={D_D} TPHLMX={D_D}
+   )

UCLK XOR DPWR DGND
+ CLK PCLK CLK_BUF
+ X4E_FDPE_CLK 
+ IO_X4000E
.MODEL X4E_FDPE_CLK UGATE (
+   TPLHMN={CLK_D} TPLHMX={CLK_D}
+   TPHLMN={CLK_D} TPHLMX={CLK_D}
+   )

UCLKENA BUF DPWR DGND
+ CLKENA CLKENA_BUF
+ X4E_FDPE_CLKENA 
+ IO_X4000E
.MODEL X4E_FDPE_CLKENA UGATE (
+   TPLHMN={CLKENA_D} TPLHMX={CLKENA_D}
+   TPHLMN={CLKENA_D} TPHLMX={CLKENA_D}
+   )

UPRE BUF DPWR DGND
+ PRE PRE_BUF
+ X4E_FDPE_PRE 
+ IO_X4000E
.MODEL X4E_FDPE_PRE UGATE (
+   TPLHMN={PRE_D} TPLHMX={PRE_D}
+   TPHLMN={PRE_D} TPHLMX={PRE_D}
+   )

UGSR BUF DPWR DGND
+ GSR GSR_BUF
+ X4E_FDPE_GSR 
+ IO_X4000E
.MODEL X4E_FDPE_GSR UGATE (
+   TPLHMN={GSR_D} TPLHMX={GSR_D}
+   TPHLMN={GSR_D} TPHLMX={GSR_D}
+   )

UPREIN NOR(2) DPWR DGND ; INVERT BECAUSE DFF IS LOW TRUE
+ PRE_BUF GSR_BUF PRE_IN
+ D0_GATE
+ IO_X4000E

UDFF DFFDE(1) DPWR DGND
+ PRE_IN $D_HI CLK_BUF CLKENA_BUF $D_LO D_BUF Q_INT $D_NC
+ D0_EFF
+ IO_X4000E

UDELAY PINDLY(1,0,7) DPWR DGND
+ Q_INT
+ CLK CLK_BUF D_BUF CLKENA_BUF PRE GSR GSR_BUF
+ Q
+ IO_X4000E
+ PINDLY:
+   Q = {DELAY(Q_D,-1,Q_D)}
+ SETUP_HOLD:
+   CLOCK LH = CLK_BUF
+   DATA(1) = D_BUF
+   SETUPTIME = {D_CLK_SETUP}
+   HOLDTIME =  {D_CLK_HOLD}
+   WHEN = {GSR_BUF == '0 & PRE == '0 & CLKENA_BUF == '1}
+ SETUP_HOLD:
+   CLOCK LH = CLK_BUF
+   DATA(1) = CLKENA_BUF
+   SETUPTIME = {CLKENA_CLK_SETUP}
+   HOLDTIME = {CLKENA_CLK_HOLD}
+   WHEN = {GSR_BUF == '0 & PRE == '0 & D_BUF == Q_INT}
+ SETUP_HOLD:
+   CLOCK LH = CLK_BUF
+   DATA(1) = PRE
+   SETUPTIME = {PRE_CLK_SETUP}
+   HOLDTIME = {PRE_CLK_HOLD}
+   WHEN = {PRE != '1 & GSR_BUF == '0 & CLKENA_BUF == '1}
+ WIDTH:
+   NODE = CLK
+   MIN_HI = {CLK_WIDTH}
+   MIN_LO = {CLK_WIDTH}
+ WIDTH:
+   NODE = PRE
+   MIN_HI = {PRE_WIDTH}
+ WIDTH:
+   NODE = GSR
+   MIN_HI = {GSR_WIDTH}

.MODEL X4E_FDPE_Q UEFF (
+  TPCLKQLHMN={Q_D} TPCLKQLHMX={Q_D}
+  TPCLKQHLMN={Q_D} TPCLKQHLMX={Q_D}
+  )

.ENDS X4E_FDPE

*$

.SUBCKT X4E_NAND2  I0 P0 I1 P1 OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: I0_D=0 I1_D=0 OUT_D=0

U1 LOGICEXP(5,1) DPWR DGND 
+ I0 P0 I1 P1 PO OUT_INT
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) & (I1^P1) ) }

U2 PINDLY(1,0,2) DPWR DGND
+ OUT_INT
+ I0 I1
+ OUT
+ IO_X4000E
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X4E_NAND2


.SUBCKT X4E_NAND3  I0 P0 I1 P1 I2 P2 OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 OUT_D=0

U1 LOGICEXP(7,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 PO OUT_INT
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) & (I1^P1) & (I2^P2) ) }

U2 PINDLY(1,0,3) DPWR DGND
+ OUT_INT
+ I0 I1 I2
+ OUT
+ IO_X4000E
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X4E_NAND3


.SUBCKT X4E_NAND4  I0 P0 I1 P1 I2 P2 I3 P3 OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 OUT_D=0

U1 LOGICEXP(9,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 PO OUT_INT
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) & (I1^P1) & (I2^P2) & (I3^P3) ) }

U2 PINDLY(1,0,4) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3
+ OUT
+ IO_X4000E
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X4E_NAND4


.SUBCKT X4E_NAND5  I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 I4_D=0 OUT_D=0

U1 LOGICEXP(11,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 PO OUT_INT
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) & (I1^P1) & (I2^P2) & (I3^P3) & (I4^P4) ) }

U2 PINDLY(1,0,5) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3 I4
+ OUT
+ IO_X4000E
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 CHANGED(I4,0), DELAY(I4_D+OUT_D,-1,I4_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X4E_NAND5

*$


.SUBCKT X4E_NOR2  I0 P0 I1 P1 OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: I0_D=0 I1_D=0 OUT_D=0

U1 LOGICEXP(5,1) DPWR DGND 
+ I0 P0 I1 P1 PO OUT_INT
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) | (I1^P1) ) }

U2 PINDLY(1,0,2) DPWR DGND
+ OUT_INT
+ I0 I1
+ OUT
+ IO_X4000E
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X4E_NOR2


.SUBCKT X4E_NOR3  I0 P0 I1 P1 I2 P2 OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 OUT_D=0

U1 LOGICEXP(7,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 PO OUT_INT
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) | (I1^P1) | (I2^P2) ) }

U2 PINDLY(1,0,3) DPWR DGND
+ OUT_INT
+ I0 I1 I2
+ OUT
+ IO_X4000E
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X4E_NOR3


.SUBCKT X4E_NOR4  I0 P0 I1 P1 I2 P2 I3 P3 OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 OUT_D=0

U1 LOGICEXP(9,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 PO OUT_INT
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) | (I1^P1) | (I2^P2) | (I3^P3) ) }

U2 PINDLY(1,0,4) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3
+ OUT
+ IO_X4000E
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X4E_NOR4


.SUBCKT X4E_NOR5  I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 I4_D=0 OUT_D=0

U1 LOGICEXP(11,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 PO OUT_INT
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) | (I1^P1) | (I2^P2) | (I3^P3) | (I4^P4) ) }

U2 PINDLY(1,0,5) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3 I4
+ OUT
+ IO_X4000E
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 CHANGED(I4,0), DELAY(I4_D+OUT_D,-1,I4_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X4E_NOR5

*$

.SUBCKT X4E_OBUF IN PIN GTS PGTS OUT
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: IN_D=0 OUT_D=0 GTS_D=0
+ GTS_LH_D=0 GTS_HL_D=0		; GTS delay from STARTUP
*
*
UIN XOR DPWR DGND 
+ IN PIN  IN_BUF
+ X4E_IN
+ IO_X4000E

UGTS NXOR DPWR DGND
+ GTS PGTS GTS_BUF
+ X4E_OBUF_GTS
+ IO_X4000E

.MODEL X4E_OBUF_GTS UGATE (
+   TPLHMN={GTS_LH_D + GTS_D} TPLHMX={GTS_LH_D + GTS_D}
+   TPHLMN={GTS_HL_D + GTS_D} TPHLMX={GTS_HL_D + GTS_D}
+   )

UOUT BUF3 DPWR DGND
+ IN_BUF GTS_BUF  OUT
+ D0_TGATE
+ IO_X4000E

.MODEL X4E_IN UGATE (
+  TPLHMN={IN_D+OUT_D} TPHLMN={IN_D+OUT_D}
+  TPLHMX={IN_D+OUT_D} TPHLMX={IN_D+OUT_D}
+  )

.ENDS X4E_OBUF

*$

.SUBCKT X4E_OBUFT IN PI T PT GTS PGTS OUT
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: IN_D=0 TLH_D=0 THL_D=0 OUT_D=0 PULLUP_D=0 GTS_D=0
+ GTS_LH_D=0 GTS_HL_D=0		; GTS delay from STARTUP
*
UTDLY BUF DPWR DGND T TDLY X4E_OBUFT_T IO_X4000E

.MODEL X4E_OBUFT_T UGATE(
+  TPLHMN={TLH_D} TPHLMN={THL_D}
+  TPLHMX={TLH_D} TPHLMX={THL_D}
+  )

UGTS XOR DPWR DGND
+ GTS PGTS  GTS_BUF
+ X4E_OBUFT_GTS
+ IO_X4000E

.MODEL X4E_OBUFT_GTS UGATE (
+   TPLHMN={GTS_LH_D + GTS_D} TPLHMX={GTS_LH_D + GTS_D}
+   TPHLMN={GTS_HL_D + GTS_D} TPHLMX={GTS_HL_D + GTS_D}
+   )

UENA LOGICEXP(3,1) DPWR DGND 
+ TDLY PT GTS_BUF  ENA
+ D0_GATE IO_X4000E
+ LOGIC:
+   ENA = { ~((TDLY ^ PT) | GTS_BUF) }  ; XILINX 3-states are active-low enable

UIDLY BUF DPWR DGND IN INBUF X4E_OBUFT_IN IO_X4000E
.MODEL X4E_OBUFT_IN UGATE(
+  TPLHMN={IN_D+OUT_D} TPHLMN={IN_D+OUT_D} 
+  TPLHMX={IN_D+OUT_D} TPHLMX={IN_D+OUT_D} 
+  )

UIN XOR DPWR DGND INBUF PI INNEW D0_GATE IO_X4000E

UOUT BUF3 DPWR DGND 
+ INNEW ENA OUT
+ D0_TGATE
+ IO_X4000E

.ENDS X4E_OBUFT


.SUBCKT X4E_OR2  I0 P0 I1 P1 OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: I0_D=0 I1_D=0 OUT_D=0

U1 LOGICEXP(5,1) DPWR DGND 
+ I0 P0 I1 P1 PO OUT_INT
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) | (I1^P1) ) }

U2 PINDLY(1,0,2) DPWR DGND
+ OUT_INT
+ I0 I1
+ OUT
+ IO_X4000E
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X4E_OR2


.SUBCKT X4E_OR3  I0 P0 I1 P1 I2 P2 OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 OUT_D=0

U1 LOGICEXP(7,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 PO OUT_INT
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) | (I1^P1) | (I2^P2) ) }

U2 PINDLY(1,0,3) DPWR DGND
+ OUT_INT
+ I0 I1 I2
+ OUT
+ IO_X4000E
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X4E_OR3


.SUBCKT X4E_OR4  I0 P0 I1 P1 I2 P2 I3 P3 OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 OUT_D=0

U1 LOGICEXP(9,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 PO OUT_INT
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) | (I1^P1) | (I2^P2) | (I3^P3) ) }

U2 PINDLY(1,0,4) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3
+ OUT
+ IO_X4000E
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X4E_OR4


.SUBCKT X4E_OR5  I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 I4_D=0 OUT_D=0

U1 LOGICEXP(11,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 PO OUT_INT
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) | (I1^P1) | (I2^P2) | (I3^P3) | (I4^P4) ) }

U2 PINDLY(1,0,5) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3 I4
+ OUT
+ IO_X4000E
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 CHANGED(I4,0), DELAY(I4_D+OUT_D,-1,I4_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X4E_OR5

*$

.SUBCKT X4E_TBUF  IN T OUT TDLY
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: IN_D=0 TLH_D=0 THL_D=0 OUT_D=0
*
* XILINX 3-states enables are active low
* The TDLY signal is available as an output to allow for
* proper timing of externally-connected PULLUP devices.

UTDLY BUF DPWR DGND T TDLY X4E_TBUF_TDLY IO_X4000E
UTDLYBAR INV DPWR DGND T TDLYBAR X4E_TBUF_T IO_X4000E

.MODEL X4E_TBUF_TDLY UGATE(
+  TPLHMN={TLH_D} TPHLMN={THL_D}
+  TPLHMX={TLH_D} TPHLMX={THL_D}
+  )

.MODEL X4E_TBUF_T UGATE(
+  TPLHMN={THL_D} TPHLMN={TLH_D}	; lh/hl swapped intentionally
+  TPLHMX={THL_D} TPHLMX={TLH_D}
+  )

UIDLY BUF DPWR DGND IN INDLY X4E_TBUF_IN IO_X4000E
.MODEL X4E_TBUF_IN UGATE(
+  TPLHMN={IN_D+OUT_D} TPHLMN={IN_D+OUT_D} 
+  TPLHMX={IN_D+OUT_D} TPHLMX={IN_D+OUT_D} 
+  )

UOUT BUF3 DPWR DGND 
+ INDLY TDLYBAR OUT
+ D0_TGATE
+ IO_X4000E

.ENDS X4E_TBUF

*$

.SUBCKT X4E_XNOR2  I0 P0 I1 P1 OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: I0_D=0 I1_D=0 OUT_D=0

U1 LOGICEXP(5,1) DPWR DGND 
+ I0 P0 I1 P1 PO OUT_INT
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   OUT_INT = {PO ^ ~( (I0^P0) ^ (I1^P1) ) }

U2 PINDLY(1,0,2) DPWR DGND
+ OUT_INT
+ I0 I1
+ OUT
+ IO_X4000E
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X4E_XNOR2

*$

.SUBCKT X4E_XNOR3  I0 P0 I1 P1 I2 P2  OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 OUT_D=0

U1 LOGICEXP(7,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 PO OUT_INT
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   OUT_INT = {PO ^ ~ ( (I0^P0) ^ (I1^P1) ^ (I2^P2)) }

U2 PINDLY(1,0,3) DPWR DGND
+ OUT_INT
+ I0 I1 I2
+ OUT
+ IO_X4000E
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+                CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X4E_XNOR3

*$

.SUBCKT X4E_XNOR4  I0 P0 I1 P1 I2 P2 I3 P3 OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 OUT_D=0

U1 LOGICEXP(9,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 PO OUT_INT
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   OUT_INT = {PO ^ ~ ( (I0^P0) ^ (I1^P1) ^ (I2^P2) ^ (I3^P3) ) }

U2 PINDLY(1,0,4) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3
+ OUT
+ IO_X4000E
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X4E_XNOR4

*$

.SUBCKT X4E_XNOR5  I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 I4_D=0 OUT_D=0

U1 LOGICEXP(11,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 PO OUT_INT
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   OUT_INT = {PO ^ ~ ( (I0^P0) ^ (I1^P1) ^ (I2^P2) ^ (I3^P3) ^ (I4^P4) ) }

U2 PINDLY(1,0,5) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3 I4
+ OUT
+ IO_X4000E
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 CHANGED(I4,0), DELAY(I4_D+OUT_D,-1,I4_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X4E_XNOR5

*$

.SUBCKT X4E_XOR2  I0 P0 I1 P1 OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: I0_D=0 I1_D=0 OUT_D=0

U1 LOGICEXP(5,1) DPWR DGND 
+ I0 P0 I1 P1 PO OUT_INT
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) ^ (I1^P1) ) }

U2 PINDLY(1,0,2) DPWR DGND
+ OUT_INT
+ I0 I1
+ OUT
+ IO_X4000E
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X4E_XOR2

*$

.SUBCKT X4E_XOR3  I0 P0 I1 P1 I2 P2  OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 OUT_D=0

U1 LOGICEXP(7,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 PO OUT_INT
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) ^ (I1^P1) ^ (I2^P2)) }

U2 PINDLY(1,0,3) DPWR DGND
+ OUT_INT
+ I0 I1 I2
+ OUT
+ IO_X4000E
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+                CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X4E_XOR3

*$

.SUBCKT X4E_XOR4  I0 P0 I1 P1 I2 P2 I3 P3 OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 OUT_D=0

U1 LOGICEXP(9,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 PO OUT_INT
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) ^ (I1^P1) ^ (I2^P2) ^ (I3^P3) ) }

U2 PINDLY(1,0,4) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3
+ OUT
+ IO_X4000E
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X4E_XOR4

*$

.SUBCKT X4E_XOR5  I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 OUT PO
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: I0_D=0 I1_D=0 I2_D=0 I3_D=0 I4_D=0 OUT_D=0

U1 LOGICEXP(11,1) DPWR DGND 
+ I0 P0 I1 P1 I2 P2 I3 P3 I4 P4 PO OUT_INT
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   OUT_INT = {PO ^ ( (I0^P0) ^ (I1^P1) ^ (I2^P2) ^ (I3^P3) ^ (I4^P4) ) }

U2 PINDLY(1,0,5) DPWR DGND
+ OUT_INT
+ I0 I1 I2 I3 I4
+ OUT
+ IO_X4000E
+ PINDLY:
+   OUT = {CASE( CHANGED(I0,0), DELAY(I0_D+OUT_D,-1,I0_D+OUT_D),
+                CHANGED(I1,0), DELAY(I1_D+OUT_D,-1,I1_D+OUT_D),
+		 CHANGED(I2,0), DELAY(I2_D+OUT_D,-1,I2_D+OUT_D),
+		 CHANGED(I3,0), DELAY(I3_D+OUT_D,-1,I3_D+OUT_D),
+		 CHANGED(I4,0), DELAY(I4_D+OUT_D,-1,I4_D+OUT_D),
+		 DELAY(0,0,0) ) }

.ENDS X4E_XOR5

*$

.SUBCKT X4E_OFD GTS PGTS GSR PGSR CE CLK PCLK D PD Q
+ OPTIONAL:  DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: GSR_D=0 CE_D=0 CLK_D=0 GTS_D=0 D_D=0 Q_D=0
+   GTS_LH_D=0 GTS_HL_D=0		; GTS delay from STARTUP
+   D_CLK_SETUP=0       D_CLK_HOLD=0
+   GSR_CLK_SETUP=0     GSR_CLK_HOLD=0
+   CE_WIDTH=0 CLK_WIDTH=0 GSR_WIDTH=0

UD XOR DPWR DGND
+ D PD   D_BUF
+ X4E_OFD_D 
+ IO_X4000E

.MODEL X4E_OFD_D UGATE (
+   TPLHMN={D_D} TPLHMX={D_D}
+   TPHLMN={D_D} TPHLMX={D_D}
+   )

UCLK XOR DPWR DGND
+ CLK PCLK CLK_BUF
+ X4E_OFD_CLK 
+ IO_X4000E

.MODEL X4E_OFD_CLK UGATE (
+   TPLHMN={CLK_D} TPLHMX={CLK_D}
+   TPHLMN={CLK_D} TPHLMX={CLK_D}
+   )

UGTS NXOR DPWR DGND
+ GTS PGTS GTS_BUF
+ X4E_OFD_GTS 
+ IO_X4000E

.MODEL X4E_OFD_GTS UGATE (
+   TPLHMN={GTS_LH_D + GTS_D} TPLHMX={GTS_LH_D + GTS_D}
+   TPHLMN={GTS_HL_D + GTS_D} TPHLMX={GTS_HL_D + GTS_D}
+   )

UCE BUF DPWR DGND
+ CE CE_BUF
+ X4E_OFD_CE
+ IO_X4000E

.MODEL X4E_OFD_CE UGATE (
+   TPLHMN={CE_D} TPLHMX={CE_D}
+   TPHLMN={CE_D} TPHLMX={CE_D}
+   )

UGSR NXOR DPWR DGND
+ GSR PGSR GSR_BUF
+ X4E_OFD_GSR 
+ IO_X4000E

.MODEL X4E_OFD_GSR UGATE (
+   TPLHMN={GSR_D} TPLHMX={GSR_D}
+   TPHLMN={GSR_D} TPHLMX={GSR_D}
+   )

UDFF DFFDE(1) DPWR DGND
+ $D_HI GSR_BUF CLK_BUF CE_BUF $D_LO D_BUF Q_INT1 $D_NC
+ D0_EFF
+ IO_X4000E

UQTS BUF3() DPWR DGND
+ QINT GTS_BUF  Q
+ D0_TGATE
+ IO_X4000E

UDELAY PINDLY(1,0,6) DPWR DGND
+ Q_INT1
+ CLK CLK_BUF D_BUF CE GSR GSR_BUF
+ QINT
+ IO_X4000E
+ PINDLY:
+   QINT = {DELAY(Q_D,-1,Q_D)}
+ SETUP_HOLD:
+   CLOCK LH = CLK_BUF
+   DATA(1) = D_BUF
+   SETUPTIME = {D_CLK_SETUP}
+   HOLDTIME =  {D_CLK_HOLD}
+   WHEN = {GSR_BUF == '0 }
+ WIDTH:
+   NODE = CLK
+   MIN_HI = {CLK_WIDTH}
+   MIN_LO = {CLK_WIDTH}
+ WIDTH:
+   NODE = GSR
+   MIN_HI = {GSR_WIDTH}
+ WIDTH:
+   NODE = CE
+   MIN_HI = {CE_WIDTH}
+   MIN_LO = {CE_WIDTH}

.ENDS X4E_OFD

*$

.SUBCKT X4E_OFDI GTS PGTS GSR PGSR CE CLK PCLK D PD Q
+ OPTIONAL:  DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: GSR_D=0 CE_D=0 CLK_D=0 GTS_D=0 D_D=0 Q_D=0
+   GTS_LH_D=0 GTS_HL_D=0		; GTS delay from STARTUP
+   D_CLK_SETUP=0       D_CLK_HOLD=0
+   GSR_CLK_SETUP=0     GSR_CLK_HOLD=0
+   CE_WIDTH=0 CLK_WIDTH=0 GSR_WIDTH=0

UD NXOR DPWR DGND
+ D PD   D_BUF
+ X4E_OFD_D 
+ IO_X4000E

.MODEL X4E_OFD_D UGATE (
+   TPLHMN={D_D} TPLHMX={D_D}
+   TPHLMN={D_D} TPHLMX={D_D}
+   )

UCLK XOR DPWR DGND
+ CLK PCLK CLK_BUF
+ X4E_OFD_CLK 
+ IO_X4000E

.MODEL X4E_OFD_CLK UGATE (
+   TPLHMN={CLK_D} TPLHMX={CLK_D}
+   TPHLMN={CLK_D} TPHLMX={CLK_D}
+   )

UGTS NXOR DPWR DGND
+ GTS PGTS GTS_BUF
+ X4E_OFD_GTS 
+ IO_X4000E

.MODEL X4E_OFD_GTS UGATE (
+   TPLHMN={GTS_LH_D + GTS_D} TPLHMX={GTS_LH_D + GTS_D}
+   TPHLMN={GTS_HL_D + GTS_D} TPHLMX={GTS_HL_D + GTS_D}
+   )

UCE BUF DPWR DGND
+ CE CE_BUF
+ X4E_OFD_CE
+ IO_X4000E

.MODEL X4E_OFD_CE UGATE (
+   TPLHMN={CE_D} TPLHMX={CE_D}
+   TPHLMN={CE_D} TPHLMX={CE_D}
+   )

UGSR NXOR DPWR DGND
+ GSR PGSR GSR_BUF
+ X4E_OFD_GSR 
+ IO_X4000E

.MODEL X4E_OFD_GSR UGATE (
+   TPLHMN={GSR_D} TPLHMX={GSR_D}
+   TPHLMN={GSR_D} TPHLMX={GSR_D}
+   )

UDFF DFFDE(1) DPWR DGND
+ $D_HI GSR_BUF CLK_BUF CE_BUF $D_LO D_BUF $D_NC Q_INT1
+ D0_EFF
+ IO_X4000E

UQTS BUF3() DPWR DGND
+ QINT GTS_BUF  Q
+ D0_TGATE
+ IO_X4000E

UDELAY PINDLY(1,0,6) DPWR DGND
+ Q_INT1
+ CLK CLK_BUF D_BUF CE GSR GSR_BUF
+ QINT
+ IO_X4000E
+ PINDLY:
+   QINT = {DELAY(Q_D,-1,Q_D)}
+ SETUP_HOLD:
+   CLOCK LH = CLK_BUF
+   DATA(1) = D_BUF
+   SETUPTIME = {D_CLK_SETUP}
+   HOLDTIME =  {D_CLK_HOLD}
+   WHEN = {GSR_BUF == '0 }
+ WIDTH:
+   NODE = CLK
+   MIN_HI = {CLK_WIDTH}
+   MIN_LO = {CLK_WIDTH}
+ WIDTH:
+   NODE = GSR
+   MIN_HI = {GSR_WIDTH}
+ WIDTH:
+   NODE = CE
+   MIN_HI = {CE_WIDTH}
+   MIN_LO = {CE_WIDTH}

.ENDS X4E_OFDI

*$

.SUBCKT X4E_OFDT GTS PGTS GSR PGSR CE CLK PCLK T PT D PD O
+ OPTIONAL:  DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: GSR_D=0 CLK_D=0 GTS_D=0 CE_D=0 T_ENBD=0 T_DISD=0 D_D=0 O_D=0
+   GTS_LH_D=0 GTS_HL_D=0		; GTS delay from STARTUP
+   D_CLK_SETUP=0       D_CLK_HOLD=0
+   GSR_CLK_SETUP=0     GSR_CLK_HOLD=0
+   CE_WIDTH=0 CLK_WIDTH=0 GSR_WIDTH=0

UD XOR DPWR DGND
+ D PD   D_BUF
+ X4E_OFDT_D 
+ IO_X4000E

UT XOR DPWR DGND
+ T PT   T_BUF
+ X4E_OFDT_T 
+ IO_X4000E


.MODEL X4E_OFDT_D UGATE (
+   TPLHMN={D_D} TPLHMX={D_D}
+   TPHLMN={D_D} TPHLMX={D_D}
+   )

.MODEL X4E_OFDT_T UGATE (
+   TPHLMN={T_ENBD} TPHLMX={T_ENBD}
+   TPLHMN={T_DISD} TPLHMX={T_DISD}
+   )

UCLK XOR DPWR DGND
+ CLK PCLK CLK_BUF
+ X4E_OFDT_CLK 
+ IO_X4000E

.MODEL X4E_OFDT_CLK UGATE (
+   TPLHMN={CLK_D} TPLHMX={CLK_D}
+   TPHLMN={CLK_D} TPHLMX={CLK_D}
+   )

UGTSORT NOR(2) DPWR DGND
+ T_BUF GTS_BUF GTS_SIG
+ D0_GATE 
+ IO_X4000E

UGTS XOR DPWR DGND
+ GTS PGTS GTS_BUF
+ X4E_OFDT_GTS 
+ IO_X4000E

.MODEL X4E_OFDT_GTS UGATE (
+   TPLHMN={GTS_LH_D + GTS_D} TPLHMX={GTS_LH_D + GTS_D}
+   TPHLMN={GTS_HL_D + GTS_D} TPHLMX={GTS_HL_D + GTS_D}
+   )

UCE BUF DPWR DGND
+ CE CE_BUF
+ X4E_OFDT_CE
+ IO_X4000E

.MODEL X4E_OFDT_CE UGATE (
+   TPLHMN={CE_D} TPLHMX={CE_D}
+   TPHLMN={CE_D} TPHLMX={CE_D}
+   )

UGSR NXOR DPWR DGND
+ GSR PGSR GSR_BUF
+ X4E_OFDT_GSR 
+ IO_X4000E

.MODEL X4E_OFDT_GSR UGATE (
+   TPLHMN={GSR_D} TPLHMX={GSR_D}
+   TPHLMN={GSR_D} TPHLMX={GSR_D}
+   )

UDFF DFFDE(1) DPWR DGND
+ $D_HI GSR_BUF CLK_BUF CE_BUF $D_LO D_BUF O_INT1 $D_NC
+ D0_EFF
+ IO_X4000E

UOTS BUF3() DPWR DGND
+ OINT GTS_SIG  O
+ D0_TGATE
+ IO_X4000E

UDELAY PINDLY(1,0,6) DPWR DGND
+ O_INT1
+ CLK CLK_BUF D_BUF CE GSR GSR_BUF
+ OINT
+ IO_X4000E
+ PINDLY:
+   OINT = {DELAY(O_D,-1,O_D)}
+ SETUP_HOLD:
+   CLOCK LH = CLK_BUF
+   DATA(1) = D_BUF
+   SETUPTIME = {D_CLK_SETUP}
+   HOLDTIME =  {D_CLK_HOLD}
+   WHEN = {GSR_BUF == '0 }
+ WIDTH:
+   NODE = CLK
+   MIN_HI = {CLK_WIDTH}
+   MIN_LO = {CLK_WIDTH}
+ WIDTH:
+   NODE = GSR
+   MIN_HI = {GSR_WIDTH}
+ WIDTH:
+   NODE = CE
+   MIN_HI = {CE_WIDTH}
+   MIN_LO = {CE_WIDTH}

.ENDS X4E_OFDT

*$

.SUBCKT X4E_OFDTI GTS PGTS GSR PGSR CE CLK PCLK T PT D PD O
+ OPTIONAL:  DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: GSR_D=0 CLK_D=0 GTS_D=0 CE_D=0 T_ENBD=0 T_DISD=0 D_D=0 O_D=0
+   GTS_LH_D=0 GTS_HL_D=0		; GTS delay from STARTUP
+   D_CLK_SETUP=0       D_CLK_HOLD=0
+   GSR_CLK_SETUP=0     GSR_CLK_HOLD=0
+   CE_WIDTH=0 CLK_WIDTH=0 GSR_WIDTH=0

UD NXOR DPWR DGND
+ D PD   D_BUF
+ X4E_OFDT_D 
+ IO_X4000E

UT XOR DPWR DGND
+ T PT   T_BUF
+ X4E_OFDT_T 
+ IO_X4000E


.MODEL X4E_OFDT_D UGATE (
+   TPLHMN={D_D} TPLHMX={D_D}
+   TPHLMN={D_D} TPHLMX={D_D}
+   )

.MODEL X4E_OFDT_T UGATE (
+   TPLHMN={T_DISD} TPLHMX={T_DISD}
+   TPHLMN={T_ENBD} TPHLMX={T_ENBD}
+   )

UCLK XOR DPWR DGND
+ CLK PCLK CLK_BUF
+ X4E_OFDT_CLK 
+ IO_X4000E

.MODEL X4E_OFDT_CLK UGATE (
+   TPLHMN={CLK_D} TPLHMX={CLK_D}
+   TPHLMN={CLK_D} TPHLMX={CLK_D}
+   )

UGTSORT NOR(2) DPWR DGND
+ T_BUF GTS_BUF GTS_SIG
+ D0_GATE 
+ IO_X4000E

UGTS XOR DPWR DGND
+ GTS PGTS GTS_BUF
+ X4E_OFDT_GTS 
+ IO_X4000E

.MODEL X4E_OFDT_GTS UGATE (
+   TPLHMN={GTS_LH_D + GTS_D} TPLHMX={GTS_LH_D + GTS_D}
+   TPHLMN={GTS_HL_D + GTS_D} TPHLMX={GTS_HL_D + GTS_D}
+   )

UCE BUF DPWR DGND
+ CE CE_BUF
+ X4E_OFDT_CE
+ IO_X4000E

.MODEL X4E_OFDT_CE UGATE (
+   TPLHMN={CE_D} TPLHMX={CE_D}
+   TPHLMN={CE_D} TPHLMX={CE_D}
+   )

UGSR NXOR DPWR DGND
+ GSR PGSR GSR_BUF
+ X4E_OFDT_GSR 
+ IO_X4000E

.MODEL X4E_OFDT_GSR UGATE (
+   TPLHMN={GSR_D} TPLHMX={GSR_D}
+   TPHLMN={GSR_D} TPHLMX={GSR_D}
+   )

UDFF DFFDE(1) DPWR DGND
+ $D_HI GSR_BUF CLK_BUF CE_BUF $D_LO D_BUF  $D_NC O_INT1
+ D0_EFF
+ IO_X4000E

UOTS BUF3() DPWR DGND
+ OINT GTS_SIG  O
+ D0_TGATE
+ IO_X4000E

UDELAY PINDLY(1,0,6) DPWR DGND
+ O_INT1
+ CLK CLK_BUF D_BUF CE GSR GSR_BUF
+ OINT
+ IO_X4000E
+ PINDLY:
+   OINT = {DELAY(O_D,-1,O_D)}
+ SETUP_HOLD:
+   CLOCK LH = CLK_BUF
+   DATA(1) = D_BUF
+   SETUPTIME = {D_CLK_SETUP}
+   HOLDTIME =  {D_CLK_HOLD}
+   WHEN = {GSR_BUF == '0 }
+ WIDTH:
+   NODE = CLK
+   MIN_HI = {CLK_WIDTH}
+   MIN_LO = {CLK_WIDTH}
+ WIDTH:
+   NODE = GSR
+   MIN_HI = {GSR_WIDTH}
+ WIDTH:
+   NODE = CE
+   MIN_HI = {CE_WIDTH}
+   MIN_LO = {CE_WIDTH}

.ENDS X4E_OFDTI

*$

.SUBCKT X4E_INFF GSR PGSR CLK PCLK CE D PD Q PQ
+ OPTIONAL:  DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: GSR_D=0 CLK_D=0 CE_D=0 D_D=0 Q_D=0
+   D_CLK_SETUP=0       D_CLK_HOLD=0
+   GSR_CLK_SETUP=0     GSR_CLK_HOLD=0
+   CLK_WIDTH=0 GSR_WIDTH=0 CE_WIDTH=0

UD XOR DPWR DGND
+ D  PD D_BUF
+ X4E_INFF_D 
+ IO_X4000E

.MODEL X4E_INFF_D UGATE (
+   TPLHMN={D_D} TPLHMX={D_D}
+   TPHLMN={D_D} TPHLMX={D_D}
+   )

UCLK XOR DPWR DGND
+ CLK PCLK CLK_BUF
+ X4E_INFF_CLK 
+ IO_X4000E

.MODEL X4E_INFF_CLK UGATE (
+   TPLHMN={CLK_D} TPLHMX={CLK_D}
+   TPHLMN={CLK_D} TPHLMX={CLK_D}
+   )

UGSR NXOR DPWR DGND
+ GSR  PGSR  GSR_BUF
+ X4E_INFF_GSR 
+ IO_X4000E

.MODEL X4E_INFF_GSR UGATE (
+   TPLHMN={GSR_D} TPLHMX={GSR_D}
+   TPHLMN={GSR_D} TPHLMX={GSR_D}
+   )

UCE BUF DPWR DGND
+ CE CE_BUF
+ X4E_INFF_CE
+ IO_X4000E

.MODEL X4E_INFF_CE UGATE (
+   TPLHMN={CE_D} TPLHMX={CE_D}
+   TPHLMN={CE_D} TPHLMX={CE_D}
+   )

UPQ XOR DPWR DGND
+ Q_INT2 PQ  Q
+ D0_GATE
+ IO_X4000E

UDFF DFFDE(1) DPWR DGND
+ $D_HI GSR_BUF CLK_BUF CE_BUF $D_LO D_BUF Q_INT $D_NC
+ D0_EFF
+ IO_X4000E

UDELAY PINDLY(1,0,6) DPWR DGND
+ Q_INT
+ CLK CLK_BUF D_BUF GSR GSR_BUF CE
+ Q_INT2
+ IO_X4000E
+ PINDLY:
+   Q_INT2 = {DELAY(Q_D,-1,Q_D)}
+ SETUP_HOLD:
+   CLOCK LH = CLK_BUF
+   DATA(1) = D_BUF
+   SETUPTIME = {D_CLK_SETUP}
+   HOLDTIME =  {D_CLK_HOLD}
+   WHEN = {GSR_BUF == '1 }
+ WIDTH:
+   NODE = CLK
+   MIN_HI = {CLK_WIDTH}
+   MIN_LO = {CLK_WIDTH}
+ WIDTH:
+   NODE = GSR
+   MIN_HI = {GSR_WIDTH}
+ WIDTH:
+   NODE = CE
+   MIN_HI = {CE_WIDTH}
+   MIN_LO = {CE_WIDTH}

.MODEL X4E_INFF_Q UEFF (
+  TPCLKQLHMN={Q_D} TPCLKQLHMX={Q_D}
+  TPCLKQHLMN={Q_D} TPCLKQHLMX={Q_D}
+  )

.ENDS X4E_INFF

*$

.SUBCKT X4E_INLAT GSR PGSR GE GATE PGATE D PD Q PQ
+ OPTIONAL:  DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: GSR_D=0 GE_D=0 GATE_D=0 D_D=0 Q_D=0
+   D_GATE_SETUP=0       D_GATE_HOLD=0
+   GSR_GATE_SETUP=0     GSR_GATE_HOLD=0
+   GATE_WIDTH=0  GSR_WIDTH=0  CE_WIDTH=0

UD XOR DPWR DGND
+ D  PD  D_BUF
+ X4E_INLAT_D 
+ IO_X4000E

.MODEL X4E_INLAT_D UGATE (
+   TPLHMN={D_D} TPLHMX={D_D}
+   TPHLMN={D_D} TPHLMX={D_D}
+   )

UGE BUF DPWR DGND
+ GE GE_BUF
+ X4E_INLAT_GE
+ IO_X4000E

.MODEL X4E_INLAT_GE UGATE (
+   TPLHMN={GE_D} TPLHMX={GE_D}
+   TPHLMN={GE_D} TPHLMX={GE_D}
+   )

UENB AND(2) DPWR DGND
+ GATE_BUF GE_BUF  ENB
+ D0_GATE
+ IO_X4000E

UGATE NXOR DPWR DGND
+ GATE PGATE GATE_BUF
+ X4E_INLAT_GATE 
+ IO_X4000E

.MODEL X4E_INLAT_GATE UGATE (
+   TPLHMN={GATE_D} TPLHMX={GATE_D}
+   TPHLMN={GATE_D} TPHLMX={GATE_D}
+   )

UGSR NXOR DPWR DGND
+ GSR PGSR  GSR_BUF
+ X4E_INLAT_GSR 
+ IO_X4000E

.MODEL X4E_INLAT_GSR UGATE (
+   TPLHMN={GSR_D} TPLHMX={GSR_D}
+   TPHLMN={GSR_D} TPHLMX={GSR_D}
+   )

UPQ XOR DPWR DGND
+ Q_INT2 PQ  Q
+ D0_GATE
+ IO_X4000E

UDLAT DLTCH(1) DPWR DGND
+ $D_HI GSR_BUF ENB D_BUF Q_INT $D_NC
+ D0_GFF
+ IO_X4000E

UDELAY PINDLY(1,0,6) DPWR DGND
+ Q_INT
+ GATE GATE_BUF D_BUF GSR GSR_BUF CE 
+ Q_INT2
+ IO_X4000E
+ PINDLY:
+   Q_INT2 = {DELAY(Q_D,-1,Q_D)}
+ SETUP_HOLD:
+   CLOCK LH = GATE_BUF
+   DATA(1) = D_BUF
+   SETUPTIME = {D_GATE_SETUP}
+   HOLDTIME =  {D_GATE_HOLD}
+   WHEN = {GSR_BUF == '1 }
+ WIDTH:
+   NODE = GATE
+   MIN_HI = {GATE_WIDTH}
+   MIN_LO = {GATE_WIDTH}
+ WIDTH:
+   NODE = GSR
+   MIN_HI = {GSR_WIDTH}
+ WIDTH:
+   NODE = CE
+   MIN_HI = {CE_WIDTH}
+   MIN_LO = {CE_WIDTH}

.MODEL X4E_INLAT_Q UGFF (
+  TPGQLHMN={Q_D} TPGQLHMX={Q_D}
+  TPGQHLMN={Q_D} TPGQHLMX={Q_D}
+  )

.ENDS X4E_INLAT

*$

.SUBCKT X4E_ROM16X1 A0 A1 A2 A3  O
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: A0_D=0 A1_D=0 A2_D=0 A3_D=0 O_D=0 ROM_DATA=0
+ TEXT: INITDATA=DEFAULT.ROM

UA0 BUF DPWR DGND
+ A0 A0_BUF
+ X4E_ROM16X1_A0
+ IO_X4000E

.MODEL X4E_ROM16X1_A0 UGATE (
+   TPLHMN={A0_D} TPLHMX={A0_D}
+   TPHLMN={A0_D} TPHLMX={A0_D}
+   )

UA1 BUF DPWR DGND
+ A1 A1_BUF
+ X4E_ROM16X1_A1
+ IO_X4000E

.MODEL X4E_ROM16X1_A1 UGATE (
+   TPLHMN={A1_D} TPLHMX={A1_D}
+   TPHLMN={A1_D} TPHLMX={A1_D}
+   )

UA2 BUF DPWR DGND
+ A2 A2_BUF
+ X4E_ROM16X1_A2
+ IO_X4000E

.MODEL X4E_ROM16X1_A2 UGATE (
+   TPLHMN={A2_D} TPLHMX={A2_D}
+   TPHLMN={A2_D} TPHLMX={A2_D}
+   )

UA3 BUF DPWR DGND
+ A3 A3_BUF
+ X4E_ROM16X1_A3
+ IO_X4000E

.MODEL X4E_ROM16X1_A3 UGATE (
+   TPLHMN={A3_D} TPLHMX={A3_D}
+   TPHLMN={A3_D} TPHLMX={A3_D}
+   )

UROM ROM(4,1) DPWR DGND
+ $D_HI A3_BUF A2_BUF A1_BUF A0_BUF
+ OUT
+ X4E_ROM16X1_ROM
+ IO_X4000E
+ FILE=|INITDATA|

UOUT BUF DPWR DGND
+ OUT O
+ D0_GATE
+ IO_X4000E

.MODEL X4E_ROM16X1_ROM UROM (
+   TPADHMN={O_D} TPADHMX={O_D}
+   TPADLMN={O_D} TPADLMX={O_D}
+   )

.ENDS X4E_ROM16X1

*$

.SUBCKT X4E_ROM32X1 A0 A1 A2 A3 A4  O
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: A0_D=0 A1_D=0 A2_D=0 A3_D=0 A4_D=0 O_D=0 ROM_DATA=0
+ TEXT: INITDATA=DEFAULT.ROM

UA0 BUF DPWR DGND
+ A0 A0_BUF
+ X4E_ROM32X1_A0
+ IO_X4000E

.MODEL X4E_ROM32X1_A0 UGATE (
+   TPLHMN={A0_D} TPLHMX={A0_D}
+   TPHLMN={A0_D} TPHLMX={A0_D}
+   )

UA1 BUF DPWR DGND
+ A1 A1_BUF
+ X4E_ROM32X1_A1
+ IO_X4000E

.MODEL X4E_ROM32X1_A1 UGATE (
+   TPLHMN={A1_D} TPLHMX={A1_D}
+   TPHLMN={A1_D} TPHLMX={A1_D}
+   )

UA2 BUF DPWR DGND
+ A2 A2_BUF
+ X4E_ROM32X1_A2
+ IO_X4000E

.MODEL X4E_ROM32X1_A2 UGATE (
+   TPLHMN={A2_D} TPLHMX={A2_D}
+   TPHLMN={A2_D} TPHLMX={A2_D}
+   )

UA3 BUF DPWR DGND
+ A3 A3_BUF
+ X4E_ROM32X1_A3
+ IO_X4000E

.MODEL X4E_ROM32X1_A3 UGATE (
+   TPLHMN={A3_D} TPLHMX={A3_D}
+   TPHLMN={A3_D} TPHLMX={A3_D}
+   )

UA4 BUF DPWR DGND
+ A4 A4_BUF
+ X4E_ROM32X1_A4
+ IO_X4000E

.MODEL X4E_ROM32X1_A4 UGATE (
+   TPLHMN={A4_D} TPLHMX={A4_D}
+   TPHLMN={A4_D} TPHLMX={A4_D}
+   )

UROM ROM(5,1) DPWR DGND
+ $D_HI A4_BUF A3_BUF A2_BUF A1_BUF A0_BUF
+ OUT
+ X4E_ROM32X1_ROM
+ IO_X4000E
+ FILE=|INITDATA|

UOUT BUF DPWR DGND
+ OUT O
+ D0_GATE
+ IO_X4000E

.MODEL X4E_ROM32X1_ROM UROM (
+   TPADHMN={O_D} TPADHMX={O_D}
+   TPADLMN={O_D} TPADLMX={O_D}
+   )

.ENDS X4E_ROM32X1

*$

.SUBCKT X4E_RAM16X1 A0 A1 A2 A3 D WE HGSR O
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: A0_D=0 A1_D=0 A2_D=0 A3_D=0 O_D=0
+  D_D=0 WE_RISED=0  WE_FALLD=0
+  D_WE_SETUP=0  D_WE_HOLD=0
+  A0_WE_SETUP=0  A0_WE_HOLD=0  A1_WE_SETUP=0  A1_WE_HOLD=0
+  A2_WE_SETUP=0  A2_WE_HOLD=0  A3_WE_SETUP=0  A3_WE_HOLD=0
+  WE_WIDTH=0
+ TEXT: INITDATA=DEFAULT.RAM

UA0 BUF DPWR DGND
+ A0 A0_BUF
+ X4E_RAM16X1_A0
+ IO_X4000E

.MODEL X4E_RAM16X1_A0 UGATE (
+   TPLHMN={A0_D} TPLHMX={A0_D}
+   TPHLMN={A0_D} TPHLMX={A0_D}
+   )

UA1 BUF DPWR DGND
+ A1 A1_BUF
+ X4E_RAM16X1_A1
+ IO_X4000E

.MODEL X4E_RAM16X1_A1 UGATE (
+   TPLHMN={A1_D} TPLHMX={A1_D}
+   TPHLMN={A1_D} TPHLMX={A1_D}
+   )

UA2 BUF DPWR DGND
+ A2 A2_BUF
+ X4E_RAM16X1_A2
+ IO_X4000E

.MODEL X4E_RAM16X1_A2 UGATE (
+   TPLHMN={A2_D} TPLHMX={A2_D}
+   TPHLMN={A2_D} TPHLMX={A2_D}
+   )

UA3 BUF DPWR DGND
+ A3 A3_BUF
+ X4E_RAM16X1_A3
+ IO_X4000E

.MODEL X4E_RAM16X1_A3 UGATE (
+   TPLHMN={A3_D} TPLHMX={A3_D}
+   TPHLMN={A3_D} TPHLMX={A3_D}
+   )

UDATA BUF DPWR DGND
+ D D_BUF
+ X4E_RAM16X1_D
+ IO_X4000E

.MODEL X4E_RAM16X1_D UGATE (
+   TPLHMN={D_D} TPLHMX={D_D}
+   TPHLMN={D_D} TPHLMX={D_D}
+   )

UX0 OR(2) DPWR DGND
+ ATA0 ATB0  DATA_OUT
+ D0_GATE
+ IO_X4000E
UAB0 AND(2) DPWR DGND
+ WE_BUF LAT_OUT  ATA0
+ D0_GATE
+ IO_X4000E
UAB1 AND(2) DPWR DGND
+ WE_BAR RAM_OUT  ATB0
+ D0_GATE
+ IO_X4000E

UWENABLE BUF DPWR DGND
+ WE WE_BUF
+ X4E_RAM16X1_WE
+ IO_X4000E
UWENABLEBAR INV DPWR DGND
+ WE_BUF WE_BAR
+ D0_GATE
+ IO_X4000E
.MODEL X4E_RAM16X1_WE UGATE (
+   TPLHMN={WE_RISED} TPLHMX={WE_RISED}
+   TPHLMN={WE_FALLD} TPHLMX={WE_FALLD}
+   )

UCLKPULSE INV DPWR DGND
+ WE_BUF  WE_DLY
+ D0_GATE
+ IO_X4000E

.MODEL X4E_RAM16X1_UEFF UEFF ()
.MODEL X4E_RAM16X1_UGFF UGFF ()

UCLR AND(2) DPWR DGND
+ WE_BUF WE_DLY  WEPULSE
+ D0_GATE
+ IO_X4000E

UGSR INV DPWR DGND
+ HGSR HGSRBAR
+ D0_GATE
+ IO_X4000E

UDLAT DLTCH(1) DPWR DGND
+ $D_HI HGSRBAR WE_BUF D_BUF LAT_OUT $D_NC
+ X4E_RAM16X1_UGFF
+ IO_X4000E


URAM RAM(4,1) DPWR DGND
+ $D_HI  WEPULSE
+ A3_BUF A2_BUF A1_BUF A0_BUF
+ D_BUF
+ RAM_OUT
+ X4E_RAM16X1_RAM_OUT
+ IO_X4000E
+ FILE=|INITDATA|

.MODEL X4E_RAM16X1_RAM_OUT URAM ()

UDELAY PINDLY(1,0,6) DPWR DGND
+ DATA_OUT
+ WE D A0_BUF A1_BUF A2_BUF A3_BUF
+ O
+ IO_X4000E
+ PINDLY:
+   O = {DELAY(O_D,-1,O_D)}
+ SETUP_HOLD:
+   CLOCK LH = WE
+   DATA(1) = A0_BUF
+   SETUPTIME = {A0_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WE
+   DATA(1) = A1_BUF
+   SETUPTIME = {A1_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WE
+   DATA(1) = A2_BUF
+   SETUPTIME = {A2_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WE
+   DATA(1) = A3_BUF
+   SETUPTIME = {A3_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WE
+   DATA(1) = D
+   SETUPTIME = {D_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK HL = WE
+   DATA(1) = A0_BUF
+   HOLDTIME =  {A0_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WE
+   DATA(1) = A1_BUF
+   HOLDTIME =  {A1_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WE
+   DATA(1) = A2_BUF
+   HOLDTIME =  {A2_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WE
+   DATA(1) = A3_BUF
+   HOLDTIME =  {A3_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WE
+   DATA(1) = D
+   HOLDTIME =  {D_WE_HOLD}
+ WIDTH:
+   NODE = WE
+   MIN_HI = {WE_WIDTH}

.ENDS X4E_RAM16X1

*$

.SUBCKT X4E_RAMS16X1 A0 A1 A2 A3 D WE WCLK PWCLK O
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: A0_D=0 A1_D=0 A2_D=0 A3_D=0 O_D=0
+  D_D=0 WE_RISED=0  WE_FALLD=0 WCLK_D=0
+  D_WE_SETUP=0  D_WE_HOLD=0
+  A0_WE_SETUP=0  A0_WE_HOLD=0  A1_WE_SETUP=0  A1_WE_HOLD=0
+  A2_WE_SETUP=0  A2_WE_HOLD=0  A3_WE_SETUP=0  A3_WE_HOLD=0
+  WCLK_WIDTH=0
+ TEXT: INITDATA=DEFAULT.RAM

UA0 BUF DPWR DGND
+ A0 A0_BUF
+ X4E_RAMS16X1_A0
+ IO_X4000E

.MODEL X4E_RAMS16X1_A0 UGATE (
+   TPLHMN={A0_D} TPLHMX={A0_D}
+   TPHLMN={A0_D} TPHLMX={A0_D}
+   )

UA1 BUF DPWR DGND
+ A1 A1_BUF
+ X4E_RAMS16X1_A1
+ IO_X4000E

.MODEL X4E_RAMS16X1_A1 UGATE (
+   TPLHMN={A1_D} TPLHMX={A1_D}
+   TPHLMN={A1_D} TPHLMX={A1_D}
+   )

UA2 BUF DPWR DGND
+ A2 A2_BUF
+ X4E_RAMS16X1_A2
+ IO_X4000E

.MODEL X4E_RAMS16X1_A2 UGATE (
+   TPLHMN={A2_D} TPLHMX={A2_D}
+   TPHLMN={A2_D} TPHLMX={A2_D}
+   )

UA3 BUF DPWR DGND
+ A3 A3_BUF
+ X4E_RAMS16X1_A3
+ IO_X4000E

.MODEL X4E_RAMS16X1_A3 UGATE (
+   TPLHMN={A3_D} TPLHMX={A3_D}
+   TPHLMN={A3_D} TPHLMX={A3_D}
+   )

UDATA BUF DPWR DGND
+ D D_BUF
+ X4E_RAMS16X1_D
+ IO_X4000E

.MODEL X4E_RAMS16X1_D UGATE (
+   TPLHMN={D_D} TPLHMX={D_D}
+   TPHLMN={D_D} TPHLMX={D_D}
+   )

UADDLY BUFA(5) DPWR DGND
+ A0_BUF A1_BUF A2_BUF A3_BUF D_BUF
+ A0_DLY A1_DLY A2_DLY A3_DLY D_DLY
+ D0_GATE
+ IO_X4000E

UWCLK XOR DPWR DGND
+ WCLK PWCLK  WCLK_BUF
+ D0_GATE
+ IO_X4000E

.MODEL X4E_RAMS16X1_WCLK UGATE (
+   TPLHMN={WCLK_D} TPLHMX={WCLK_D}
+   TPHLMN={WCLK_D} TPHLMX={WCLK_D}
+   )

UWENABLE BUF DPWR DGND
+ WE WE_BUF
+ X4E_RAMS16X1_WE
+ IO_X4000E

.MODEL X4E_RAMS16X1_WE UGATE (
+   TPLHMN={WE_RISED} TPLHMX={WE_RISED}
+   TPHLMN={WE_FALLD} TPHLMX={WE_FALLD}
+   )

UCLKPULSE INV DPWR DGND
+ WCLK_BUF  WCLK_DLY
+ D0_GATE
+ IO_X4000E

.MODEL X4E_RAMS16X1_UEFF UEFF ()

UCLR AND(3) DPWR DGND
+ WE_BUF WCLK_DLY WCLK_BUF  WEPULSE
+ D0_GATE
+ IO_X4000E

URAM RAM(4,1) DPWR DGND
+ $D_HI WEPULSE
+ A3_DLY A2_DLY A1_DLY A0_DLY
+ D_DLY
+ RAM_OUT
+ X4E_RAMS16X1_RAM_OUT
+ IO_X4000E
+ FILE=|INITDATA|

.MODEL X4E_RAMS16X1_RAM_OUT URAM ()

UDELAY PINDLY(1,0,6) DPWR DGND
+ RAM_OUT
+ WCLK D_BUF A0_BUF A1_BUF A2_BUF A3_BUF
+ O
+ IO_X4000E
+ PINDLY:
+   O = {DELAY(O_D+WCLK_D,-1,O_D+WCLK_D)}
+ SETUP_HOLD:
+   CLOCK LH = WCLK
+   DATA(1) = A0_BUF
+   SETUPTIME = {A0_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WCLK
+   DATA(1) = A1_BUF
+   SETUPTIME = {A1_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WCLK
+   DATA(1) = A2_BUF
+   SETUPTIME = {A2_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WCLK
+   DATA(1) = A3_BUF
+   SETUPTIME = {A3_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WCLK
+   DATA(1) = D_BUF
+   SETUPTIME = {D_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK HL = WCLK
+   DATA(1) = A0_BUF
+   HOLDTIME =  {A0_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WCLK
+   DATA(1) = A1_BUF
+   HOLDTIME =  {A1_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WCLK
+   DATA(1) = A2_BUF
+   HOLDTIME =  {A2_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WCLK
+   DATA(1) = A3_BUF
+   HOLDTIME =  {A3_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WCLK
+   DATA(1) = D_BUF
+   HOLDTIME =  {D_WE_HOLD}
+ WIDTH:
+   NODE = WCLK
+   MIN_HI = {WCLK_WIDTH}
+   MIN_LO = {WCLK_WIDTH}

.ENDS X4E_RAMS16X1

*$

.SUBCKT X4E_RAMD16X1
+ A0 A1 A2 A3 DPRA0 DPRA1 DPRA2 DPRA3 D WE WCLK PWCLK SPO DPO 
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: A0_D=0 A1_D=0 A2_D=0 A3_D=0
+  DPRA0_D=0 DPRA1_D=0 DPRA2_D=0 DPRA3_D=0
+  SPO_D=0 DPO_D=0
+  D_D=0 WE_RISED=0  WE_FALLD=0 WCLK_D=0
+  D_WE_SETUP=0  D_WE_HOLD=0
+  A0_WE_SETUP=0  A0_WE_HOLD=0  A1_WE_SETUP=0  A1_WE_HOLD=0
+  A2_WE_SETUP=0  A2_WE_HOLD=0  A3_WE_SETUP=0  A3_WE_HOLD=0
+  DPRA0_WE_SETUP=0  DPRA0_WE_HOLD=0  DPRA1_WE_SETUP=0  DPRA1_WE_HOLD=0
+  DPRA2_WE_SETUP=0  DPRA2_WE_HOLD=0  DPRA3_WE_SETUP=0  DPRA3_WE_HOLD=0
+  WE_WIDTH=0 WCLK_WIDTH=0
+ TEXT: INITDATA=DEFAULT.RAM


UADDRDLY PINDLY(8,0,0) DPWR DGND
+ A0     A1     A2     A3      DPRA0     DPRA1     DPRA2     DPRA3
+ A0_BUF A1_BUF A2_BUF A3_BUF  DPRA0_BUF DPRA1_BUF DPRA2_BUF DPRA3_BUF
+ IO_X4000E
+ PINDLY:
+    A0_BUF = {DELAY(A0_D,A0_D,A0_D)}
+    A1_BUF = {DELAY(A1_D,A1_D,A1_D)}
+    A2_BUF = {DELAY(A2_D,A2_D,A2_D)}
+    A3_BUF = {DELAY(A3_D,A3_D,A3_D)}
+    DPRA0_BUF = {DELAY(DPRA0_D,DPRA0_D,DPRA0_D)}
+    DPRA1_BUF = {DELAY(DPRA1_D,DPRA1_D,DPRA1_D)}
+    DPRA2_BUF = {DELAY(DPRA2_D,DPRA2_D,DPRA2_D)}
+    DPRA3_BUF = {DELAY(DPRA3_D,DPRA3_D,DPRA3_D)}


.MODEL SMALLDLY UGATE (TPHLTY=.1NS TPLHTY=.1NS)


UDATA BUF DPWR DGND
+ D D_BUF
+ X4E_RAM16X1_D
+ IO_X4000E

.MODEL X4E_RAM16X1_D UGATE (
+   TPLHMN={D_D} TPLHMX={D_D}
+   TPHLMN={D_D} TPHLMX={D_D}
+   )

UWCLK XOR DPWR DGND
+ WCLK PWCLK  WCLK_BUF
+ D0_GATE
+ IO_X4000E

UWENABLE BUF DPWR DGND
+ WE  WE_BUF
+ X4E_RAM16X1_WE
+ IO_X4000E

.MODEL X4E_RAM16X1_WE UGATE (
+   TPLHMN={WE_RISED} TPLHMX={WE_RISED}
+   TPHLMN={WE_FALLD} TPHLMX={WE_FALLD}
+   )

UCLKDLY_SPO INV DPWR DGND
+ WCLK_BUF  WCLK_DLY_SPO
+ D0_GATE
+ IO_X4000E

UCLKPULSE_SPO AND(3) DPWR DGND
+ WE_BUF WCLK_BUF WCLK_DLY_SPO  WEPULSE_SPO
+ D0_GATE
+ IO_X4000E

URAMSPO RAM(4,1) DPWR DGND
+ $D_HI WEPULSE_SPO
+ A3_BUF A2_BUF A1_BUF A0_BUF
+ D_BUF
+ SPO_OUT
+ X4E_RAMD16X1_RAM_OUT
+ IO_X4000E
+ FILE=|INITDATA|

UDELAYSPO PINDLY(1,0,6) DPWR DGND
+ SPO_OUT
+ WCLK D_BUF A0_BUF A1_BUF A2_BUF A3_BUF
+ SPO
+ IO_X4000E
+ PINDLY:
+   SPO = {DELAY(SPO_D+WCLK_D,-1,SPO_D+WCLK_D)}
+ SETUP_HOLD:
+   CLOCK LH = WCLK
+   DATA(1) = A0_BUF
+   SETUPTIME = {A0_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WCLK
+   DATA(1) = A1_BUF
+   SETUPTIME = {A1_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WCLK
+   DATA(1) = A2_BUF
+   SETUPTIME = {A2_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WCLK
+   DATA(1) = A3_BUF
+   SETUPTIME = {A3_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WCLK
+   DATA(1) = D_BUF
+   SETUPTIME = {D_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK HL = WCLK
+   DATA(1) = A0_BUF
+   HOLDTIME =  {A0_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WCLK
+   DATA(1) = A1_BUF
+   HOLDTIME =  {A1_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WCLK
+   DATA(1) = A2_BUF
+   HOLDTIME =  {A2_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WCLK
+   DATA(1) = A3_BUF
+   HOLDTIME =  {A3_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WCLK
+   DATA(1) = D_BUF
+   HOLDTIME =  {D_WE_HOLD}
+ WIDTH:
+   NODE = WCLK
+   MIN_HI = {WCLK_WIDTH}
+   MIN_LO = {WCLK_WIDTH}

* Dual port RAM section

UADDRMUX LOGICEXP(9,4) DPWR DGND
+ WEPULSE_DPO A0_BUF A1_BUF A2_BUF A3_BUF DPRA0_BUF DPRA1_BUF DPRA2_BUF DPRA3_BUF
+ AX0_BUF AX1_BUF AX2_BUF AX3_BUF
+ D0_GATE
+ IO_X4000E
+ LOGIC:
+   AX0_BUF = { WEPULSE_DPO & A0_BUF | ~WEPULSE_DPO & DPRA0_BUF }
+   AX1_BUF = { WEPULSE_DPO & A1_BUF | ~WEPULSE_DPO & DPRA1_BUF }
+   AX2_BUF = { WEPULSE_DPO & A2_BUF | ~WEPULSE_DPO & DPRA2_BUF }
+   AX3_BUF = { WEPULSE_DPO & A3_BUF | ~WEPULSE_DPO & DPRA3_BUF }

UCLKDLY_DPO INV DPWR DGND
+ WCLK_BUF  WCLK_DLY_DPO
+ SMALLDLY
+ IO_X4000E

UCLKPULSE_DPO AND(3) DPWR DGND
+ WE_BUF WCLK_BUF WCLK_DLY_DPO  WEPULSE_DPO
+ D0_GATE
+ IO_X4000E

URAMDPO RAM(4,1) DPWR DGND
+ $D_HI WEPULSE_DPO
+ AX3_BUF AX2_BUF AX1_BUF AX0_BUF
+ D_BUF
+ DPO_OUT
+ X4E_RAMD16X1_RAM_OUT
+ IO_X4000E
+ FILE=|INITDATA|

UWP1 INV DPWR DGND
+ WEPULSE_DPO WEPULSE_DPO_BAR
+ D0_GATE
+ IO_X4000E

ULATDPO DLTCH(1) DPWR DGND
+ $D_HI $D_HI WEPULSE_DPO_BAR DPO_OUT DPOLAT $D_NC
+ D0_GFF IO_X4000E

.MODEL X4E_RAMD16X1_RAM_OUT URAM ()

UDELAYDPO PINDLY(1,0,6) DPWR DGND
+ DPOLAT
+ WCLK D_BUF DPRA0_BUF DPRA1_BUF DPRA2_BUF DPRA3_BUF
+ DPO
+ IO_X4000E
+ PINDLY:
+   DPO = {DELAY(DPO_D+WCLK_D,-1,DPO_D+WCLK_D)}
+ SETUP_HOLD:
+   CLOCK LH = WCLK
+   DATA(1) = DPRA0_BUF
+   SETUPTIME = {DPRA0_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WCLK
+   DATA(1) = DPRA1_BUF
+   SETUPTIME = {DPRA1_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WCLK
+   DATA(1) = DPRA2_BUF
+   SETUPTIME = {DPRA2_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WCLK
+   DATA(1) = DPRA3_BUF
+   SETUPTIME = {DPRA3_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WCLK
+   DATA(1) = D_BUF
+   SETUPTIME = {D_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK HL = WCLK
+   DATA(1) = DPRA0_BUF
+   HOLDTIME =  {DPRA0_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WCLK
+   DATA(1) = DPRA1_BUF
+   HOLDTIME =  {DPRA1_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WCLK
+   DATA(1) = DPRA2_BUF
+   HOLDTIME =  {DPRA2_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WCLK
+   DATA(1) = DPRA3_BUF
+   HOLDTIME =  {DPRA3_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WCLK
+   DATA(1) = D_BUF
+   HOLDTIME =  {D_WE_HOLD}
+ WIDTH:
+   NODE = WCLK
+   MIN_HI = {WCLK_WIDTH}
+   MIN_LO = {WCLK_WIDTH}

.ENDS X4E_RAMD16X1

*$

.SUBCKT X4E_RAM32X1 A0 A1 A2 A3 A4 D WE HGSR O
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: A0_D=0 A1_D=0 A2_D=0 A3_D=0 A4_D=0 O_D=0
+  D_D=0 WE_RISED=0  WE_FALLD=0
+  D_WE_SETUP=0  D_WE_HOLD=0
+  A0_WE_SETUP=0  A0_WE_HOLD=0  A1_WE_SETUP=0  A1_WE_HOLD=0
+  A2_WE_SETUP=0  A2_WE_HOLD=0  A3_WE_SETUP=0  A3_WE_HOLD=0 
+  A4_WE_SETUP=0  A4_WE_HOLD=0
+  WE_WIDTH=0
+ TEXT: INITDATA=DEFAULT.RAM

UA0 BUF DPWR DGND
+ A0 A0_BUF
+ X4E_RAM32X1_A0
+ IO_X4000E

.MODEL X4E_RAM32X1_A0 UGATE (
+   TPLHMN={A0_D} TPLHMX={A0_D}
+   TPHLMN={A0_D} TPHLMX={A0_D}
+   )

UA1 BUF DPWR DGND
+ A1 A1_BUF
+ X4E_RAM32X1_A1
+ IO_X4000E

.MODEL X4E_RAM32X1_A1 UGATE (
+   TPLHMN={A1_D} TPLHMX={A1_D}
+   TPHLMN={A1_D} TPHLMX={A1_D}
+   )

UA2 BUF DPWR DGND
+ A2 A2_BUF
+ X4E_RAM32X1_A2
+ IO_X4000E

.MODEL X4E_RAM32X1_A2 UGATE (
+   TPLHMN={A2_D} TPLHMX={A2_D}
+   TPHLMN={A2_D} TPHLMX={A2_D}
+   )

UA3 BUF DPWR DGND
+ A3 A3_BUF
+ X4E_RAM32X1_A3
+ IO_X4000E

.MODEL X4E_RAM32X1_A3 UGATE (
+   TPLHMN={A3_D} TPLHMX={A3_D}
+   TPHLMN={A3_D} TPHLMX={A3_D}
+   )

UA4 BUF DPWR DGND
+ A4 A4_BUF
+ X4E_RAM32X1_A4
+ IO_X4000E

.MODEL X4E_RAM32X1_A4 UGATE (
+   TPLHMN={A4_D} TPLHMX={A4_D}
+   TPHLMN={A4_D} TPHLMX={A4_D}
+   )

UDATA BUF DPWR DGND
+ D D_BUF
+ X4E_RAM32X1_D
+ IO_X4000E

.MODEL X4E_RAM32X1_D UGATE (
+   TPLHMN={D_D} TPLHMX={D_D}
+   TPHLMN={D_D} TPHLMX={D_D}
+   )

UX0 OR(2) DPWR DGND
+ ATA0 ATB0  DATA_OUT
+ D0_GATE
+ IO_X4000E
UAB0 AND(2) DPWR DGND
+ WE_BUF LAT_OUT  ATA0
+ D0_GATE
+ IO_X4000E
UAB1 AND(2) DPWR DGND
+ WE_BAR RAM_OUT  ATB0
+ D0_GATE
+ IO_X4000E

UWENABLE BUF DPWR DGND
+ WE WE_BUF
+ X4E_RAM32X1_WE
+ IO_X4000E
UWENABLEBAR INV DPWR DGND
+ WE_BUF WE_BAR
+ D0_GATE
+ IO_X4000E
.MODEL X4E_RAM32X1_WE UGATE (
+   TPLHMN={WE_RISED} TPLHMX={WE_RISED}
+   TPHLMN={WE_FALLD} TPHLMX={WE_FALLD}
+   )

UCLKPULSE INV DPWR DGND
+ WE_BUF  WE_DLY
+ D0_GATE
+ IO_X4000E

.MODEL X4E_RAM32X1_UEFF UEFF ()
.MODEL X4E_RAM32X1_UGFF UGFF ()

UCLR AND(2) DPWR DGND
+ WE_BUF WE_DLY  WEPULSE
+ D0_GATE
+ IO_X4000E

UGSR INV DPWR DGND
+ HGSR HGSRBAR
+ D0_GATE
+ IO_X4000E

UDLAT DLTCH(1) DPWR DGND
+ $D_HI HGSRBAR WE_BUF D_BUF LAT_OUT $D_NC
+ X4E_RAM32X1_UGFF
+ IO_X4000E


URAM RAM(5,1) DPWR DGND
+ $D_HI  WEPULSE
+ A4_BUF A3_BUF A2_BUF A1_BUF A0_BUF
+ D_BUF
+ RAM_OUT
+ X4E_RAM32X1_RAM_OUT
+ IO_X4000E
+ FILE=|INITDATA|

.MODEL X4E_RAM32X1_RAM_OUT URAM ()

UDELAY PINDLY(1,0,7) DPWR DGND
+ DATA_OUT
+ WE D A0_BUF A1_BUF A2_BUF A3_BUF A4_BUF
+ O
+ IO_X4000E
+ PINDLY:
+   O = {DELAY(O_D,-1,O_D)}
+ SETUP_HOLD:
+   CLOCK LH = WE
+   DATA(1) = A0_BUF
+   SETUPTIME = {A0_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WE
+   DATA(1) = A1_BUF
+   SETUPTIME = {A1_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WE
+   DATA(1) = A2_BUF
+   SETUPTIME = {A2_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WE
+   DATA(1) = A3_BUF
+   SETUPTIME = {A3_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WE
+   DATA(1) = A4_BUF
+   SETUPTIME = {A4_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WE
+   DATA(1) = D
+   SETUPTIME = {D_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK HL = WE
+   DATA(1) = A0_BUF
+   HOLDTIME =  {A0_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WE
+   DATA(1) = A1_BUF
+   HOLDTIME =  {A1_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WE
+   DATA(1) = A2_BUF
+   HOLDTIME =  {A2_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WE
+   DATA(1) = A3_BUF
+   HOLDTIME =  {A3_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WE
+   DATA(1) = A4_BUF
+   HOLDTIME =  {A4_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WE
+   DATA(1) = D
+   HOLDTIME =  {D_WE_HOLD}
+ WIDTH:
+   NODE = WE
+   MIN_HI = {WE_WIDTH}

.ENDS X4E_RAM32X1

*$

.SUBCKT X4E_RAMS32X1 A0 A1 A2 A3 A4 D WE WCLK PWCLK O
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: A0_D=0 A1_D=0 A2_D=0 A3_D=0 A4_D=0 O_D=0
+  D_D=0 WE_RISED=0  WE_FALLD=0 WCLK_D=0
+  D_WE_SETUP=0  D_WE_HOLD=0
+  A0_WE_SETUP=0  A0_WE_HOLD=0  A1_WE_SETUP=0  A1_WE_HOLD=0
+  A2_WE_SETUP=0  A2_WE_HOLD=0  A3_WE_SETUP=0  A3_WE_HOLD=0 
+  A4_WE_SETUP=0  A4_WE_HOLD=0
+  WCLK_WIDTH=0
+ TEXT: INITDATA=DEFAULT.RAM

UA0 BUF DPWR DGND
+ A0 A0_BUF
+ X4E_RAMS32X1_A0
+ IO_X4000E

.MODEL X4E_RAMS32X1_A0 UGATE (
+   TPLHMN={A0_D} TPLHMX={A0_D}
+   TPHLMN={A0_D} TPHLMX={A0_D}
+   )

UA1 BUF DPWR DGND
+ A1 A1_BUF
+ X4E_RAMS32X1_A1
+ IO_X4000E

.MODEL X4E_RAMS32X1_A1 UGATE (
+   TPLHMN={A1_D} TPLHMX={A1_D}
+   TPHLMN={A1_D} TPHLMX={A1_D}
+   )

UA2 BUF DPWR DGND
+ A2 A2_BUF
+ X4E_RAMS32X1_A2
+ IO_X4000E

.MODEL X4E_RAMS32X1_A2 UGATE (
+   TPLHMN={A2_D} TPLHMX={A2_D}
+   TPHLMN={A2_D} TPHLMX={A2_D}
+   )

UA3 BUF DPWR DGND
+ A3 A3_BUF
+ X4E_RAMS32X1_A3
+ IO_X4000E

.MODEL X4E_RAMS32X1_A3 UGATE (
+   TPLHMN={A3_D} TPLHMX={A3_D}
+   TPHLMN={A3_D} TPHLMX={A3_D}
+   )

UA4 BUF DPWR DGND
+ A4 A4_BUF
+ X4E_RAMS32X1_A4
+ IO_X4000E

.MODEL X4E_RAMS32X1_A4 UGATE (
+   TPLHMN={A4_D} TPLHMX={A4_D}
+   TPHLMN={A4_D} TPHLMX={A4_D}
+   )

UDATA BUF DPWR DGND
+ D D_BUF
+ X4E_RAMS32X1_D
+ IO_X4000E

.MODEL X4E_RAMS32X1_D UGATE (
+   TPLHMN={D_D} TPLHMX={D_D}
+   TPHLMN={D_D} TPHLMX={D_D}
+   )

UADDLY BUFA(6) DPWR DGND
+ A0_BUF A1_BUF A2_BUF A3_BUF A4_BUF D_BUF
+ A0_DLY A1_DLY A2_DLY A3_DLY A4_DLY D_DLY
+ D0_GATE
+ IO_X4000E

UWCLK XOR DPWR DGND
+ WCLK PWCLK  WCLK_BUF
+ D0_GATE
+ IO_X4000E

.MODEL X4E_RAMS32X1_WCLK UGATE (
+   TPLHMN={WCLK_D} TPLHMX={WCLK_D}
+   TPHLMN={WCLK_D} TPHLMX={WCLK_D}
+   )

UWENABLE BUF DPWR DGND
+ WE WE_BUF
+ X4E_RAMS32X1_WE
+ IO_X4000E

.MODEL X4E_RAMS32X1_WE UGATE (
+   TPLHMN={WE_RISED} TPLHMX={WE_RISED}
+   TPHLMN={WE_FALLD} TPHLMX={WE_FALLD}
+   )

UCLKPULSE INV DPWR DGND
+ WCLK_BUF  WCLK_DLY
+ D0_GATE
+ IO_X4000E

.MODEL X4E_RAMS32X1_UEFF UEFF ()

UCLR AND(3) DPWR DGND
+ WE_BUF WCLK_DLY WCLK_BUF  WEPULSE
+ D0_GATE
+ IO_X4000E

URAM RAM(5,1) DPWR DGND
+ $D_HI WEPULSE
+ A4_DLY A3_DLY A2_DLY A1_DLY A0_DLY
+ D_DLY
+ RAM_OUT
+ X4E_RAMS32X1_RAM_OUT
+ IO_X4000E
+ FILE=|INITDATA|

.MODEL X4E_RAMS32X1_RAM_OUT URAM ()

UDELAY PINDLY(1,0,7) DPWR DGND
+ RAM_OUT
+ WCLK D_BUF A0_BUF A1_BUF A2_BUF A3_BUF A4_BUF
+ O
+ IO_X4000E
+ PINDLY:
+   O = {DELAY(O_D+WCLK_D,-1,O_D+WCLK_D)}
+ SETUP_HOLD:
+   CLOCK LH = WCLK
+   DATA(1) = A0_BUF
+   SETUPTIME = {A0_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WCLK
+   DATA(1) = A1_BUF
+   SETUPTIME = {A1_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WCLK
+   DATA(1) = A2_BUF
+   SETUPTIME = {A2_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WCLK
+   DATA(1) = A3_BUF
+   SETUPTIME = {A3_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WCLK
+   DATA(1) = A4_BUF
+   SETUPTIME = {A4_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK LH = WCLK
+   DATA(1) = D_BUF
+   SETUPTIME = {D_WE_SETUP}
+ SETUP_HOLD:
+   CLOCK HL = WCLK
+   DATA(1) = A0_BUF
+   HOLDTIME =  {A0_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WCLK
+   DATA(1) = A1_BUF
+   HOLDTIME =  {A1_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WCLK
+   DATA(1) = A2_BUF
+   HOLDTIME =  {A2_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WCLK
+   DATA(1) = A3_BUF
+   HOLDTIME =  {A3_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WCLK
+   DATA(1) = A4_BUF
+   HOLDTIME =  {A4_WE_HOLD}
+ SETUP_HOLD:
+   CLOCK HL = WCLK
+   DATA(1) = D_BUF
+   HOLDTIME =  {D_WE_HOLD}
+ WIDTH:
+   NODE = WCLK
+   MIN_HI = {WCLK_WIDTH}
+   MIN_LO = {WCLK_WIDTH}

.ENDS X4E_RAMS32X1

*$

.SUBCKT X4E_WAND IN OUT IN_DLY
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: IN_D=0 OUT_D=0

UIN BUF DPWR DGND
+ IN IN_DLY
+ X4E_WAND_IN
+ IO_X4000E

.MODEL X4E_WAND_IN UGATE (
+  TPLHMN={IN_D} TPHLMN={IN_D}
+  TPLHMX={IN_D} TPHLMX={IN_D}
+  )

UENB INV DPWR DGND
+ IN_DLY ENB_BUF
+ D0_GATE
+ IO_X4000E

UOUT BUF3 DPWR DGND
+ IN_DLY ENB_BUF  OUT
+ X4E_WAND_OUT
+ IO_X4000E

.MODEL X4E_WAND_OUT UTGATE (
+  TPLHMN={OUT_D} TPHLMN={OUT_D}
+  TPLHMX={OUT_D} TPHLMX={OUT_D}
+  TPLZMN={OUT_D} TPHZMN={OUT_D}
+  TPLZMX={OUT_D} TPHZMX={OUT_D}
+  TPZLMN={OUT_D} TPZHMN={OUT_D}
+  TPZLMX={OUT_D} TPZHMX={OUT_D}
+  )


.ENDS X4E_WAND

*$

.SUBCKT X4E_WORAND I0 I1 OUT I0ORI1_DLY
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: I0_D=0 I1_D=0  OUT_D=0

UIN0 BUF DPWR DGND
+ I0 I0_BUF
+ X4E_WORAND_I0
+ IO_X4000E

.MODEL X4E_WORAND_I0 UGATE (
+  TPLHMN={I0_D} TPHLMN={I0_D}
+  TPLHMX={I0_D} TPHLMX={I0_D}
+  )

UIN1 BUF DPWR DGND
+ I1 I1_BUF
+ X4E_WORAND_I1
+ IO_X4000E

.MODEL X4E_WORAND_I1 UGATE (
+  TPLHMN={I1_D} TPHLMN={I1_D}
+  TPLHMX={I1_D} TPHLMX={I1_D}
+  )

UENBDLY OR(2) DPWR DGND
+ I0_BUF I1_BUF  I0ORI1_DLY
+ D0_GATE
+ IO_X4000E

UENB INV DPWR DGND
+ I0ORI1_DLY ENB_BUF
+ D0_GATE
+ IO_X4000E

UOUT BUF3 DPWR DGND
+ IN_BUF ENB_BUF  OUT
+ X4E_WORAND_OUT
+ IO_X4000E

.MODEL X4E_WORAND_OUT UTGATE (
+  TPLHMN={OUT_D} TPHLMN={OUT_D}
+  TPLHMX={OUT_D} TPHLMX={OUT_D}
+  TPLZMN={OUT_D} TPHZMN={OUT_D}
+  TPLZMX={OUT_D} TPHZMX={OUT_D}
+  TPZLMN={OUT_D} TPZHMN={OUT_D}
+  TPZLMX={OUT_D} TPZHMX={OUT_D}
+  )

.ENDS X4E_WORAND

*$

.SUBCKT X4E_OSC4 F8M F500K F16K F490 F15
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS

UF8M STIM(1,1) DPWR DGND
+ F8M
+ IO_X4000E
+   +0s 0
+   +62.5ns 1
+   Repeat Forever
+      +62.5ns 0
+      +62.5ns 1
+   EndRepeat

UF500K STIM(1,1) DPWR DGND
+ F500K
+ IO_X4000E
+   +0s 0
+   +1us 1
+   Repeat Forever
+      +1us 0
+      +1us 1
+   EndRepeat

UF16K STIM(1,1) DPWR DGND
+ F16K
+ IO_X4000E
+   +0s 0
+   +31.25us 1
+   Repeat Forever
+      +31.25us 0
+      +31.25us 1
+   EndRepeat

UF490 STIM(1,1) DPWR DGND
+ F490
+ IO_X4000E
+   +0s 0
+   +1.02040ms 1
+   Repeat Forever
+      +1.02040ms 0
+      +1.02040ms 1
+   EndRepeat

UF15 STIM(1,1) DPWR DGND
+ F15
+ IO_X4000E
+   +0s 0
+   +33.3333ms 1
+   Repeat Forever
+      +33.3333ms 0
+      +33.3333ms 1
+   EndRepeat

.ENDS X4E_OSC4

*$

.SUBCKT X4E_BSCAN TDI TMS TCK TDO1 TDO2 TDO DRCK IDLE SEL1 SEL2
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS

UTDI BUF DPWR DGND
+ TDI $D_NC
+ D0_GATE
+ IO_X4000E
UTMS BUF DPWR DGND
+ TMS $D_NC
+ D0_GATE
+ IO_X4000E
UTCK BUF DPWR DGND
+ TDI $D_NC
+ D0_GATE
+ IO_X4000E
UTDO1 BUF DPWR DGND
+ TDO1 $D_NC
+ D0_GATE
+ IO_X4000E
UTDO2 BUF DPWR DGND
+ TDO2 $D_NC
+ D0_GATE
+ IO_X4000E

UTDO PULLUP(1) DPWR DGND
+ TDO
+ IO_X4000E

UPULDN PULLDN(4) DPWR DGND
+ DRCK IDLE SEL1 SEL2
+ IO_X4000E

.ENDS X4E_BSCAN

*$

.SUBCKT X4E_PULLUP SIG ENB PENB
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS
+ PARAMS: PULLUP_D=0

.MODEL BTG1 UBTG

.MODEL ENB_GATE UGATE
+  TPLHMN={PULLUP_D} TPHLMN={PULLUP_D} 
+  TPLHMX={PULLUP_D} TPHLMX={PULLUP_D} 
+  )

UEDLY XOR DPWR DGND
+ ENB PENB  ENBDLY
+ ENB_GATE
+ IO_X4000E

UBTG NBTG DPWR DGND
+ ENBDLY PULLUPNODE SIG
+ BTG1 IO_X4000E

U1 PULLUP(1) DPWR DGND
+ PULLUPNODE
+ IO_X4000E_PULLUP

.ENDS X4E_PULLUP

*$

.SUBCKT X4E_PULLDOWN SIG
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS

U1 PULLDN(1) DPWR DGND
+ SIG
+ IO_X4000E

.ENDS X4E_PULLDOWN

*$

.SUBCKT X4E_RDBK TRIG DATA RIP
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS

UTRIG BUF DPWR DGND
+ TRIG $D_NC
+ D0_GATE
+ IO_X4000E

UPULDN PULLDN(2) DPWR DGND
+ DATA RIP
+ IO_X4000E

.ENDS X4E_RDBK

*$

.SUBCKT X4E_STARTUP
+ GSR PGSR GTS PGTS CLK PCLK Q2 Q2P Q3 Q3P Q1Q4 PQ1Q4 DONEIN PDONEIN
+ OPTIONAL: DPWR=$G_X4000E_VDD DGND=$G_X4000E_VSS

UPULUP PULLUP(4) DPWR DGND
+ Q2 Q3 Q1Q4 DONEIN
+ IO_X4000E

.ENDS X4E_STARTUP

